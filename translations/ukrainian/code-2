<h1>Кодування Розділ 2: Дані і змінні</h1>
<ul>
 	<li><a href="#data">Дані</a></li>
 	<li><a href="#types">Типи даних</a></li>
 	<li><a href="#variables">Змінні</a></li>
 	<li><a href="#localglobal">Локальні та глобальні змінні</a></li>
 	<li><a href="#lists">Списки</a></li>
 	<li><a href="#databases">Бази даних</a></li>
 	<li><a href="#challenge">Завдання з кодування #2: Створення додатку з тим, що треба зробити (To-Do List App)</a></li>
 	<li><a href="#reflect">Підсумки</a></li>
</ul>
&nbsp;

Наприкінці цього модулю ви будете
<ul>
 	<li>Розуміти, що таке дані і типи даних</li>
 	<li>Знати, як використовувати змінні і набори даних</li>
 	<li>Вміти організувати дані в списки</li>
 	<li>Знати, як створити додаток з тим, що треба зробити і який підв'язаний до бази даних</li>
</ul>
Цей розділ містить багато інформації, тому не переживайте, якщо ви чогось не зрозумієте одразу. Кращий спосіб зрозуміти концепцію і принципи кодування — це працювати, долаючи труднощі кодування, щоб побачити їх у дії! Ви завжди можете повернутися до цього розділув будь-який час, коли ви застрягнете, розробляючи фінальну версію додатку.
<h1 id="data">Дані</h1>
Ви, напевно, чули слово <b>дані</b>. Дані можуть означати багато речей, але в інформатиці, <b>дані</b> - це інформація, якої потребує ваш додаток для того, щоб працювати. Щоб краще зрозуміти це, давайте подумаємо про деякі додатках і інформацію, яка їм потрібна для того, щоб вони працювали.
<table width="1080" cellspacing="0" cellpadding="6"><colgroup> <col width="157" /> <col width="307" /> <col width="302" /> <col width="263" /> </colgroup>
<tbody>
<tr>
<td bgcolor="#ffffff" width="307">
<p align="center"><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image10.png" width="45" height="45" align="bottom" border="0" />

WhatsApp</p>
</td>
<td bgcolor="#ffffff" width="302">
<p align="center"><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image32.jpg" width="48" height="46" align="bottom" border="0" />

Angry Birds</p>
</td>
<td bgcolor="#ffffff" width="263">
<p align="center"><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/cropped-R-fullcolor-1.png" width="46" height="44" align="bottom" border="0" />

Slideshow</p>
</td>
</tr>
<tr valign="top">
<td bgcolor="#ffffff" width="307">Ти можеш дзвонити і списуватись з друзями</td>
<td bgcolor="#ffffff" width="302">Ця гра дозволяє стріляти птахами по свиням, щоб захиститись</td>
<td bgcolor="#ffffff" width="263">Це додаток, який ви створили в попередньому розділі</td>
</tr>
<tr valign="top">
<td bgcolor="#ffffff" width="307">
<ul>
 	<li>Ім'я користувача</li>
 	<li>Імена ваших друзів-користувачів</li>
 	<li>Повідомлення, яке ви плануєте надіслати</li>
 	<li>Година</li>
 	<li>Місцезнаходження</li>
</ul>
</td>
<td bgcolor="#ffffff" width="302">
<ul>
 	<li>Ваші бали</li>
 	<li>Скільки балів вартує кожен об'єкт</li>
 	<li>Який рівень ви пройшли</li>
 	<li>Скільки птахів ви маєте на кожному рівні</li>
</ul>
</td>
<td bgcolor="#ffffff" width="263">
<ul>
 	<li>Ваші улюблені картинки, фотографії</li>
</ul>
</td>
</tr>
</tbody>
</table>
Програміст повинен встановити шляхи для додатку, як отримати інформацію, що потрібна для додатку. Пам'ятайте, комп'ютери не можуть самостійно без інструкцій цього зробити. Ось кілька способів, які використовує App Inventor, щоб отримати дані для використання:
<ol>
 	<li>Програміст заносить інформацію</li>
 	<li>Користувач вводить інформацію</li>
 	<li>Додаток зв'язується з іншим місцем, щоб отримати інформацію</li>
</ol>
Ось більше прикладів того, що значать ці способи
<table width="996" cellspacing="0" cellpadding="6"><colgroup> <col width="300" /> <col width="669" /> </colgroup>
<tbody>
<tr>
<td valign="top" bgcolor="#ffffff" width="300">
<p align="center">Спосіб</p>
</td>
<td bgcolor="#ffffff" width="669">
<p align="center">Приклад</p>
</td>
</tr>
<tr valign="top">
<td bgcolor="#ffffff" width="300" height="74">Програміст заносить інформацію</td>
<td bgcolor="#ffffff" width="669">
<ul>
 	<li>В вашому додатку slideshow, ви (програміст) ввели ваші улюблені картинки</li>
 	<li>В Angry Birds програміст ввів скільки пташок гравець отримує на кожному рівні</li>
</ul>
</td>
</tr>
<tr valign="top">
<td bgcolor="#ffffff" width="300">Користувач вводить інформацію</td>
<td bgcolor="#ffffff" width="669">
<ul>
 	<li>В WhatsApp користувач має сказати додатку, що хоче відіслати і кому</li>
</ul>
</td>
</tr>
<tr valign="top">
<td bgcolor="#ffffff" width="300">Додаток зв'язується з іншим місцем, щоб отримати інформацію</td>
<td bgcolor="#ffffff" width="669">
<ul>
 	<li>WhatsApp зв'язується з вашим телефоном, щоб отримати інформацію про час, щоб знати, коли відіслати повідомлення</li>
</ul>
</td>
</tr>
</tbody>
</table>
Іноді додаток буде зберігати інформацію, яку користувач йому надає. Наприклад, WhatsApp зберігає історію повідомлень, яка дозволяє побачити останні повідомлення, які ви надіслали. Для цього програміст використовує базу даних, про яку ви дізнаєтеся на цьому уроці. Ви дізнаєтеся більше про те, як підключитися до інших місць, щоб отримати інформацію.
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3>h3>
Якщо ви використовували додаток, який дозволяє знайти найближчий продуктовий магазин, як ви гадаєте, що повинен додаток знати, щоб це зробити?

</div>
<h1>Типи даних</h1>
Типи данихли помітити з попереднього розділу, даними можуть бути багато речей! Для того, щоб комп'ютери їх легше розуміли і могли з ними працювати, дані розподіляються на категорії або <b>типи даних</b>. Мови програмування обертаються навколо трьох основних типів даних: числа, рядки і логічні дані. App Inventor також дозволяє використовувати більш складні типи даних, такі як кольори і зображення. Вам не потрібно нічого робити з з типами даних в цьому розділі, але було б добре, якби ви пам'ятали про це.
<h3>Числа</h3>
Число — це тип даних, який вам відомий! В App Inventor ви можете використовувати числа, перейшовши до математичних Math в блоках<i>.</i>

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image30.png" width="712" height="40" />

Ви будете використовувати Math блоки завжди, коли вам знадобляться числа. Ось кілька прикладів, коли вам знадобляться цифри в додатку.
<ul>
 	<li>Підрахунок балів гравця в грі</li>
 	<li>Підрахунок, скільки разів користувач намагався ввійти у свій обліковий запис (екаунт)</li>
 	<li>Підрахунок, скільки разів ви хочете, щоб ваш додаток робив ту чи іншу дію</li>
 	<li>Перевірка віку користувачів</li>
</ul>
Щоб дізнатись більше про те, що робити з математичними блоками, можна на MIT сайті: <a href="http://appinventor.mit.edu/explore/ai2/support/blocks/math.html" target="_blank">Math blocks</a>
<h3>Рядки</h3>
Рядок — це тип даних у вигляді тексту. В App Inventor, щоб створити рядок треба перейти до блоку текст Text<i>.</i> Ось кілька текстових блоків, які ви можете використовувати.<i> <img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image20.png" width="815" height="100" /> </i>

Ви повинні використовувати рядки кожного разу, коли додаєте текст до вашого коду. Ось кільки прикладів, коли вам знадобляться рядки в вашому додатку.
<ul>
 	<li>Перевірка того, чи користувацький пароль правильний</li>
 	<li>Щоб додаток проговорював слова до користувача</li>
 	<li>Показ повідомлення користувачеві</li>
</ul>
Перед тим, як йти далі, перегляньте сайт MIT, щоб побачити, що можна робити з текстовими блоками, текстом в додатках: <a href="http://appinventor.mit.edu/explore/ai2/support/blocks/text.html#string" target="_blank">Text blocks</a>
<h3>Логічні дані</h3>
Логічні дані можуть бути двох значень “правда” і “неправда” (<b>true</b> або <b>false</b>). True — означає “так”, а false - “ні”. Щоб отримати логічні дані, перейдіть до “logic” у вбудованих функціях, оберіть один з цих блоків: <img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image27.png" width="347" height="39" />

Наразі просто майте на увазі ці логічні дані, вони будуть детальніше описані в третьому розділі кодування.
<h1>Змінні</h1>
Одним з найбільш важливих концепцій в сфері кодування є <b>змінна</b>. Змінна — це частина даних, які можуть змінюватися в значенні. Найпростіший спосіб запам'ятати змінну — це зрозуміти, що змінна може змінюватися, або змінити в значення. В світі є багато інформації, яка важлива для вас кожен день, і значення якої змінюється. Ось деякі приклади:
<ul>
 	<li>Ваш вік</li>
 	<li>Ваш зріс</li>
 	<li>Ваше місцезнаходження</li>
 	<li>Сьогоднішня дата</li>
</ul>
Щоб краще зрозуміти змінні і використовувати їх в App Inventor, давайте розберемо приклад. Уявіть, що ви створюєте гру, де користувач може заробити і втратити бали. Ви хочете, щоб бали, які заробив гравець, були в текстовому полі. На початку гри гравець має нуль балів, так що ви можете додати такий блок.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image16.png" width="316" height="56" />

Гравець бачить нуль в текстовому полі, який містить його бали. Проте це значення буде змінюватись під час гри. Кожен раз, коли гравець отримує або втрачає бали, ви повинні оновити текстове поле. Коли гравець отримує більше балів, ви додаєте подібний блок.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image22.png" width="326" height="43" />

Зараз все працює, але що робити, коли наступного разу гравець отримає 10 балів? Вам доведеться оновити текст ще раз і вписати 20. А якщо гравець втрачає бали? Вам доведеться змінити кількість балів до 15. Що робити, якщо гравець отримує бали знову? Як бачимо, це може призвести до плутанини.

У сценаріях, як цей, ви можете створити змінну, щоб стежити за кількістю балів гравця. Ви можете створити змінну кількості балів, яка завжди має значення поточного рахунку гравця. Коли він грає в гру, ви можете додавати і віднімати бали від балів і вам не потрібно буде турбуватися про відстеження того, який поточний рахунок насправді. Ось як це буде працювати в App Inventor. Спочатку вам потрібно взяти цей блок з розділу змінних (variables section).

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image13.png" width="245" height="65" />

Цей блок каже додатку, що є змінні і просить вас надати змінній ім'я і значення. Ось який вигляд матиме блок для гравця, де бали починаються з нуля.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image28.png" width="284" height="51" />

Цим блоком ви кажете додатку, що буде частина даних, які матимуть назву “бали” і що вони будуть змінюватись під час гри. Щоразу, коли гра починається, додаток створюватиме змінну з назвою “бали” і значенням 0. Зараз ви можете зробити те, що називається “set” і “get” для вашої змінної “бали”. “Get” допоможе вам переглядати, яке значення балів зараз. Ось як ви скажете додатку відобразити бали в текстовому полі.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image17.png" width="476" height="45" />

“Set” дозволяє присвоїти нове значення для рейтингу вашого користувача. Кожен раз, коли гравець отримує бали, ви можете сказати додатку це робити

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image19.png" width="508" height="61" />

Це означає, що для того, щоб змінити значення балу, ваш додаток має додати до нього десять. Якщо поточний рахунок дорівнює нулю, нова оцінка буде 10. Якщо поточний рахунок 25, новий показник буде 35. Тепер вам не доведеться турбуватися про переписування балів кожен раз, коли ваш гравець отримує або втрачає бали. Додаток буде просто брати поточний рахунок і додавати до нього 10.

Не переживайте, якщо ви досі не розібрались у змінних! Їх дійсно важко зрозуміти, і кращий спосіб зрозуміти їх — це користуватись ними. Ви будете використовувати їх в задачах з кодування в кінці цього розділу і протягом наступних розділів.
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3> Завдання:</h3>
Візьміть один з ваших улюблених додатків і визначте як мінімум три можливості, коли розробники додатку використали змінні.

</div>
<h2 id="localglobal">Локальні та глобальні змінні</h2>
Можливо, ви помітили в розділі вище, що перед ім'ям змінної “бали” змінна сказала "global" (глобальна). В App Inventor ви можете мати два типи змінних, локальні і глобальних змінних. При створенні змінних, ви повинні думати про те, чи хочете ви використовувати змінну в декількох місцях в вашому коді, такі як змінна” бали”, або ж хочете використовувати її тільки в одному місці.

Глобальні змінні можна використовуватись будь-де. Як ви помітили вище, змінну “бали” необхідно використовувати кілька разів. Ви повинні були використовувати її, коли гравець заробив бали, коли гравець їх втратив, а також відображати її в текстовому полі. З Ви ніколи не можете повторно використовувати ім'я при використанні глобальної змінної. Якщо ви це зробили, ваш додаток не знатиме, які змінні використовувати. На щастя, App Inventor не дозволить вам створити дві змінні з однаковими іменами. Якщо ви сумніваєтеся в якої змінної типу використовувати, використовувати глобальний характер.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image15.gif" />

<b>Локальні змінні</b> можуть бути використані тільки в одному місці в коді. Якщо вам змінна вам потрібна, щоб відстежувати щось лише одному місці, використовуйте локальну змінну. ЇЇ можна буде використовувати лише в блоці "local variable" і App Inventor не дозволить вам використовувати її поза ним. На відміну від глобальних змінних, ви можете повторно використовувати імена локальних змінних.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image34.gif" />

У завданні з кодування ви побачите прикладитого, коли потрібно використовувати глобальні змінні, а коли - локальні: Щоб дізнатися більше про глобальні та локальні змінні, відвідайте веб-сайт МІТ: <a href="http://appinventor.mit.edu/explore/ai2/support/concepts/variables.html" target="_blank">Global and Local Variables</a>
<h1 id="lists">Списки</h1>
В світі так багато інформації, що це насправді може збити з пантелику! На щастя, у нас є способи організації, упорядкування даних таким чином, що ми можемо легко знайти і використовувати їх. Чи можете подумати зараз про якісь приклади, як організувати інформацію і об'єкти у вашому житті? Ось кілька прикладів того, що ви могли б зробити, щоб організувати речі:
<ul>
 	<li>Помістіть номери телефонів друзів в списку контактів</li>
 	<li>Покладіть олівці в пенал</li>
 	<li>Покладіть одяг у шафі</li>
</ul>
Програмісти використовують списки для упорядкування даних в своїх програмах. Списки складаються з багатьох даних і їх легко звідти отримати. Ви, можливо, зробив список справ або список продуктів перед тим, як іти в магазин. Списки в програмуванні дуже схожі. В App Inventor перейдіть до блоків і виберіть "списки" (lists). Список має наступний вигляд:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/MakeaList.png" alt="makealist" width="160" height="70" /> <img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/ItemList.png" alt="itemlist" width="254" height="122" />

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/Number-List.png" alt="number-list" width="194" height="119" />

Списки дійсно корисні для тримання великого обсягу інформації. Кожна річ в списку має індекс (<i>index</i>), який є числом, яке говорить вам, де він знаходиться в списку. Перший елемент в списку буде мати індекс 1, другий елемент в списку буде мати індекс 2 і так далі.

Давайте подивимось на список фруктів:<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image33.png" alt="fruit list" width="60%" />

Ось як ваш додаток бачить цю інформацію:

<b>List Name (назва списку): Fruits (фрукти)</b>
<ul>
 	<li>Apples/яблука (Index = 1)</li>
 	<li>Bananas/банани (Index = 2)</li>
 	<li>Oranges/апельсини (Index = 3)</li>
</ul>
Ви можете отримати одну річ зі списку, замість того, щоб використовувати весь список. Якщо ви хочете просто поставити рядок "банани" в текстове поле замість всього списку, Ви повинні були б сказати додатку подивитися на індекс 2 в цьому списку. Ось як можна помістити "банани" в текстове поле за допомогою App Inventor.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image25.png" width="516" height="60" />

Ви також можете додавати, видаляти чи змінювати місця речей в списку. До прикладу, ви забули додати “kiwis” (ківі) і “grapes”(виноград) до вашого фруктового списку. Додати їх можна так:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image37.png" alt="add to list" width="60%" />

Тепер додаток бачить список так:

<b>List Name: Fruits</b>
<ul>
 	<li>Apples (Index = 1)</li>
 	<li>Bananas (Index = 2)</li>
 	<li>Oranges (Index = 3)</li>
 	<li>Kiwis (Index = 4)</li>
 	<li>Grapes (Index = 5)</li>
</ul>
Списки потрібно використовувати завжди, коли у вас є кілька фрагментів інформації, які ви хочете включити під одне ім'я змінної. Наприклад, якщо ви хочете, щоб відображалась перша десятка найвищих балів за гру, ви могли б зробити десять змінних з такими іменами, як HighScore1, HighScore2, HighScore3 і так далі, поки не дійдете до HighScore10. Можна також скласти список під назвою Рекорди, що містить десять найвищих балів, а потім відобразити їх за допомогою індексів. Використання списку також дозволить вам легше змінювати і додавати вищі бали і заощадить вам багато часу!

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image05.png" alt="highscore1" width="60%" />

стає:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image31.png" alt="highscore2" width="60%" />

Звіртесь з сайтом MIT: <u><a href="http://appinventor.mit.edu/explore/ai2/support/blocks/lists.html#string">Lists</a></u>
<h1 id="databases">Бази даних</h1>
Змінні чудово підходять для зберігання інформації, коли користувач використовує ваш додаток. Але що робити, якщо вам потрібно зберігати інформацію в інший час, ніж коли користувач його відкриває і закриває? Ви можете це розбити за допомогою створення <b>бази даних </b>(<b>database</b>). База даних може зберігати інформацію для використання потім, навіть якщо додаток не використовується. Можна собі уявити, що база даних — це місце, де інформація зберігається до того часу, поки ви її не потребуватимете. Ось кілька прикладів баз даних, якими ви, можливо, користуєтесь щодня:
<ul>
 	<li>Список контактів - ви зберігаєте номери телефонів друзів, щоб ними за потреби скористатись</li>
 	<li>Додаток для повідомлень — зберігає історію ваших повідомлень</li>
 	<li>Записник — ви записуєте нотатки, щоб перечитати їх потім</li>
</ul>
<h3>TinyDB</h3>
Tiny DB дозволяє зберігати дані на телефоні користувачів вашого додатку і буде доступна кожного разу, коли користувач вмикатиме його. Важливо розуміти, що TinyDB дозволяє зберігати дані <i>локально</i>. Це значить, що два користувачі не зможуть поділитись даними через TinyDB. Коли користувач зберігає дані на TinyDB,до них буде доступ тільки на своєму телефоні, а не з інших. Ви навчитеьс, як поширювати інформацію між телефонами в розділі кодування 5.

Щоб використовувати TinyDB, перенеси його на екран <i>designer</i> сторони App Inventor. Воно буде як невидимий компонент (non visible component) і матиме такий вигляд:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image36.png" alt="TinyDB" width="25%" />

Ви можете поговорити з вашим TinyDB, зробивши до нього виклики (<i>calls</i>). Коли ви робите виклик, ви можете зберігати інформацію і отримати інформацію з нього. Зберігати дані в TinyDB можна, даючи їм тег (tag). Тег - це назва, яку ви будете використовувати для отримання даних. Це дуже схоже на назву змінної. Якщо ви використовуєте одну й ту саму назву тега для зберігання даних повторно, база даних буде перезаписувати або видаляти старі дані на нові. Це може бути корисно, якщо вам потрібно оновити те, що є у вашій базі даних, але ви повинні бути обережні і ніколи не повторювати імена тегів в іншому випадку!

Ось як можна зробити виклик до TinyDB:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image04.png" alt="TinyDB store global fruits" width="60%" /> <img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/Screen-Shot-2016-09-23-at-3.24.29-PM.png" alt="screen-shot-2016-09-23-at-3-24-29-pm" />

Перший блок показує, як зберігати значення в TinyDB. В цьому випадку ми зберегли наш список фруктів з тегом "Food". Другий блок показує, як отримати список фруктів з бази даних. Тег повинен бути написаний точно так, як це було, коли дані були збережені, в тому числі всі великі літери.

Щоб краще зрозуміти, давайте розберемо приклад. Наприклад, вам потрібно зберігати три записи в базі даних для подальшого використання. Одним з них є нашим списком <i>Fruits з</i> останнього розділу, інший - ваш вік, а останній - список справ, які ви любите робити. Ви зробили три запити з бази даних, як зображено тут:

&nbsp;
<table width="936" cellspacing="0" cellpadding="7">
<tbody>
<tr valign="top">
<td bgcolor="#ffffff" width="33%"><img class="" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image04.png" alt="TinyDB store global fruits" width="284" height="64" />

Tag Name: “Food”

Data:
<ul>
 	<li>“Apples”</li>
</ul>
<ul>
 	<li>“Bananas”</li>
 	<li>“Oranges”</li>
</ul>
</td>
<td bgcolor="#ffffff" width="34%"><img class="" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image00-1.png" alt="Tiny DB my age" width="300" height="81" />

Tag Name: “My Age”

Data: 16</td>
<td bgcolor="#ffffff" width="33%"><img class="" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image24.png" alt="TinyDB store favorites list" width="294" height="78" />

Tag Name: “Favorite”

Data:
<ul>
 	<li>“Learn how to Code”</li>
 	<li>“Visit Family”</li>
 	<li>“Listen to Music”</li>
</ul>
</td>
</tr>
</tbody>
</table>
Тепер, коли ви хочете видобути ваші записи, ваш запит може бути наступним:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image26.png" alt="TinyDB favorites value not tagged" width="371" height="98" />

При використанні цього блоку ви отримаєте "Learn how to Code Visit Family Listen to Music". Тепер ви хочете отримати інформацію про свій вік, так що ви робите наступний запит:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image12.png" alt="TinyDB my age value tag if not there" width="351" height="96" />

При використанні цього блоку ви просто отримаєте порожній рядок: "". Це відбувається тому, що тегу "myage" не існує в базі даних! Проте, тег "myage" існує. Так як ваша база даних не розпізнає тег, то за замовчуванням, вона показує вам блок поруч з "valueIfTagNotThere", що є порожнім рядком. Ви можете заповнити цей рядок вказавши, що хочете. Ви можете зробити його повідомленням про помилку своєму користувачеві.

Якщо ви створюєте додаток з кількома екранами, компоненти, дані і змінні не зможуть комунікувати один з одним між кожним екраном. Вам потрібно буде використовувати TinyDB для того, щоб передати інформацію від одного екрана вашого додатку до іншого. Відвідайте цю сторінку для отримання додаткової інформації: <a href="http://appinventor.mit.edu/explore/ai2/concepts.html#Screens" target="_blank">MIT Screens</a>

Вітаємо із завершенням цього Розділу! Тут було багато інформації, так що це нормально, якщо ви не розумієте все! Ви завжди можете повернутися до цього розділу, коли почнете розробку свого додаток.

Завдання з кодування призначене для того, щоб поєднати все, про що ви щойно дізнались і випробували це на практиці!
<h1 id="challenge">Завдання з кодування #2: Створення додатку списку справ (To-Do List App)</h1>
Опис: Створення Тo-do list дозволить користувачеві вводити і видаляти записи. Ваш додаток повинен запам ятовувати записи кожного разу, коли користувач відкриває додаток. Ви можете дізнатись більше як використовувати <a href="http://ai2.appinventor.mit.edu/reference/components/userinterface.html#ListView" target="_blank">ListView</a> перед тим, як почати виконувати завдання!

Подивіться наші приклади додатку тут: <a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.ToDoList" target="_blank">Technovation Challenge #2</a>

Спробуйте попрацювати над завданням самостійно перед тим як читати інструкції. Пам'ятайте, ці інструкцій — це всього лишень один зі способів вирішення задачі.

&nbsp;
<p style="text-align: center;"><strong><a href="/?p=16947" target="_blank">Переглянути інструкції</a></strong></p>
<p style="text-align: center;"><strong><a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.ToDoList&amp;hl=en" target="_blank">Завантажити зразок додатку </a></strong></p>
&nbsp;
<div style="background-color: #006667; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h1 id="reflect" style="color: white;">Підсумки</h1>
В цьому розділі ви дізнались про те, які є типи даних і різні шляхи їх упорядкування та зберігання. Ось кілька запитань для обговорення з ментором:

Запитання 1: Як інформація, які ви дізнались з цього розділу змінила ваше сприйняття додатків?

Запитання 2: Які елементи уроку будуть корисні для вас під час створення додатку?

В цьому розділі ви вивчили наступні ключові слова:
<ul>
 	<li>Дані — інформація, яку використовує ваш додаток</li>
 	<li>Типи даних — шлях, яким дані категоризовані</li>
 	<li>Числа - тип даних, які є числами</li>
 	<li>Рядки — тип даних, які є текстом</li>
 	<li>Логічні рядки — тип даних, які є true чи false</li>
 	<li>Змінні - назва частини даних, яка змінюється</li>
 	<li>Глобальні змінні — змінні, які можуть бути використані в будь-якій частині вашого коду</li>
 	<li>Локальні змінні - змінні, які можуть бути використані в конкретні частині вашого коду</li>
 	<li>Список — спосіб упорядкування даних</li>
 	<li>Index Списку — номер, який відображає, де дані в списку</li>
 	<li>База даних — місце, де зберігається і упорядковується інформація</li>
</ul>
<h1><span style="color: #ffffff;">Додаткові джерела</span></h1>
Ось кілька додаткових ресурсів про бази даних. Ви можете використовувати їх зараз або ж скористатись ними, коли розроблятимете свій додаток
<ul>
 	<li><a style="color: #eae46f;" href="https://drive.google.com/a/iridescentlearning.org/file/d/0B3rEYL3DkWfAd003UmM2cl9ITDg/view" target="_blank">TinyDB101</a></li>
 	<li><a style="color: #eae46f;" href="https://drive.google.com/a/iridescentlearning.org/file/d/0B3rEYL3DkWfAZUVQVGxPZzdXTXc/view" target="_blank">TinyDB102</a></li>
</ul>
</div>
