<h1>Kod 2 Görevi</h1>
<h1>Bir Yapılacaklar Listesi Hazırlayın</h1>
<ul>
 	<li><a href="#design">Ekranınızı tasarlamak</a></li>
 	<li><a href="#blocks">Listenize eklentiler yapmak</a></li>
 	<li><a href="#check1">Kontrol Noktası #1</a></li>
 	<li><a href="#delete">Girilenleri Silmek</a></li>
 	<li><a href="#check2">Kontrol Noktası #2</a></li>
 	<li><a href="#reset">Dinlenme Butonu</a></li>
 	<li><a href="#check3">Kontrol Noktası #3</a></li>
 	<li><a href="#tinyDB">Tiny DB (Veri Tabanı) Programlaması</a></li>
 	<li><a href="#final">Sonuncu Kontrol Noktası</a></li>
</ul>
<h3><strong>Description</strong></h3>
Kullanıcıların girip maddelerini silebilecekleri bir yapılacaklar listesi oluşturun. Uygulamanız, maddeleri kullanıcı her uygulamaya girdiğinde hatırlamalı. Görevi denemeden önce, <a href="http://ai2.appinventor.mit.edu/reference/components/userinterface.html#ListView" target="_blank" rel="noopener">ListView</a>'un nasıl kullanıldığını öğrenmek isteyebilirsiniz.

Örneğimizi burada görebilirsiniz: <a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.ToDoList" target="_blank" rel="noopener">Technovation Challenge #2</a>

Yönergeleri okumadan önce bu görevi kendi kendinize yapmayı deneyin. Unutmayın, bu yönergeler görevin yapılabileceği yalnızca bir yolu göstermektedir!. Mutlu kodlamalar!
<h3 id = "design">Ekranınızı Tasarlamak</h3>
Listeye maddeler eklenebilen, çıkartılabilen, baştan yapılmasını sağlayan ve kaydetme özelliği olan bir uygulama yaptık. Bu, ekranımızın üç farklı düğme kullanmamıza neden oldu: biri listeye maddeler eklenmesini sağlayan, diğeri bu listeyi bir dahaki sefer için kaydetmesini sağlayan, sonuncusu ise kullanıcının listeyi tamamen silmesini sağlayacak düğmeler.
<ol>
 	<li>Kullanıcınıza ne yapması gerektiğini söylemek için bir etiket (label) ekleyin.</li>
 	<li>Kullanıcının listeye madde ekleyebilmesi için bir yazı kutusu (textbox) ekleyin.</li>
 	<li>Kullanıcınız maddeyi eklediğinde basabilmeleri için bir düğme ekleyin.
 	<ol>
		<li style="font-weight: 400;" type="a"> Bu düğmeyi (button) bloklarımızı (blocks) programladığımızda ne yaptığını hatırlayabilmek amacıyla onları 'Giriş'                                  (Enter) diye isimlendirdik.</li>
	</ol>	
	</li>
	<li style="font-weight: 400;">Ekranınıza Liste Görünümü (ListView) ekleyin. Bu, kullanıcınızın oluşturduğu listeyi görmesini sağlayacaktır.
	<ol>	
		<li style="font-weight: 400;" type="a"> Biz genişlik ve yüksekliği 'Fill Parent' ile ayarlıyoruz ancak siz ekranınızı istediğiniz gibi tasarlayabilirsiniz!</li>

		<li style="font-weight: 400;" type="b">  <a href="http://ai2.appinventor.mit.edu/reference/components/userinterface.html#ListView" target="_blank" rel="noopener">ListView</a>'u nasıl kullanabileceğiniz hakkında daha fazla bilgi edinmek istiyorsanız buraya tıklayın.</li>
	</ol>
	</li>	
	<li style="font-weight: 400;">Veritabanınıza yapılacaklar listenizi kaydetmek amacıyla bir kaydet düğmesi (button), listenizi tamamıyla silmek için de bir sıfırlama (reset)                      düğmesi ekleyin.
	<ol>
		<li style="font-weight: 400;" type="a">Biz bu düğmeleri 'Kaydet' ve 'Sil' olarak isimlendirdik.</li>
	</ol>
	</li>	
	<li style="font-weight: 400;" >Opsiyonel: Biz, düzeni (layout) organize edebilmek için iki yatay düzlem ekledik, ancak siz ekranınızı istediğiniz gibi tasarlayabilirsiniz.</li>
</ol>
<img style="border: 1px solid #cccccc;" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image07-1024x552.png" alt="steps 1-6" width="1024" height="552" />
<ol start="7">
	<li style="font-weight: 400;">Depolama Menüsünden (Storage Menu), bir TinyDB (Veritabanı) ekleyin. Ekrana, sürüklendiğinde 'Görünmeyen eleman' (Non-visible component')olarak geçecektir.</li>
</ol>
<img style="border: 1px solid #cccccc;" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image06-1024x555.png" alt="step 7" width="1024" height="555" />
<h3 id="blocks"><strong>Yapılacaklar Listenize Maddeler Eklemek</strong></h3>
Uygulamamızda, kullanıcılar liste değişkeninde veri depolaması yaparak bunu sonradan liste gösterimi ile veri girişlerini görüntülemektedir. Bunu,<em> malzemeler</em> adlı bir liste değişkeni oluşturarak yaptık. Kullanıcımız giriş düğmesine tıkladığında, yazı kutusunun içerisindekileri liste malzemelerine ekleyerek liste görüntülemesiyle gösteriyoruz.
<ol>
 	<li style="font-weight: 400;"><em>malzemeler</em> adlı bir değişken yaratın. Kullanıcı daha herhangi bir veri girmediği için, bu değişkene boş bir liste olarak başlayın.</li>
 	<li style="font-weight: 400;">Giriş düğmeniz için bir adet<strong> düğme.tıkla</strong> (button.click) bloku alın.</li>
 	<li style="font-weight: 400;"><strong>Listelerden </strong>(lists) bir tane <strong>malzemeleri listeye ekle</strong> bloku alın (add items to list). Bu bloku <strong>giriş.tıkla</strong> olay işleyicisine aktarın (enter.click).</li>
 	<li style="font-weight: 400;">Liste adı olarak <em>malzemeler</em> koyun ve <strong>YazıKutusu1.Yazı</strong> (TextBox1.Text)'i  listeye eklenecek bir malzeme olarak yazın.</li>
 	<li style="font-weight: 400;"> <strong>set ListView1.Elements to </strong>blokunu alın ve <strong>add items to list</strong> blokunun altına koyun.</li>
 	<li style="font-weight: 400;"><em>Malzemeler</em> değişkeninizi <strong>set ListView1.Elements to</strong> blokuna ekleyin.</li>
 	<li style="font-weight: 400;">Opsiyonel: Uygulamamızın kullanımını kolaylaştırmak için, kullanıcı giriş'e bastığında klavyemizi sakladık. Bunu yapmak için TextBox1'e tıklayıp (YazıKutusu1.KlavyeyiSakla) <strong>TextBox1.HideKeyboard </strong>blokunu alın.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image08-1024x438.png" alt="blocks steps 1-7" width="898" height="236" />

<div style="background-color:#28a880; color:white; padding:25px; margin-top:25px; margin-bottom:25px">
<h3 id="check1"><strong>Kontrol Noktası #1</strong></h3>
	Şu ana kadar oluşturduklarınızın çalışıp çalışmadığını kontrol edin! Emülatörden veya telefonunuzu bağlayarak uygulamanızı test edebilirsiniz. Yazı kutusuna (textbox) yazdığınızda ve giriş butonuna tıkladığınızda yazdıklarınızın aşağıda, yani liste görüntülemesinde belirmesi gerekiyor (ListView). Uygulamanız çalışmıyorsa geri gidin ve devam etmeden önce olabilecek sorunları arayın. Eğer problemi bulamazsanız veya çözemezseniz, mentor veya takım arkadaşlarınıza danışabilirsiniz.
</div>	
<h3 id="delete"><strong>Yapılacaklar Listesine Girilenleri Silmek</strong></h3>
Kullanıcılarımız yapılacaklar listelerinde tamamladıkları veya artık istemedikleri verileri liste görüntülemesine (ListView) tıklayarak silebilirler.

Biz bunu <em>indeks (index) </em>adlı bir değişken kullanarak yaptık. Bu, kodun yalnızca bir kısmında kullanmamız gerektiği için lokal bir değişkendir. İndeks değişkenini kullanıcının liste görüntülemesinde (ListView) ne seçtiğine bağlı olarak indeks olmasını sağladık. Sonrasında, uygulamaya, <em>malzemeler</em> listesinden neleri çıkarmasını söylemek için <em>indeksi</em> kullandık. Bunun üzerine listedeki malzemeler değiştiği için, liste görüntülemesi (ListView) güncellenir.
<ol>
 	<li><strong>ListView1.AfterPicking</strong>  blokunu alın.</li>
 	<li><em>İndeks</em> adlı lokal bir değişken oluşturun ve bunu neyle başlamak isterseniz ona ayarlayın (set). Biz bizimkini sıfır olarak ayarlıyoruz.</li>
 	<li><strong>Set ‘name’ to </strong>değişken blokunu alın ve bunu <em>index</em> değişkenine ayarlayın.</li>
 	<li><strong>index is list, thing, list </strong>isimli bloku ekleyin.</li>
 	<li> <strong>thing</strong> (şey)'in <strong>ListView1.Selection </strong>olmasını ayarlayın ve <strong>list</strong> (listeyi)'i <em>malzemeler</em> listesi olarak ayarlayın.</li>
 	<li><strong>remove list item block</strong> (liste malzemelerini çıkarma bloku) alın ve lokal değişken blokunuzun içerisine koyun.</li>
 	<li><em>Malzemeler</em> değişkeninizi<strong> liste</strong>, <em>indeks</em> değişkeninizi de <strong>indeks</strong> olacak şekilde ayarlayın.</li>
 	<li><strong>set ListView1.Elements to </strong>blokunu, turuncu değişken blokunuzun altına yerleştirin ve <em>malzemeler</em> değişkeninize bağlayın.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/Blocks2.png" alt="blocks2" width="2276" height="753" />

<div style="background-color:#28a880; color:white; padding:25px; margin-top:25px; margin-bottom:25px">
	<h3 id="check2"><b>Kontrol Noktası #2</b></h3>
	Şu ana kadar oluşturduklarınızın çalışıp çalışmadığını kontrol edin! Emülatörden veya telefonunuzu bağlayarak uygulamanızı test edebilirsiniz. Şimdi uygulamanızı kullandığınızda, yapılacaklar listenizdeki malzemelere dokunarak girdiğiniz verileri silebiliyor olmalısınız. Uygulamanız çalışmıyorsa geri gidin ve kodunuzu kontrol edin.  Eğer takılırsanız, bazı ListView öğrenimlerine (tutorials) bakabilir, mentor veya takım arkadaşlarınıza danışabilirsiniz!
</div>
<h3 id="reset"><strong>Silme düğmesini programlama</strong></h3>
Uygulamamızı daha kolay kullanılabilir hale getirmek amacıyla, yapılacaklar listesine işlenen tüm malzemeleri silebilecek bir düğme koyduk. Bu düğmeyi, kullanıcı tıkladığında listeyi boş haline çevirecek şekilde programladık. Sonra, liste <em>malzemelerinin</em> yeni ve boş halini gösterebilmesi amacıyla liste görünümünü (ListView) güncelledik.
<ol> 
 	<li>Silme tuşunuz için<strong> when button.click </strong>tuşunu alın.</li>
 	<li><em>Malzemeler</em> listenizi seçebilmek için <strong>set ‘name’ to </strong>blokunu alın.</li>
 	<li><strong>create empty list </strong>blokunu ilave edin.</li>
 	<li> <strong>set ListView1.Elements to </strong>blokunu alın ve <em>malzemeler</em> değişken blokunu birleştirin.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image02-1-1024x297.png" alt="Reset steps 1-4" width="678" height="197" />

<div style="background-color:#28a880; color:white; padding:25px; margin-top:25px; margin-bottom:25px">
	<h3 id="check3"><strong>Check Point #3</strong></h3>
	Silme tuşunuzun çalıştığına emin olun! Emülatörden veya telefonunuzu bağlayarak uygulamanızı test edebilirsiniz. Listenize veriler girdikten sonra tümünü silme düğmesine basarak silebiliyor olmalısınız. Eğer takılırsanız, mentor veya takım arkadaşlarınıza danışabilirsiniz!
</div>

<h3 id="tinyDB"><strong>TinyDB Programlaması</strong></h3>
Kullanıcımız uygulamayı kapattığında, yapılacaklar listesi bir dahaki sefer için kaydolmaktadır. Biz, kullanıcının <em>malzemeler </em>listesini kaydedebilmesi amacıyla veri tabanı (TinyDB) olarak isimlendirebileceğimiz"kaydet" tuşunu oluşturduk. Veri tabanı, en son yazılanları kullanıcının bir dahaki uygulamayı kullanımı için kaydetmektedir.
<ol>
 	<li>Kaydetme düğmeniz için <strong>when button.Click </strong>tuşunu alın.</li>
 	<li><strong>call TinyDB1.StoreValue </strong>blokunu ekleyin.</li>
 	<li>Bir <strong>tag </strong>ismi ekleyin.</li>
 	<li><em>Malzemeler</em> listenizi  <strong>valueToStore</strong>'a ekleyin.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image01-1024x315.png" alt="TinyDB steps 1-4" width="809" height="249" />

Uygulamamız önceden veri tabanına kaydolmuş başka yapılacak listeleri olup olmadığını görmek için veri tabanını kontrol etmektedir. Bunu  yapmak için, <strong>when Screen1.Initialize </strong>blokunu kullandık, bu blok Ekran1 (Screen1) başladığında harekete geçecektir. "ListData" veri tabanı adı (tag) altında olanları <em>malzemeler</em> listesine ayarladık. Eğer kaydedilmiş veri yok ise, uygulamamıza boş bir liste veya yeni bir yapılacaklar listesi oluşturmasını söyledik. Bundan sonra, uygulamamız <em>malzemeler</em> değişkeninin içinde olanları yani şimdi ya kaydedilmiş veriler ya da boş liste olarak göstermekte.
<ol>
 	<li> <strong>when Screen1.Initialize</strong> blokunu alın</li>
 	<li><strong>set ‘variable name’ to </strong>blokunu alın ve değişkeninizi<em> malzemeler</em> listeniz olacak şekilde ayarlayın.</li>
 	<li><strong>call TinyDB1.GetValue </strong>blokunu kullanarak veri tabanınızı çağırın.</li>
 	<li><strong>Tag</strong> için kullandığınız ve kaydettiğiniz listenin tag (adını) girin.</li>
 	<li><strong>create empty list </strong>(boş liste oluştur) blokunu<strong> valueIfTagNotThere</strong> (Tag orada değilse değer) için koyun.</li>
 	<li><strong>set ListView1.Elements to </strong>blokunu alın ve <em>malzemeler</em> değişkeninize ekleyin.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image18-1024x321.png" alt="TinyDB steps 1-6" width="986" height="309" />

<div style="background-color:#28a880; color:white; padding:25px; margin-top:25px; margin-bottom:25px">
	<h3 id="final">Son Kontrol Noktası</h3>
	Şimdi sıra uygulamanızın çalışıp çalışmadığını görmekte! Uygulamanızı çalıştırın ve yapılacaklar listenize bazı veriler girin. Kaydet tuşunuza basın ve telefon veya emülatorden AI companion uygulamanızdan çıkın. Girdiklerinizin kaydolup olmadığını görmek için uygulamanızı tekrardan açın. Eğer değillerde, deri dönün ve kodunuzda bir sıkıntı olup olmadığını kontrol edin. Tag isimlerinizi büyük harflerin de tamı tamına uyup uymadığını kontrol ederek kontrol edin. Eğer her şey çalışıyorsa, görevi tamamladınız! Tebrikler!

	Hala takıldığınız noktalar mı var? Kaynak kodumuzu indirin. Kaynak kodumuzun nasıl indirilip kullanılacağı hakkındaki <a style="color: #eae46f;" href="http://appinventor.mit.edu/explore/ai2/share.html" target = "_blank">yönergelerin</a> hepsini burada bulabilirsiniz.
	<h3></h3>
	<a style="color: #eae46f;" role="button" href="https://drive.google.com/file/d/0B9HV58UviqU_a2lTVFdUb0hGbGM/view?usp=sharing" target="_blank" rel="noopener">Kaynak kodunu indirin</a>
</div>
