<ul>
 	<li><a href="#design">Design da tela</a></li>
 	<li><a href="#newscreen">Como adicionar dados à base de dados</a></li> 	
 	<li><a href="#data">Como criar listas de nomes de tag e valores de bases de dados </a></li>
 	<li><a href="#search">Checkpoint</a></li>
 	<li><a href="#list">Como programar o botão "Search"</a></li>
 	<li><a href="#check2">Checkpoint</a></li>
 	<li><a href="#check1">Como exibir resultados em outra tela</a></li>
 	<li><a href="#finalcheck">Checkpoint final</a></li>
</ul>
<h3><strong>Descrição</strong></h3>
Descrição: Crie um aplicativo que permita ao usuário buscar informações em uma base de dados e ver os resultados. A base de dados deve conter nomes e descrições de pessoas famosas, locais, filmes, músicas, eventos ou o que mais você quiser. Certifique-se de ter, no mínimo, três entradas na base de dados.

Tente fazer o desafio sozinha antes de ler as instruções. As instruções são apenas uma maneira de solucionar o desafio. Baixe o aplicativo exemplo na 
<a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.DatabaseSearch">loja Google Play</a>. 

Boa programação!
<h2><strong>Plano geral</strong></h2>
Para nosso aplicativo, criamos uma base de dados de cientistas mulheres famosas e incríveis. Sinta-se à vontade para copiar estes textos ou criar seus próprios dados!

Decidimos abordar esse desafio armazenando os dados em uma TinyDB. Armazenamos a descrição das cientistas com nomes de tag com seus próprios nomes. Após isso, fizemos duas listas, uma com o nome da pessoa e outra com as descrições. O usuário digitará o texto e o aplicativo buscará corresponder itens em ambas as listas. Se houver correspondência, o nome da mulher aparecerá no ListView. O usuário poderá então selecionar a cientista da qual quer saber mais e uma nova tela se abrirá com a descrição do seu trabalho. Para esse aplicativo, usamos uma TinyDB para armazenar os dados e usá-los em telas separadas.
<table>
<tbody>
<tr>
<td style="text-align: right;"><b>Name/<strong>Nome </strong> (Tag/<strong>Tag</strong>)</b></td>
<td><strong>Descrição</strong></td>
</tr>
<tr>
<td style="text-align: right;">Ada Lovelace</td>
<td>Ada foi uma escritora e matemática inglesa que viveu no século XIX e é conhecida principalmente por seu trabalho no computador mecânico para vários propósitos de Charles Baggage, a Máquina Analítica. Ada é muitas vezes considerada a primeira pessoa a programar, por ter escrito o primeiro algoritmo a ser utilizado por uma máquina.</td>
</tr>
<tr>
<td style="text-align: right;">Marie Curie</td>
<td>Marie foi uma física e química nascida em Varsóvia, Polônia, em 1867. Ela descobriu 2 novos elementos radioativos, junto com seu marido Pierre. Marie ganhou o Prêmio Nobel em 1903. Além disso, ela também descobriu o rádio gasoso, que poderia ser usado para o tratamento de câncer.</td>
</tr>
<tr>
<td style="text-align: right;">Alice Ball</td>
<td>Alice foi uma química nascida em Seattle, nos EUA, em 1892. Ela foi a primeira pessoa negra e primeira mulher a se formar na Universidade do Havaí.  Com apenas 23 anos, Alice desenvolveu uma cura para a lepra, que era vista como incurável antes de sua pesquisa.</td>
</tr>
<tr>
<td style="text-align: right;">Sau Lan Wu</td>
<td>Sau Lan é uma física de partículas nascida no começo da década de 40, durante a ocupação japonesa de Hong Kong. Ela possui doutorado em Harvard. Liderou a equipe de pesquisa que descobriu o glúon. Ela é uma das mais importantes físicas de partículas na sua área e fez muitas descobertas inovadoras.</td>
</tr>
<tr>
<td style="text-align: right;">Patricia Bath</td>
<td>Patricia é uma oftalmologista e inventora nascida em 1942, no Harlem, na cidade de Nova York. Ela terminou o Ensino Médio em apenas dois anos e meio e já sabia que queria ser médica. Em 1985, ela completou sua invenção que remove cataratas e restaura a visão de pessoas ao redor do mundo.</td>
</tr>
</tbody>
</table>
<h2 id="design"><strong><span lang="UK">Design da tela</span></strong></h2>
Queremos permitir ao usuário pesquisar em uma base de dados, então adicionaremos uma caixa de texto para o usuário digitar e um botão para clicar quando quiser pesquisar.  Já que sabemos que usaremos uma base de dados para armazenar os dados, então arrastamos uma TinyDB para a tela. Como também usaremos listas, adicionamos uma ListView para a tela.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image17-1024x553.png" alt="image17" width="1024" height="553" />
<h2 id="data"><strong><span lang="UK">Como adicionar dados à base de dados</span></strong></h2>
Decidimos adicionar o nome da cientista como uma tag e a descrição do seu trabalho como um valor da base de dados. Copiamos e colamos as informações que queremos adicionar à base de dados assim:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image37-1024x580.png" alt="image37" width="680" height="386" />

Você deve armazenar as informações na base de dados assim que a tela inicializar, então essa deve ser a primeira coisa que seu aplicativo faz. Será necessária uma base de dados para armazenar essas informações, caso queira usá-la em outras telas.

<h2 id="list"><strong><span lang="UK">Como criar listas de nomes de tag e valores de bases de dados </span></strong></h2>
Criamos uma lista para armazenar os nomes de tag. Criamos uma lista vazia chamada "TagNames". Depois, adicionamos blocos para cada um dos nomes de tag na lista. É importante se certificar de que os nomes de tag adicionados à lista correspondam exatamente aos nomes de tag na base de dados, inclusive letras maiúsculas e minúsculas.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image58-1024x548.png" alt="image58" width="849" height="455" />

Agora que temos uma lista completa com todos os nomes de tag, precisamos criar outra lista com todos os valores da base de dados na mesma ordem que os nomes de tag. Primeiro, criamos uma lista vazia chamada “databaseValues” para guardar todos os valores da base de dados. Depois, adicionamos valores à lista na mesma ordem correspondente às tags, usando um loop for. Para cada item na lista "tagNames", adicionamos um valor da base de dados à lista "databaseValues". Então, adicionamos o loop for ao event handler When Screen1.Initialize, que é quando a Tela 1 for inicializada.

<img class="aligncenter" src="http://technovationchallenge.org/wp-content/uploads/2016/11/DBvar.png" alt="" width="419" height="42" />

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image42-1024x314.png" alt="image42" width="600" height="184" />

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image50-1024x470.png" alt="image50" width="650" height="298" />
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="check1"><strong>Checkpoint</strong> #1</h3>
Neste ponto, você deve ter todos os dados na base de dados, bem como uma lista com todos os nomes de tag e outra com os valores da base de dados. Certifique-se de que cada uma das listas contém os valores que você quer! Como seu aplicativo ainda não faz nada, você pode verificar seu trabalho exibindo suas listas em ListView e confirmando se está tudo lá. Adicione esse bloco ao seu código embaixo do loop for no event handler when Screen1.Initialize para confirmar se a lista "tagNames" está correta.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image00-1024x90.png" alt="image00" width="418" height="37" />

Adicione esse bloco ao seu código embaixo do loop for no event handler <em>hen Screen1.Initialize </em>para confirmar se a lista "databaseValues" está correta.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image48-1024x78.png" alt="image48" width="456" height="35" />

Após verificar se as listas estão corretas, certifique-se de deletar os blocos!

</div>
<h2 id="search"><strong><span lang="UK">Como programar o botão "Search"</span></strong></h2>
Queremos que o usuário possa pesquisar na base de dados digitando na caixa de texto e apertando o botão "search" para pesquisar. Para fazer isso, colocaremos um event handler no botão que buscará em todos os itens das listas "tagNames" e "databaseValues" por strings que correspondam ao que o usuário digitou na caixa de texto. Se houver correspondência, adicionamos o nome da cientista ao ListView. Veja como fizemos. 

Primeiro, criamos uma variável chamada "searchResults", ou resultados da busca, e definimos ela a uma lista vazia:

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image03-1-1024x88.png" alt="image03" width="439" height="38" />

Depois, adicionamos um event handler ao botão de busca. Dentro dele, adicionamos um bloco para definir os resultados de busca novamente para uma lista vazia. Isso porque, cada vez que o usuário clica em "search", queremos limpar os itens que já tenham sido adicionados à lista "searchResults" na última busca.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image02-1024x183.png" alt="image02" width="441" height="79" />

Depois, definimos um <strong>loop for</strong> para buscar nos itens das listas "tagNames" e "databaseValues". Não usamos o loop for para cada item na lista porque queremos usar uma variável counter no loop for. Iniciamos o <strong>loop for</strong> em 1 e o terminamos no número de itens na lista.  Mudamos o nome da variável para index, ou índice. 

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image54-1024x383.png" alt="image54" width="519" height="194" />

O bloco usado para comparar o texto digitado na caixa para buscar em itens da lista "tagNames" é o seguinte: A variável "index" aumenta em 1 para cada vez que o loop se repete, então, ela eventualmente vai comparar o texto digitado com todos os itens da lista "tagNames". Escolhemos escrever tudo em letras minúsculas para que letras maiúsculas não importem na busca. O bloco "contains text", ou contém texto, dá um valor verdadeiro se a variável <em>piece</em> aparecer no <em>texto</em>

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image28-1024x172.png" alt="image28" width="508" height="85" />

Para comparar a pesquisa do usuário com a lista "databaseValues", usamos o mesmo bloco, mas trocando o nome da lista.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image51-1024x161.png" alt="image51" width="585" height="92" />

<em>Queremos mostrar ao usuário o nome da cientista cujo nome ou descrição pesquisa corresponde à pesquisa do usuário. Para fazer isso, usamos os dois blocos anteriores com uma condicional e uma operação de lógica OR. </em>

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image05.png" alt="image05" width="215" height="93" />

O código deve ficar assim, após preencher a operação OR

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image10-1024x223.png" alt="image10" width="1024" height="223" />

Queremos que nosso código adicione o nome das cientistas à lista "searchResults" se o nome ou a descrição dela corresponder aos termos pesquisados pelo usuário. Para fazer isso, quando houver correspondência, adicionamos o nome de "tagNames" usando a variável loop "index". Não queremos adicionar else à estrutura condicional, porque se o nome ou a descrição não corresponder, queremos que o código faça nada.  Então, adicionamos os itens na lista "searchResults" para a ListView. Como esse bloco fica fora do loop for, o código só atualiza a ListView depois de o loop terminar.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image39-1024x302.png" alt="image39" width="1024" height="302" />
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="check2"><strong><span lang="UK">Checkpoint</span></strong><b> #2</b></h3>
Você acabou de escrever muito código! Verifique se já consegue pesquisar algo. Tente pesquisar um nome, como "Alice" ou uma ocupação, como "química".

</div>
<h2 id="newscreen"><strong><span lang="UK">Como exibir resultados em outra tela</span></strong></h2>
Decidimos que o aplicativo pode ficar melhor se o usuário puder escolher a cientista exibida nos resultados da busca para aprender mais sobre ela. Para fazer isso, quando o usuário escolher algo da lista, abrimos uma tela nova com um "startValue", ou valor inicial, com a seleção do usuário. Lembre-se, as duas únicas maneiras de passar dados entre telas é com uma base de dados ou um bloco startValue!

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image31.png" alt="image31" width="597" height="108" />

Desenhamos a segunda tela com duas labels. Uma mostra o nome da cientista e outra a descrição. Também adicionamos um botão para retornar à Tela1. Não se esqueça que também precisamos adicionar uma TinyDB a essa nova tela!

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image56-1024x509.png" alt="image56" width="1024" height="509" />

Como o valor inicial é o nome da cientista, mostramos o valor inicial na Label1 e usamos isso para recuperar a descrição da cientista na base de dados e mostrá-la na Label2. Você encontra o bloco <em>get start value</em> da categoria control, ou <em>controle</em>.

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image06.png" alt="image06" width="636" height="175" />

Não se esqueça de programar o botão "back" para voltar para a primeira tela!

<img class="aligncenter" src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image11-1024x198.png" alt="image11" width="471" height="91" />

<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="finalcheck"><strong><span lang="UK">Checkpoint final</span></strong></h3>
Certifique-se de que tudo no seu aplicativo está funcionando! Será que se você selecionar um item na ListView, você abrirá uma Tela2 com o nome da tag e o valor da base de dados?

Ainda está com dificuldades? Baixe o <a style="color: #eae46f;" href="https://drive.google.com/file/d/0B9HV58UviqU_YXU1eTBKMDN1ZVE/view?usp=sharing" target="_blank"><strong>código-fonte</strong></a>.

</div>
