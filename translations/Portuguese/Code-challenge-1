<h1>Desafio de programação #1</h1>
<h1>Fazer uma apresentação de slides</h1>
<ul>
 	<li><a href="#design"><span style="font-weight: 400;">Design da tela</span></a></li>
 	<li><a href="#blocks">Como programar os blocos</a></li>
 	<li><a href="#check">Checkpoint!</a></li>
 	<li><a href="#finish">Toques finais do aplicativo</a></li>
 	<li><a href="#final">Final Check Point!</a></li>
</ul>
<h3 id="design"><strong>Design da tela</strong></h3>
Explicação: Para este aplicativo, você precisa criar uma galeria de imagens na qual seu usuário possa navegar. Ao fazer o design da tela, você deve inserir uma imagem e os botões de "anterior" e "próximo" para seu usuário clicar. Essa parte é feita na tela designer.
<ol>
 	<li>Adicione uma imagem à tela.
<ul>
 	<li><span style="font-weight: 400;">Ajuste-a para caber na tela trocando os valores de largura e altura!</span></li>
 	<li>Selecionamos a opção “fill parent” para a imagem. Ao selecionar "fill parent", você comanda o componente a ocupar todo o espaço em que ele se encontra. Image1 é a parte interna da tela, mas os botões estão dentro da caixa horizontal. É possível ver quais coisas estão dentro de outras vendo como elas estão listadas no menu de componentes.</li>
</ul>
</li>
 	<li>Adicione um layout horizontal à tela abaixo da imagem.</li>
 	<li>Adicione dois botões ao layout.
<ul>
 	<li>Clique em "buttons" no menu de componentes
<ul>
 	<li>Altere o texto dos botões para "anterior" e "próximo"</li>
 	<li>É importante mudar o nome dos botões para você se lembrar do que eles fazem! Mudamos os nossos para "anterior" e "próximo". É só clicar em "rename" (renomear) abaixo dos componentes.</li>
</ul>
</li>
</ul>
</li>
 	<li>Faça o upload da imagem que será usada na apresentação!</li>
 	<li>Selecione a imagem que será usada como primeira tela da apresentação.
<ul>
 	<li>Clique em "Image1" no menu "Components", componentes, e clique em "Picture”, figura, no menu de propriedades. Você pode escolher uma das imagens que foram enviadas.</li>
</ul>
</li>
 	<li>Adicione no mínimo mais duas telas. Usamos três telas em nossa apresentação, mas você pode fazer com quantas quiser.
<ul>
 	<li>Não é necessário fazer nada com essas telas, mas você adicionará botões e imagens a elas após programar os blocos, como fez com esta tela.</li>
</ul>
</li>
</ol>
<img src="http://www.iridescent.staging.wpengine.com/wp-content/uploads/2016/09/designer.png" alt="designer" width="1440" height="772" />
<h3 id="blocks"><strong>Como programar os blocos</strong></h3>
Explicação: Agora que as telas estão configuradas, elas precisam fazer algo. Quando o usuário clicar nos botões, seu aplicativo deve abrir outra tela com outra imagem. Você usará os event handlers de botões para isso.
<ol start="7">
 	<li>Clique no botão nomeado "anterior" para ver os handlers que podem ser usados. Clique no event handler <strong>when button.click</strong> e arraste-o para a área de trabalho.</li>
 	<li>Clique em <strong>control</strong> (controle) e encontre o bloco "open another screen screenName", para abrir outra tela.</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Coloque uma caixa de texto vazia no bloco <strong>open another screen screenName</strong>. Digite o nome da </span><i><span style="font-weight: 400;">última</span></i><span style="font-weight: 400;"> tela mostrada na apresentação. No nosso caso, foi "Screen3".</span></li>
 	<li>Clique no botão "próximo" e clique novamente no event handler <strong>when button.click</strong>.</li>
 	<li>Pegue outro bloco <strong>open another screen screenName</strong> do controle.</li>
 	<li>Coloque outra caixa de texto vazia e digite o nome da próxima tela que deve aparecer na apresentação. (No nosso caso, foi "Screen2").</li>
</ol>
<img src="http://www.iridescent.staging.wpengine.com/wp-content/uploads/2016/09/blocks.png" alt="blocks" width="1440" height="766" />
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="check"><strong>Checkpoint!</strong></h3>
Antes de continuar, é hora de verificar se o código funciona. É bom verificar pedaços de código para garantir que estejam funcionando antes de programar um aplicativo inteiro. Caso contrário, você pode desenvolver o aplicativo completo e ainda ter recursos que não funcionam (o que pode dificultar para encontrar a causa do erro)!

Acesso o App Inventor do seu celular, tablet ou emulador. Os botões funcionam como deveriam? Os nossos funcionaram: "anterior" volta para a tela "Screen3" em branco e "próximo" leva para outra tela em branco "Screen2". Caso os botões não estejam fazendo o que deveriam, volte um pouco e verifique se a programação está correta.

<em>Dica: Como não havia nada nas telas "Screen2" e "Screen3", voltamos para a tela 1 pelo App Inventor no computador. O App Inventor permite que você navegue pelas telas do celular ou emulador usando o computador. Esse é um bom truque para ser usado depois.</em>

</div>
<h3 id="finish"><strong>Toques finais do aplicativo</strong></h3>
Explicação: Agora que configurou e programou uma tela, você pode fazer o mesmo com o resto! Caso queira, você pode adicionar mais telas, mas certifique-se de que a apresentação tenha pelo menos três. Os diagramas abaixo mostram como deve ser o fluxo.
<ol start="13">
 	<li>Repita as etapas 1 a 12 para todas as telas. Certifique-se de que o botão "próximo" leva para a próxima tela e o "anterior" para a tela anterior.</li>
</ol>
<img src="http://www.iridescent.staging.wpengine.com/wp-content/uploads/2016/09/3Screen-Diagram.png" alt="3screen-diagram" />

<img src="http://www.iridescent.staging.wpengine.com/wp-content/uploads/2016/09/4Screen-Diagram.png" alt="4screen-diagram" />
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="final"><strong>Checkpoint final!</strong></h3>
<span style="font-weight: 400;">Empacou? Baixe o </span><a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.Slideshow" target="_blank" rel="noopener"><span style="font-weight: 400; color: #eae46f;">aplicativo de exemplo</span></a>

<span style="font-weight: 400;"> da loja Google Play para ver como funciona. Você também pode baixar o código-fonte deste desafio aqui: </span>

<a href="https://drive.google.com/open?id=0B9HV58UviqU_UUotS1BieWxGTWM" target="_blank" rel="noopener"><span style="font-weight: 400; color: #eae46f;">Código-fonte da apresentação.</span></a>

<a href="http://appinventor.mit.edu/explore/ai2/share.html" target="_blank" rel="noopener"><span style="font-weight: 400; color: #eae46f;">Instruções sobre como baixar e usar códigos-fonte.</span></a>

&nbsp;

</div>
