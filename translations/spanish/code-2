
<h1>Datos y variables</h1>
<ul>
<li><a href="#data">Información</a>
		</li>
<li><a href="#types">Tipos de información</a>
		</li>
<li><a href="#variables">Variables</a>
		</li>
<li><a href="#localglobal">Local and Global Variables</a>
		</li>
<li><a href="#lists">Listas</a>
		</li>
<li><a href="#databases">Databases (Bases de datos)</a>
		</li>
<li><a href="#challenge">Desafío de programación</a>
		</li>
<li><a href="#reflect">Reflexión</a>
		</li>
</ul>

<p>Al final de este módulo...</p>
<ul>
<li style="font-weight: 400;">Entenderás los datos y sus distintos tipos</li>
<li style="font-weight: 400;">Serás capaz de usar variables y bases de datos</li>
<li style="font-weight: 400;">Podrás organizar los datos en listas</li>
<li style="font-weight: 400;">Crearás un gestor de tareas conectado a una base de datose</li>
</ul>
<p>Esta unidad contiene mucha información, y está bien si no entiendes todo ahora. La mejor manera de entender los conceptos de programación es realizando los desafíos de programación para verlos en acción. Podrás volver a esta unidad siempre que te quedes atorada creando tu aplicación final.</p>

<h3 id="data">Información</h3>
<p>En algún momento de tu vida habrás escuchado sobre la palabra data (información o datos). La palabra data puede significar muchas cosas, pero en la ciencia informática, data es la información que tu app necesita para poder funcionar. Para entender esto, pensemos en otras apps y en la información que estas necesitan para funcionar.</p>
<table>
<tr valign="top">
<td width="33%" valign="top">
<center>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image10.png" alt="WhatsApp logo" width="46" height="46" /></p>
<p style="text-align: center;"><strong>WhatsApp</strong></p>
<p style="text-align: center;">Puedes mandar mensajes y llamar a tus amigos usando:</p>
</center>
<ul>
<li>Tu nombre de usuario</li>
<li>Los nombres de usuario de tus amigos</li>
<li>Los mensajes que quieres enviar</li>
<li>La hora</li>
<li>Tu ubicación</li>
</ul>
	</td>
	<td width="33%" valign="top">
<center>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image32.jpg" alt="Angry Birds logo" width="46" height="46" /></p>
<p style="text-align: center;"><strong>Angry Birds</strong></p>
<p style="text-align: center;">Este juego te permite lanzar aves a chanchos para derrotarlos usando:</p></center>
<ul>
<li style="text-align: left;">Tu puntaje</li>
<li style="text-align: left;">Cuántos puntos vale cada objeto</li>
<li style="text-align: left;">Qué niveles has completado</li>
<li style="text-align: left;">Cuántas aves recibes en cada nivel</li>
</ul>
	</td>
	<td width="33%" valign="top">
	<center>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/cropped-R-fullcolor-1.png" alt="Technovation logo" width="46" height="46" /></p>
<p style="text-align: center;"><strong>Slideshow Challenge App</strong></p>
		<p style="text-align: center;">Esta es la app que creaste en la última unidad de programación usando:</p></center>	
<ul>
<li style="text-align: left;">Tus imágenes favoritas</li>
		</ul><p></p><p></p>
	</td>
	</tr>
</table>
<p>El programador necesita configurar las maneras en que la app recibe la información que necesita. Recuerda, los computadores no pueden hacer nada por sí solos sin instrucciones. Aquí hay algunas maneras en que las aplicaciones en App Inventor pueden poner la información en uso:</p>
<ol>
<li>El <strong>programador</strong> ingresa la información
</li>
<li>El <strong>usuario</strong> ingresa la información
</li>
<li>La <strong>aplicación</strong> se conecta con otro lugar para obtener la información
</li>
</ol>

<div style="background-color:#28a880; color:white; padding:25px; margin-top:25px; margin-bottom:25px;">
<center>
	<h3 style="color:white">Si estuvieras usando una aplicación que te ayuda a encontrar la verdulería más cercana, ¿qué cosas crees que la aplicación debería saber para lograr su función?</h3>
	</div>
	
<h3 id="types">Tipos de información</h3>
<p>Como ya viste en la sección anterior, información puede ser muchas cosas. Para ayudarle al computador a saber qué hacer con la información que le ha sido entregada, la información se divide en categorías. Esto se conoce como tipo de información. Los lenguajes de programación giran en torno a tres grandes tipos de información: números, cadenas y booleanas. App Inventor también te permite usar tipos de información más complejos como colores e imágenes. No necesitas hacer nada con los tipos de información en esta sección, pero será bueno tenerlos en cuenta a medida que sigues aprendiendo.</p>

<h5>Números</h5>
<p>El tipo de información basado en número es justo como te lo imaginas. En App Inventor, puedes usar números haciendo click Matemáticas en la sección <i>bloques.</i></p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image30.png" width="712" height="40" /></p>
<p>Usarás bloques matemáticos siempre que necesites usar números. Aquí hay algunos ejemplos de cuando usarías información basada en números en tu aplicación.</p>
<ul>
<li style="font-weight: 400;">Calcular el puntaje de un jugador en un juego</li>
<li style="font-weight: 400;">Contar cuántas veces un usuario intentó iniciar sesión</li>
<li style="font-weight: 400;">Contar cuántas veces quieres que tu aplicación haga algo</li>
<li style="font-weight: 400;">Comprobar si tu usuario tiene una determinada edad</li>
</ul>
<p>Para aprender más acerca de las cosas que puedes hacer con los bloques matemáticos, revisa la página web de MIT: <a href="http://appinventor.mit.edu/explore/ai2/support/blocks/math.html" target="_blank">Math blocks</a></p>
<h5>Cadenas</h5>
<p>Una información basada en cadenas es básicamente texto. En App Inventor, crea una cadena dirigiéndote a Texto en la sección <i>bloques</i>. Aquí hay algunos bloques de texto que puedes usar.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image20.png" width="815" height="100" /></p>
<p>Antes de proseguir, revisa <a href="http://appinventor.mit.edu/explore/ai2/support/blocks/text.html#string" target="_blank">la página web de MIT</a> para ver todas las cosas que puedes hacer con texto.</p>
<ul>
<li style="font-weight: 400;">Allowing the the user to enter a password or username</li>
<li style="font-weight: 400;">Having the app speak words to the user</li>
<li style="font-weight: 400;">Showing a message or an alert to the user</li>
<li style="font-weight: 400;">Programming the app to open a new screen by giving it the screen name</li>
</ul>

<h5>Booleans</h5>
<p>Una booleana puede ser uno de dos valores: verdadero o falso. Verdadero básicamente significa “sí” y falso “no”. Para obtener una booleana, dirígete a Logic (Lógica) en las funciones incorporadas y agarra uno de estos bloques: </p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image27.png" width="347" height="39" /></p>
<p>Por ahora, no hay mucho que hacer con las booleanas además de tenerlas en cuenta. Las booleanas y la lógica serán profundizadas con más detalle en la Unidad de programación 3: Lógica, loops y condicionales.</p>

<h3 id="variables">Variables</h3>
<p>Uno de los conceptos más importantes en la programación es el de variable. Una variable es el nombre de una porción de información que puede cambiar su valor. Una manera fácil de recordar esto es que una variable puede variar, o cambiar de valor. Hay mucha información que es importante para ti que cambia su valor cada día. Aquí hay algunos ejemplos:</p>
<ul>
<li style="font-weight: 400;">Tu edad</li>
<li style="font-weight: 400;">Tu altura</li>
<li style="font-weight: 400;">Tu ubicación </li>
<li style="font-weight: 400;">La fecha de hoy</li>
</ul>
<p>Para entender mejor lo que es una variable y cómo usarla en App Inventor, revisemos un ejemplo. Imagina que estás creando un juego donde cada usuario gana y pierde puntos. Quieres tener un puntaje que puede ser visto por el usuario en un cuadro de texto. Al comienzo del juego, el jugador tiene 0 puntos así que agregaste un bloque al juego que luce así.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image16.png" width="316" height="56" /></p>
<p>El jugador ve 0 en el cuadro de texto que contiene su puntaje. Sin embargo, el puntaje del jugador variará a medida que el juego avanza. Cada vez que ella gana o pierde puntos, tienes que actualizar el cuadro de texto. Cuando obtiene más puntos, agregas un bloque que luce así.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image22.png" width="326" height="43" /></p>
<p>Por ahora funciona, ¿pero qué pasa cuando la jugadora gana 10 puntos? Tendrás que actualizar el texto nuevamente para que muestre el número 20. ¿Y si la jugadora pierde puntos? Tendrás que cambiar su puntaje a 15. ¿Y si luego gana puntos nuevamente? Esto se está volviendo confuso rápidamente.</p>
<p>En escenarios como este, puedes crear una variable para registrar el puntaje del jugador. Puedes crear una variable llamada puntaje que siempre tiene el valor del puntaje del jugador. A medida que ella avanza en el juego, puedes sustraer y agregar puntos y así no tendrás que preocuparte de llevar el registro de su puntaje. Así es como funcionaría en App Inventor. Primero agarras este bloque de la sección Variables.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image13.png" width="245" height="65" /></p>
<p>Este bloque le dice a la aplicación que habrá una variable y te pedirá que le des un nombre y un valor. Así es como se verá el bloque para un juego que comienza desde 0.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image28.png" width="284" height="51" /></p>
<p>Con este bloque, le estás diciendo a la aplicación que habrá una porción de información llamada puntaje y que cambiará su valor a medida que avanza el juego. Cada vez que la aplicación es iniciada, creará una variable llamada puntaje y lo establecerá a 0. Ahora puedes hacer lo que se llama “set” (establecer) y “get” (obtener) a tu variable puntaje. “Get” te permitirá ver el valor del puntaje. Así es como le dirás a la aplicación que muestre el puntaje en el cuadro de texto.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image17.png" width="476" height="45" /></p>
<p><b>Set</b> te permite establecer un nuevo valor al puntaje de tu usuario. Cada vez que el jugador obtiene puntos, puedes pedirle a la aplicación que haga esto.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image19.png" width="508" height="61" /></p>
<p>Esto le dice a tu aplicación que cambie el valor del puntaje a cualquiera que sea y que agregue 10 al puntaje. Si el puntaje actual es 0, entonces el nuevo puntaje será 10. Si el puntaje es 25, entonces el nuevo será 35. No necesitas preocuparte por reasignar el puntaje cada vez que tu usuario pierde puntos. La aplicación tomará el puntaje actual y le añadirá 10.</p>
<p>Está bien si todavía estás confundida por las variables. Son complicadas de entender y la mejor manera de hacerlo es usándolas. Las usarás en el desafío de programación al final de esta actividad y en las siguientes unidades que vienen.</p>

<div style="background-color:#28a880; color:white; padding:25px; margin-top:25px; margin-bottom:25px"><center>
<h3 style="color:white">Elige una de tus aplicaciones favoritas e identifica al menos tres partes en las que crees que el creador usó variables.</h3>
</div>

<h3 id="localglobal">Local and Global Variables</h3>
<p>Quizás notaste en la sección anterior que antes del nombre score (puntaje) la variable decía “global”. En App Inventor puedes tener dos tipos de variables, locales y globales. Cuando creas variables, tendrás que pensar sobre si quieres usar la variable en múltiples casos en tu código, como en la variable puntaje de más arriba, o si solo quieres usarla en un solo lugar.  </p>
<p>Las variables globales pueden ser usadas en cualquier parte. Como viste antes, era necesario que la variable puntaje fuese usada en múltiples ocasiones. Tenías que usarla cuando el jugador obtenía o perdía puntos, y para mostrarlos en el cuadro de texto. También podía ser usada por una tabla de puntajes, o cuando el jugador perdía puntos. No puedes repetir un nombre cuando usas una variable global. Si lo haces, tu aplicación no sabe qué variable usar. Por suerte, App Inventor no te dejará crear dos variables con el mismo nombre. Si tienes dudas sobre qué tipo de variable usar, usa la global.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image15.gif" /></p>
<p>Las <b>variables locales</b> solo pueden ser usadas en una sola parte de tu código. Si solo necesitas una variable para registrar algo en un solo lugar, usa una variable local. La variable local solo podrá ser usada dentro del bloque “local variable” (variable local) y App Inventor no te dejará usarla fuera de este. A diferencia de las variables globales, puedes reutilizar el nombre de las variables locales.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image34.gif" /></p>
<p>En el desafío de programación, verás ejemplos de cuándo usar variables globales y locales. Para aprender más acerca de estas variables, visita la página web de MIT: <a href="http://appinventor.mit.edu/explore/ai2/support/concepts/variables.html" target="_blank">Global and Local Variables</a>.</p>
&nbsp;
<h3 id="lists">Listas</h3>
<p>Hay tanta información en el mundo, que puede volverse muy confuso. Por suerte, tenemos maneras de organizar la información para así encontrarla y usarla fácilmente. ¿Puedes pensar en algún ejemplo de cómo tú organizas la información y tus objetos en tu vida? Aquí hay algunos ejemplos de cosas que quizás haces para organizar cosas:
<ul>
<li>Poner el número telefónico de un amigo en una lista de contactos</li>
<li>Poner lápices en un lapicero</li>
<li>Poner ropa en un closet</li>
</ul>
<p>Los programadores usan listas para organizar la información en sus programas. Las listas pueden albergar múltiples porciones de datos y es muy fácil obtener datos de las mismas. Es muy probable que ya hayas hecho alguna lista antes, como las que uno hace antes de a la verdulería. Las listas en programación son muy similares. En App Inventor, puedes ir a Bloques y seleccionar “listas”. Las listas lucen más o menos así:</p>

<p>	<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/MakeaList.png" alt="makealist" width="160" height="70" /> <br />
	<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/ItemList.png" alt="itemlist" width="254" height="122" /></p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/Number-List.png" alt="number-list" width="194" height="119" /></p>
<h3></h3>
<p>Las listas son muy útiles para guardar una gran cantidad de información. Cada elemento de la lista tiene un “index”, que es un número que te dice en qué lugar de la lista se encuentra cada uno. El primer elemento de una lista tendrá un index de 1, el segundo un 2 y así sucesivamente. Aquí hay un ejemplo:</p>
<p>				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image33.png" alt="fruit list" itemprop="image" width="60%" /></p>
<p>Así es como tu aplicación ve esta información:</p>
<p><b>Nombre de la lista: Fruits</b></p>
<ul>
<li>Apples (Manzanas) (Index = 1)</li>
<li style="font-weight: 400;">Bananas (Index = 2)</li>
<li style="font-weight: 400;">Oranges (Naranjas)(Index = 3)</li>
</ul>
<p>Puedes obtener una cosa de una lista en vez de usarla completamente. Si quisieras agregar la cadena “bananas” en un cuadro de texto en vez de toda la lista, deberás decirle a la aplicación que busque el index 2 en tu lista. Así es cómo ubicarías la palabra “bananas” en un cuadro de texto usando App Inventor.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image25.png" width="516" height="60" /></p>
<p>También puedes agregar, remover o reemplazar cosas en una lista. Digamos que olvidaste agregar “kiwis” y “grapes (uvas)” a tu lista de frutas. Podrías agregarlas de esta manera:</p>
<p>				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image37.png" alt="add to list" itemprop="image" width="60%"  /></p>
<p>Ahora tu aplicación verá tu lista de la siguiente manera:</p>
<p><b>List Name: Fruits</b></p>
<ul>
<li style="font-weight: 400;">Apples (Manzanas)(Index = 1)</li>
<li style="font-weight: 400;">Bananas (Index = 2)</li>
<li style="font-weight: 400;">Oranges (Naranjas)(Index = 3)</li>
<li style="font-weight: 400;">Kiwis (Index = 4)</li>
<li style="font-weight: 400;">Grapes (Uvas)(Index = 5)</li>
</ul>
<p>Deberías usar las listas siempre que tengas múltiples porciones de información que deseas incluir bajo una variable con el mismo nombre. Por ejemplo, si quieres mostrar los 10 puntajes más altos para un juego, puedes hacer 10 variables con nombres como PuntajeAlto1, PuntajeAlto2, PuntajeAlto3, hasta que llegues al PuntajeAlto10. La manera más fácil de hacer esto sería hacer una lista llamada PuntajesAltos que contenga los 10 puntajes más altos y luego desplegarlos usando sus index. Usar una lista te permitiría también reemplazar y agregar más puntajes de manera más fácil, gastando menos de tu tiempo.</p>
<p>				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image05.png" alt="highscore1" itemprop="image" width="60%" /><br />
	<p>Se convierte en:</p>
				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image31.png" alt="highscore2" width="60%" itemprop="image"  /></p>
<p>Revisa la página web de MIT para más información sobre <a href="http://appinventor.mit.edu/explore/ai2/support/blocks/lists.html#string" target="_blank">las listas</a>.</p>

<h3 id="databases">Bases de datos</h3>
<p>Las variables son geniales para guardar información mientras que tu usuario usa tu aplicación, ¿pero si quisieras guardar información entre las veces que tu usuario cierra y abre su aplicación? Puedes hacer esto con una base de datos. Las bases de datos pueden guardar información para ser usada más adelante, incluso cuando la aplicación no se encuentra en uso. Aquí hay algunos ejemplos de bases de datos que quizás usas diariamente:</p>
<ul>
<li>Lista de contactos - guardas los números de tus amigos para que puedas llamarlos más adelante</li>
<li>Aplicación de mensaje - guarda el historial de tus mensajes</li>
<li>Notebook - escribes cosas y las lees después</li>
</ul>
<p>El componente TinyDB te permite guardar información en el teléfono de tu usuario la que estará ahí cada vez que ella ingresa a tu aplicación. Es importante saber que TinyDB solo te permite guardar información de manera local. Esto significa que dos usuarios no pueden compartir a través de TinyDB. Cuando un usuario guarda información en TinyDB, solo estará disponible en su teléfono, y no en otros. Aprenderás a compartir información entre teléfonos en la Unidad de programación 4.</p>
<p>Para usar TinyDB, arrástralo a tu ventana en la sección Diseñador en App Inventor. Aparecerá como un componente invisible y lucirá así:</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image36.png" alt="TinyDB" itemprop="image" width="25%"  /></p>
<p>Puedes hablar con tu TinyDB haciéndole llamadas. Cuando haces una llamada, puedes guardar cosas y obtener cosas de él. La manera en que guardas información en TinyDB es poniéndole una etiqueta. Una etiqueta es un nombre que usarás para obtener la información. Es como el nombre de una variable. Si usas la misma etiqueta para guardar otra información, la base de datos reescribirá o borrará la información anterior. Esto puede ser útil si necesitas actualizar lo que está en tu base de datos, pero deberías tener cuidado de nunca repetir una etiqueta. Así es como realizas llamadas a TinyDB:</p>
<p>				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image04.png" alt="TinyDB store global fruits" width="60%" itemprop="image"  /><br />
				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/Screen-Shot-2016-09-23-at-3.24.29-PM.png" alt="screen-shot-2016-09-23-at-3-24-29-pm" itemprop="image"  /></p>
<p>El primer bloque muestra cómo guardar valores en TinyDB. En este caso guardamos nuestra lista de "fruits" (frutas) con la etiqueta “food” (comida). El segundo bloque muestra como obtener la lista de frutas desde la base de datos. La etiqueta necesita ser escrita de la misma manera que fue ingresada cuando fue guardada, incluyendo todas las letras en mayúscula.  </p>
<p>Para entender esto de mejor manera, revisemos un ejemplo. Digamos que necesitas guardar tres cosas en una base de datos para usarlas después. Una es nuestra lista de frutas de la sección anterior, otra es tu edad y la última una lista de las cosas que más te gusta hacer. Hiciste tres llamadas a la base de datos de esta manera:   </p>
<p>				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image04.png" alt="TinyDB store global fruits" width="60%" itemprop="image"  /><br />
				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image00-1.png" alt="Tiny DB my age" itemprop="image" width="60%" /><br />
				<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image24.png" alt="TinyDB store favorites list" itemprop="image" width="80%"/></p>
<p>Ahora tienes tres entradas en tu base de datos, y así es como se ven:</p>
<p>Tag Name (Etiqueta): “Food”</p>
<p>Data (Información):</p>
<ul>
<li>“Apples” (index = 1)</li>
<li>“Bananas” (index =2)</li>
<li>“Oranges” (index = 3)</li>
</ul>
<p>Tag Name (Etiqueta): “My Age”</p>
<p>Data (Información):</p>
<ul>
<li>16</li>
</ul>
<p>Tag Name (Etiqueta): “Favorite”</p>
<p>Data (Información):</p>
<ul>
<li>“Learn how to Code” (index = 1)</li>
<li>“Visit Family” (index = 2)</li>
<li>“Listen to Music” (index =3)</li>
</ul>
<p>Ahora quieres obtener las cosas que más te gusta hacer (favorito), así que podrías hacer una llamada de esta manera:</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image26.png" alt="TinyDB favorites value not tagged" width="371" height="98" /></p>
<p>Cuando usas este bloque obtendrás “Aprende como Programar, visitar familia escuchar música”. Ahora quieres obtener tu edad, así que haces una llamada así:</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/image12.png" alt="TinyDB my age value tag if not there" width="351" height="96" /></p>
<p>Cuando usas este bloque obtienes una cadena en blanco: “ ”. ¡Esto es porque la etiqueta “mi edad” no existe en tu base de datos! Sin embargo, la etiqueta “Mi edad” sí existe. Dado que tu base de datos no reconoció la etiqueta, mostró por defecto el bloque contiguo a “valueIfTagNotThere”, que es una cadena en blanco. Puedes hacer que esta cadena diga lo que quieras. Puedes hacer que aparezca como mensaje de error para tu usuario..</p>
<p>Si creas una aplicación con múltiples ventanas, los componentes, la información y las variables no podrán comunicarse entre cada ventana. Tendrás que usar TinyDB para transferir información de una ventana a otra. Visita esta página para más información: <a href="http://appinventor.mit.edu/explore/ai2/concepts.html#Screens" target="_blank">MIT Screens (Ventanas)</a>.</p>
<p>Felicitaciones por haber completado todo el contenido de esta Unidad. Fue mucha información, ¡así que está bien si no entiendes todo! Siempre podrás volver a esta unidad cuando estés creando tu aplicación. El desafío de programación está hecho para incorporar todo lo que has aprendido hasta ahora, ¡así que inténtalo! </p>

	<h2 id="challenge">Desafío de programación #2: Diseña una aplicación gestora de tareas</h2>
<p>Descripción: Crea una aplicación gestora de tareas que le permita al usuario ingresar o eliminar ítems. Tu aplicación debería recordar los items cada vez que tu usuario abre la aplicación. ¡Deberías a aprender a usar  <a href="http://ai2.appinventor.mit.edu/reference/components/userinterface.html#ListView" target="_blank">ListView</a> (VisorDeLista) antes de continuar con el desafío!</p>
<center>
<h3>	<a href="/?p=16947" target="_blank" role="button"><br />
					Revisa nuestro ejemplo<br />
			</a><br />
	<a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.ToDoList&hl=en" target="_blank" role="button"><br />
					Descarga el ejemplo<br />
			</a></h3>
	</center>
			
<div style="background-color:#006667; color:white; padding:25px; margin-top:25px; margin-bottom:25px"
	 <h3><h3 style="color:white" id="reflect">Reflexión</h3></h3>
<p>¡En esta lección cubrimos mucho! Aprendiste sobre todos los tipos de información y las distintas maneras de alojar y organizarlas. Aquí hay algunas pregunta sobre las cuales reflexionar junto con tu mentor:</p>
<p><strong>Q1:</strong> ¿Cómo cambia tu manera de ver las aplicaciones que usas a diario la información que aprendiste en esta lección?</p>
<p><strong>Q2:</strong> ¿Cuáles son las cosas revisadas en esta lección que crees te serán útiles al momento de crear tu aplicación?  </p>
<p>En esta sección aprendiste las siguiente palabras clave:</p>
<ul>
<li style="font-weight: 400;">Data - Información que tu aplicación usa</li>
<li style="font-weight: 400;">Tipos de datos - La manera en que los datos o información son categorizados</li>
<li style="font-weight: 400;">Number (Número) - Un tipo de información en formato dígito</li>
<li style="font-weight: 400;">String (Cadena)- Un tipo de información basada en texto </li>
<li style="font-weight: 400;">Boolean (Booleana) - Un tipo de información que es verdadera o falsa</li>
<li style="font-weight: 400;">Variable -  El nombre de una porción de la información que puede cambiar (variar)</li>
<li style="font-weight: 400;">Global Variable - Una variable que puede ser usada en cualquier lugar del código</li>
<li style="font-weight: 400;">Local Variable - Una variable que solo es utilizada en una determinada sección del código</li>
<li style="font-weight: 400;">List (Lista) - Una manera de organizar múltiples piezas de información</li>
<li style="font-weight: 400;">List Index (Índice de lista ) - Un número que representa donde se encuentra cierta información en una lista</li>
<li style="font-weight: 400;">Database (Base de Datos)- Un lugar para guardar y organizar información</li>
</ul>
<h3 style="color:white">Recursos adicionales</h3>
<p>Aquí hay recursos adicionales sobre bases de datos. ¡Puedes usarlas ahora o si necesitas ayuda mientras creas tu aplicación!Here are some additional resources on databases. </p>
<ul>
<li style="font-weight: 400;"><a href="https://drive.google.com/a/iridescentlearning.org/file/d/0B3rEYL3DkWfAd003UmM2cl9ITDg/view" target="_blank" style="color:#eae46f">TinyDB101</a></li>
<li style="font-weight: 400;"><a href="https://drive.google.com/a/iridescentlearning.org/file/d/0B3rEYL3DkWfAZUVQVGxPZzdXTXc/view" target="_blank" style="color:#eae46f">TinyDB102</a></li>
</ul>
</div
