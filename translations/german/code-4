<h1>Code 4</h1>
<h2>Handy Funktionen &amp; Verbindung mit dem Internet</h2>
<ul>
 	<li><a href="#mobile">Handy Bauteile</a></li>
 	<li><a href="#ui">User Interface Komponenten</a></li>
 	<li><a href="#media">Medien Komponenten</a></li>
 	<li><a href="#sensors">Sensoren</a></li>
 	<li><a href="#social">Soziale Komponenten</a></li>
 	<li><a href="#connectivity">Verbindungs Komponenten</a></li>
 	<li><a href="#web">Online Datenbanken</a></li>
 	<li><a href="#tinyweb">TinyWebDB</a></li>
 	<li><a href="#fusion">Verbundene Tabellen</a></li>
 	<li><a href="#api">APIs</a></li>
 	<li><a href="#challenge">Code Challenge</a></li>
 	<li><a href="#reflection">Reflexion</a></li>
</ul>
<h3>Lernziele:</h3>
In dieser Einheit wirst du etwas lernen über...
<ul>
 	<li style="font-weight: 400;">User Interface Komponenten</li>
 	<li style="font-weight: 400;">Medien Komponenten</li>
 	<li style="font-weight: 400;">Sensoren</li>
 	<li style="font-weight: 400;">Soziale Komponenten</li>
 	<li style="font-weight: 400;">Online Datenbanken</li>
</ul>
<h3>Mobile Komponenten</h3>
Herzlichen Glückwunsch, du hast es bereits bis zur vierten Programmiereinheit geschafft! Bisher hast du bereits Wege kennen gelernt, wie du mit deinem Telefon kommunizieren und Apps entwickeln kannst. In dieser Einheit wirst du mehr über die zusätzlichen Funktionen deines Handys und wie du diese nutzen kannst, sowie darüber wie du dich mit dem Internet verbinden kannst, lernen.

Nutze diese Einheit um mehr darüber zu lernen, welche Möglichkeiten deine App bieten kann. Du brauchst nicht alle unten genannten Komponenten ausprobieren, solltest aber mit denen, die vielleicht für deine App sinnvoll sind, experimentieren.

Als Hinweise hier noch die <a href="http://www.technovationchallenge.org/wp-content/uploads/2016/11/Judging-Rubric-2017.pdf" target="_blank" rel="noopener">Technovation 2017 Judging Rubriken</a> und die <a href="http://www.technovationchallenge.org/wp-content/uploads/2017/01/Technical-Checklist-2017.pdf" target="_blank" rel="noopener">Technik Checklist</a>.
<h3>User Interface Komponenten</h3>
Dies sind Funktionen, die von deiner App verwendet werden können, damit der Nutzer mit ihr interagieren kann. Schau dir auch die <a href="http://ai2.appinventor.mit.edu/reference/components/userinterface.html" target="_blank" rel="noopener">MIT Webseite</a> für mehr Informationen an.
<h5>Alarm (Notifier)</h5>
Diese Komponente sendet dem Nutzer eine Nachricht oder einen Alarm. Der Nutzer kann durch Anklicken eines Buttons die Nachricht löschen oder die Nachricht verschwindet nach einigen Sekunden automatisch. Der Alarm ist gut um Informationen an die Nutzer zu senden, aber auch nützlich bei der Fehlerbehebung (debugging) über die du mehr in <a href="/?p=19686" target="_blank" rel="noopener">Code 6</a> lernen wirst. Hier geht es zum <a href="https://www.youtube.com/watch?v=4KdTuWJFCpM" target="_blank" rel="noopener">Tutorial</a>.
<h5>Leinwand (Canvas)</h5>
Diese Komponente erlaubt es Nutzern Grafikobjekte (Sprites ) zu verwenden, zu malen oder Dinge zu bewegen. Dies kann sehr hilfreich sein, wenn du ein Spiel entwickeln willst! Hier ein paar Anleitungen:
<ul>
 	<li><a href="https://www.youtube.com/watch?v=DNbZAzMEkvs" target="_blank" rel="noopener">Paintpot 1</a></li>
 	<li><a href="https://www.youtube.com/watch?v=DNbZAzMEkvs" target="_blank" rel="noopener">Paintpot 2</a></li>
 	<li><a href="https://www.youtube.com/watch?v=gpMPOSNWc_o" target="_blank" rel="noopener">Paintpot 3</a></li>
 	<li><a href="https://www.youtube.com/watch?v=jw4QxAvOm6A" target="_blank" rel="noopener">Paintpot 4</a></li>
 	<li><a href="https://www.youtube.com/watch?v=w0yxJSlC00w" target="_blank" rel="noopener">Ball MIT Tutorial</a></li>
 	<li><a href="https://www.youtube.com/watch?v=fQKNzLYEN0M" target="_blank" rel="noopener">MIT digital doodle</a></li>
</ul>
<h5>Webansicht (WebView)</h5>
Diese Komponente erlaubt es dir einen Internetbrowser in deiner App zu verwenden. Du kannst dies zum Beispiel nutzen wenn du dem Nutzer den Zugriff auf eine bestimmte Homepage ermöglichen willst. Du kannst festlegen welche URL dem Nutzer im Browser angezeigt werden soll, jedoch funktioniert dieser Browser nicht immer wie dein normaler Browser. Durch drücken des zurück-Knopfes an deinem Handy verlässt du beispielsweise die App anstatt zur vorherigen Seite zurückzukehren. Hier findest du ein <a href="https://www.youtube.com/watch?v=OCZawf85lsE" target="_blank" rel="noopener">Tutorial</a>.
<h5>Datum und Uhrzeit auswählen</h5>
Diese Komponente erlaubt es dir eine Zeit und/oder ein Datum festzulegen. Dies kann besonders hilfreich sein bei Apps in denen Nutzer Termine festlegen müssen. Hier findest du ein <a href="https://www.youtube.com/watch?v=UbA3pDQALKY" target="_blank" rel="noopener">Tutorial</a>.
<h3>Medien Komponenten</h3>
Dies sind Zusatzfunktionen die Medien wie Fotos, Tonaufnahmen oder Videos enthalten. Schaue dir die <a href="http://ai2.appinventor.mit.edu/reference/components/media.html" target="_blank" rel="noopener">MIT Webseite</a> für mehr Informationen an.
<h5>Videokamera</h5>
Diese Komponente erlaubt es dem Nutzer Videos aufzunehmen. Du kannst diese Komponente für soziale Apps, Apps in denen Videos geteilt werden oder überall wo es dem Nutzer möglich sein soll ein Video aufzunehmen, nutzen. <a href="http://appinventor.pevest.com/?p=161" target="_blank" rel="noopener">Hier</a> lernst du wie es funktioniert.
<h5>Kamera</h5>
Diese Komponente erlaubt es dem Nutzer Fotos aufzunehmen. Dies kann besonders nützlich sein für Apps in denen die Nutzer Profilbilder einfügen oder eigene Fotos machen können. Hier findest du ein <a href="https://docs.google.com/document/d/1trt9smFfyiztdVoaq5ONaOM8GWOMoSFxTRJ7Eyyajuw/pub" target="_blank" rel="noopener">Tutorial</a>.
<h5>Bilderauswahl (ImagePicker)</h5>
Die Bilderauswahl erlaubt es dem Nutzer ein Bild aus ihrer Bibliothek auszuwählen. Es ist eine gute Idee diese Funktion in der App zu integrieren, wenn du auch die Videokamera oder Kamera Komponenten verwenden willst. Auf diese Weise kann der Nutzer auch Fotos, die er außerhalb der App aufgenommen hat, in der App verwenden. Hier findest du ein <a href="https://www.youtube.com/watch?v=MAjoLSQB1yw" target="_blank" rel="noopener">Tutorial</a>.
<h5>Videospieler (VideoPlayer)</h5>
Erlaubt dir ein Video in die App einzubinden auf das der Nutzer klicken kann. Das Video muss eine .wmv, .3gp oderr .mp4 Datei sein und darf nicht größer als 1MB sein. Hier findest du ein <a href="https://www.youtube.com/watch?v=3HtXOU9EHc8" target="_blank" rel="noopener">Tutorial</a>.
<h5>Übersetzer (YandexTranslate)</h5>
Dieser erlaubt dir Texte in eine andere Sprache zu übersetzen. Nötig ist eine Internetverbindung, da <a href="https://tech.yandex.com/translate/" target="_blank" rel="noopener">Yandex</a> ein onlinebasierter Übersetzungsdienst ist. Hier findest du ein <a href="https://www.youtube.com/watch?v=T9O6stYSDUQ" target="_blank" rel="noopener">Tutorial</a>.
<h5>Diktiergerät (SoundRecorder)</h5>
Das Diktiergerät erlaubt den Nutzer Tonspuren aufzunehmen. Hier ist ein <a href="http://puravidaapps.com/snippets.php#2soundrecorder" target="_blank" rel="noopener">Praxisbeispiel</a> von Pura Vida Apps.
<h5>Player</h5>
Diese Komponente spielt Tonspuren ab. Sie funktioniert am besten für "lange" Aufnahmen, wie Songs, Reden oder Gedichte. Hier findest du ein <a href="https://www.youtube.com/watch?v=4tB_BuV1tew" target="_blank" rel="noopener">Tutorial</a> und die <a href="https://www.youtube.com/watch?v=ajG0NSsX0q4" target="_blank" rel="noopener">Tutorial Übersicht</a>. <strong>Video Player</strong> ist eine ähnliche Komponente für Videos!
<h5>Sound</h5>
Diese Komponente ist sehr ähnlich zur Player Komponente, funktioniert aber besser für kurze Audiodateien wie Nachrichtentöne. Hier findest du ein <a href="http://appinventor.mit.edu/explore/ai2/hellopurr.html" target="_blank" rel="noopener">Tutorial</a> in dem du lernst, wie du Sounds einsetzen kannst.
<h5>Spracherkennung (SpeechRecognizer)</h5>
Die Spracherkennung wandelt gesprochene Worte in Text um. Dies ist besonders hilfreich für Apps die freihändig bedient werden müssen. Hier findest du ein <a href="https://www.youtube.com/watch?v=KUZQrk0PN50f" target="_blank" rel="noopener">Beispiel</a>.
<h5>Text zu Sprache (TexttoSpeech)</h5>
Dies ist genau die Umkehrung der Spracherkennung! Mit dieser Funktion können Nutzer einen Text eingeben und die App wird diesen dann vorlesen. Hier findest du ein <a href="https://www.youtube.com/watch?v=Vdo8UdkgDD8" target="_blank" rel="noopener">Tutorial</a>.
<h3>Sensoren</h3>
Da du eine App für dein Smartphone oder Tablet designst, solltest du auch versuchen die Vorteile von <b>Funktionen</b> und <b>Sensoren</b>, die dein Handy besitzt, zu nutzen. Diese <b>Funktionen</b> und <b>Sensoren </b>gibt es nur bei mobilen Geräten, Computer besitzen sie nicht unbedingt. Durch das Nutzen dieser zusätzlichen Funktionen wird aus deiner App erst eine <i>mobile App</i> anstelle einer <i>web App</i> oder <i>Website</i>. Schau dir an welche coolen Sensoren Smartphones besitzen!

&nbsp;

Mit App Inventor kannst du diese Sensoren programmieren! Dein Handy hat wahrscheinlich nicht alle Sensoren über die im Video gesprochen wurde, aber es wird sehr wahrscheinlich zumindest die Sensoren besitzen, die in diesem Abschnitt besprochen werden. Hier findest du eine Liste mit coolen Komponenten die du mit Hilfe von App Inventor programmieren und verwenden kannst. Für mehr Informationen besuche die <a href="http://ai2.appinventor.mit.edu/reference/components/sensors.html">MIT Webseite</a>.
<h5 id="AccelerometerSensor">Beschleunigungssensor (Accelerometer Sensor)</h5>
Diese Komponente kann messen ob das Telefon geschüttelt wird und ob es aufrecht oder quer gehalten wird. Diese Fähigkeit ist sehr nützlich, wenn du willst dass sich der Bildschirm neu ausrichten soll wenn das Handy gedreht wird oder wenn deine App auf Schütteln reagieren soll. Hier findest du ein <a href="http://appinventor.mit.edu/explore/sites/all/files/hourofcode/TalkToMePart2.pdf" target="_blank" rel="noopener">Tutorial</a>.
<h5>Schrittzähler (Pedometer)</h5>
Dieser Sensor nutzt den Beschleunigungssensor um zu messen wie viele Schritte der Nutzer macht während er das Handy bei sich trägt und kann daraus die zurückgelegte Distanz bestimmen. Hier findest du ein <a href="https://www.youtube.com/watch?v=iVcM6sTLnNU" target="_blank" rel="noopener">Tutorial</a>.
<h5 id="AccelerometerSensor">Gyroskop (Gyroscope)</h5>
Diese Komponente kann messen ob das Handy geneigt ist. Sie ist genauer als der Beschleunigungsmesser und kann bestimmen, wie stark sich die Neigung des Handys verändert hat. Hier findest du ein <a href="https://www.youtube.com/watch?v=MM1LlE6RveE" target="_blank" rel="noopener">Tutorial</a>.
<h5>Uhr</h5>
Die Uhr erlaubt deiner App die aktuelle Zeit anzuzeigen oder einen Timer zu setzen. Dies Komponente kann hilfreich sein, wenn du einen Alarm zu einer bestimmten Uhrzeit auslösen willst, entweder durch die Timerfunktion oder mit Hilfe der Tageszeit.

Hier findest du einige Tutorials:
<ul>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=tIKowBYIAG0" target="_blank" rel="noopener">Timer Tutorial</a></li>
 	<li style="font-weight: 400;"><a href="http://ai2.appinventor.mit.edu/reference/components/sensors.html#Clock" target="_blank" rel="noopener">MIT Clock Documentation</a></li>
</ul>
<h5>Ortsbestimmung (Location Sensor)</h5>
Dieser Sensor bestimmt den Längen- und Breitengrad der aktuellen Position des Handys. Es ist immer nützlich, wenn du nach Unternehmen suchst oder dem Nutzer interessante Orte in seiner Nähe zeigen willst. Hier findest du <a href="https://docs.google.com/document/d/1V1Zm5cYoa12KVb_cTlfelSfyUkW7IH2WPHUoTa02XaY/pub" target="_blank" rel="noopener">mehr Informationen</a>.
<h5>Abstandssensor (Proximity Sensor)</h5>
Dieser Sensor kann dir sagen, ob das Handy vor ein Gesicht gehalten wird oder nicht. Jedoch besitzen nicht alle Handys diese Funktion. Hier findest du ein <a href="https://www.youtube.com/watch?v=TsmJNo5W4jU" target="_blank" rel="noopener">Tutorial</a>.
<h3>Soziale Komponenten</h3>
Dies sind Funktionen die es dem Nutzer ermöglichen Telefonanrufe zu tätigen, Nachrichten zu schreiben, E-Mails zu versenden oder Sachen durch die App mit anderen zu teilen. Schau dir die <a href="http://appinventor.mit.edu/explore/content/social.html">MIT Webseite </a>für mehr Informationen an.
<h5>Auswahl eines Kontaktes (ContactPicker)</h5>
Zeigt die Kontakte des Nutzers an und erlaub dem Nutzer einen Namen aus der Liste auszuwählen. Hier findest du ein <a href="https://www.youtube.com/watch?v=I0L1iEeNTrs" target="_blank" rel="noopener">Tutorial</a>.
<h5>Auswahl einer E-Mail-Adresse (EmailPicker)</h5>
Diese Komponente erlaubt dem Nutzer eine E-Mail-Adresse einzugeben. Hier findest du ein <a href="https://www.youtube.com/watch?v=wI9LzGCJ3vY" target="_blank" rel="noopener">Tutorial</a>.
<h5>Auswahl einer Telefonnummer (PhoneNumberPicker)</h5>
Diese Komponente erlaubt dem Nutzer eine Telefonnummer aus einer Kontaktliste zu auszuwählen, zum Beispiel als Freund oder Familienmitglied. Hier findest du ein <a href="http://appinventor.mit.edu/explore/ai2/piccall.html" target="_blank" rel="noopener">Tutorial</a>.
<h5>Telefonanrufe (PhoneCall)</h5>
Ermöglicht es dem Nutzer aus der App heraus jemanden anzurufen. Hier findest du ein <a href="https://www.youtube.com/watch?v=I0L1iEeNTrs" target="_blank" rel="noopener">Tutorial</a>.
<h5>Nachrichten (Texting)</h5>
Diese Komponente erlaubt es dem Nutzer mit Hilfe der App eine Nachricht an einen anderen Nutzer zu senden. hier findest du ein <a href="http://www.appinventor.org/content/ai2apps/simpleApps/noTexting" target="_blank" rel="noopener">Tutorial</a>.
<h5>Teilen (Sharing)</h5>
Erlaubt den Nutzern Nachrichten, Bilder oder andere Inhalte der App auch in anderen Apps auf ihrem Handy zu nutzen. Hier findest du ein <a href="https://www.youtube.com/watch?v=fCdxtYj09Zw" target="_blank" rel="noopener">Tutorial</a>.
<h5>Twitter</h5>
Diese Komponente erlaubt die Kommunikation zwischen deiner App und Twitter. Nutzer können nach Tweets suchen, Nachrichten versenden und empfangen, Follower anzeigen lassen und vieles mehr. hier findest du ein <a href="http://puravidaapps.com/twitter.php" target="_blank" rel="noopener">Beispiel</a>.
<h3>Verbindungs Komponenten</h3>
Diese erlauben deiner App mit anderen Programmen, wie dem Internet oder anderen Apps, zu kommunizieren. Besuche die <a href="http://ai2.appinventor.mit.edu/reference/components/connectivity.html">MIT Webseite</a> für mehr Informationen.
<h5 id="AccelerometerSensor">ActivityStarter</h5>
Erlaubt deiner App andere auf dem Handy installierte Apps zu öffnen. Diese Apps können ebenfalls, müssen aber nicht notwendiger Weise, mit App Inventor entwickelt sein. Es können auch Apps wie die Kamera oder Kartenmaterial, die auf dem Handy vorinstalliert sind, sein. Hier findest du einige Tutorials:
<ul>
 	<li style="font-weight: 400;"><a href="http://ai2.appinventor.mit.edu/reference/other/activitystarter.html">Tutorial 1</a></li>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=rS8VChJ6X0g">Tutorial 2</a></li>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=Cz_2uH0jqAs">Tutorial 3</a></li>
</ul>
<h5>Internet (Web)</h5>
Diese Komponente erlaubt deiner App Informationen von Webseiten abzurufen. Sie erlaubt die Informationen zu nutzen ohne einen Internetbrowser in deiner App zu verwenden. Hier findest du ein <a href="http://explore.appinventor.mit.edu/ai2/stockquotes" target="_blank" rel="noopener">Tutorial</a>.
<h5>BluetoothClient und BluetoothServer</h5>
Diese Komponenten ermöglichen es deiner App einer Bluetooth-Verbindung herzustellen. Hier findest du ein <a href="http://appinventor.pevest.com/?p=520" target="_blank" rel="noopener">Beispiel</a>.

&nbsp;
<blockquote>“One of the secrets to staying young is to always do things you don’t know how to do, to keep learning.”</blockquote>
&nbsp;
<p align="right">– Ruth Reichl</p>

<h3>Online Datenbanken</h3>
Eine Sache die du auf jeden Fall nutzen solltest ist die Fähigkeit deines Handys sich mit dem Internet zu verbinden. Dies ist mehr als E-Mails abrufen. Du kannst auch <b>Daten </b>online speichern und über mehrere Handys, die deine App verwenden, abrufen!

Erinnerst du dich daran, was du über <b>TinyDB</b> in Coding 2 gelernt hast? <b>TinyDB</b> ist eine <i>lokale</i> Datenbank in der deine App Daten speichern kann und von der sie Daten abrufen kann. Wenn ein Handy <b>TinyDB </b>nutzt speichert es die Daten nur auf diesem Gerät, so dass weitere Nutzer nicht sehen können, was in <b>TinyDB </b>auf anderen Geräten gespeichert ist.

Eine <strong>online Datenbank </strong>funktioniert etwas anders.<strong> </strong>Stell dir vor du hast zwei Handys mit der gleichen App, Handy A und Handy B. Wenn Handy A Daten in TinyDB speichert kann Handy B nicht auf diese Daten zugreifen, da sie im Speicher von Handy A sind. Wenn du eine online Datenbank verwendest kann Handy A Daten in der Datenbank speichern und Handy B hat Zugriff auf die gleichen Daten. Anstatt dass deine Daten nur auf einem Handy gespeichert werden, können nun beide Handys die Daten teilen, wenn sie die gleiche App verwenden. Ein weiterer Vorteil der Verwendung von online Datenbanken in App Inventor ist, dass du (der Programmierer) über das Internet Zugriff auf die Daten hast und sie auch bearbeiten kannst.
<h5 style="text-align: center;">Lokaler Speicherplatz</h5>
<p style="text-align: center;"><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/local-databig.png" alt="local-databig" width="101" height="186" /></p>

<h5 style="text-align: center;">Online Speicherplatz</h5>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/web-databasebig.png" alt="web-databasebig" width="380" height="470" />

Online Datenbanken können also jederzeit upgedated werden und alle Handys, die die App verwenden, sind stets auf dem neusten Stand. Stell dir zum Beispiel vor, dass du eine Liste mit Restaurants in TinyDB speicherst und in der App Store stellst. Alle Nutzer, die deine App runterladen, erhalten diese Liste mit Restaurants. Nach einiger Zeit updatest du deine App indem du mehr Restaurants in die Liste hinzufügst. Du lädst auch deinen neuen Code im App Store hoch. Jedoch können alle Handys, auf denen die App vor dem Update der Restaurantliste installiert wurde, die neuen Restaurants in der Liste nicht sehen. Diese Nutzer müssen die App löschen und neu aus dem App Store herunterladen und installieren! Wenn du stattdessen eine online Datenbank für die Restaurants verwendet hättest würde die App das Update erkennen und automatisch die Restaurantliste aktualisieren. Dies geschieht jedes Mal, wenn das Handy mit dem Internet verbunden ist und Zugang zu der Datenbank hat, es hat immer die aktuelle Version.

Hast du jemals ein Bild auf Facebook oder Instagram geteilt? Apps wie diese nutzen online Datenbanken. Wenn eine Freundin von dir ein Bild hochlädt und teilt können alle ihre Follower das Bild sehen. Online Datenbanken erlauben es dir Daten mit allen anderen Nutzern der App zu teilen.

Also wann solltest du auf eine online Datenbank zurückgreifen? Hier sind ein paar typische Anwendungen:
<ul>
 	<li style="font-weight: 400;">das Teilen von Daten eines Spiels, zum Beispiel der High Score Liste</li>
 	<li style="font-weight: 400;">das Teilen von Bildern mit anderen Nutzern durch einen Feed</li>
 	<li style="font-weight: 400;">das Anzeigen eines Feeds, der alle Benutzer aktualisiert</li>
 	<li style="font-weight: 400;">die Nutzung eines Logins und eines Passwortes für die einzelnen Nutzer</li>
 	<li style="font-weight: 400;">zur Speicherung des Verhaltens eines Nutzers, zum Beispiel ihre Einkäufe, finanzielle oder medizinische Daten</li>
</ul>
Glücklicherweise gibt es viele verschiedene Wege eine online Datenbank in App Inventor zu verwenden! In den nächsten Abschnitten werden wir einige online Datenbänke besprechen, die du mit App Inventor einfach in deine App integrieren kannst. Denk darüber nach welche am besten zu deiner App passt, wenn du die Abschnitte liest.
<h3>Gedankenexperiment</h3>
Welche fünf Apps benutzt du regelmäßig, die auf online Datenbänke zurückgreifen?
<h3>TinyWebDB</h3>
<b>TinyWebDB</b> ist ähnlich wie TinyDB, da es <strong>Variablenwertepaare (tags value pairs)</strong> verwendet um Daten zu speichern und abzurufen. TinyWebDB ist eine gute Wahl, wenn du Daten hast, die meistens als Paare auftreten, zum Beispiel Nutzernamen und zugehöriges Passwort. Sobald du TinyWebDB eingerichtet hast kannst du Daten speichern und abrufen. Anders als bei TinyDB kann jedes Handy, das deine App verwendet, Daten auf der Datenbank speichern und abrufen. TinyWebDB hat also den Vorteil, dass du online alle vorhandenen Variablen einsehen und löschen kannst, wenn du sie nicht mehr benötigst. Dein Web Service wird so aussehen:

<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/TinyWebDBOnline.png" alt="tinywebdbonline" width="1440" height="777" />

Schau dir auch an auf welche Weise du hier Variablen löschen kannst. Es ist viel einfacher deine Dateien auf diese Weise zu verwalten, vielleicht solltest du daher <strong>TinyWebDB</strong> auch verwenden, selbst wenn deine App keine Daten zwischen Handys teilen soll!

Um <b>TinyWebDB </b>zu verwenden musst du deinen eigenen Web Service einrichten, von diesem werden dann alle Daten gespeichert oder abgerufen. Hier findest du eine MIT Anleitung wie du das machst: <a href="http://appinventor.mit.edu/explore/ai2/custom-tinywebdb.html" target="_blank" rel="noopener">Custom TinyWebDB</a>. Als wir unsere <strong>TinyWebDB</strong> eingerichtet haben sind wir an einer Stelle nicht weitergekommen, hier ist das Video und <a href="https://www.youtube.com/watch?v=qawFgeJldAQ" target="&quot;_blank">die Anleitung</a> der wir daraufhin gefolgt sind.
<b>TinyWebDB</b> ist eine unsichtbare Komponente, die nicht auf dem Bildschirm zu sehen ist und sieht ungefähr so aus:<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/non-visible.png" alt="non-visible" width="315" height="124" />

Die Programmierung von <b>TinyWebDB </b>ist etwas anders als die Programmierung von <b>TinyDB. </b>Wenn du Daten abrufen willst musst du darauf warten, dass die App diese vom Web Service abruft. Sobald die App die Daten hat kannst du sie weiterverwenden. Schau dir auch den Code in diesem Bild dazu an:<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/tagname.png" alt="tagname" width="594" height="313" />

Wenn der Nutzer auf den Button 1 klickt wird die App den Webservice nach dem Wert der Variable "User 1" fragen. Sobald die App diesen Wert von <b>TinyWebDB </b>erhalten hat setzt sie Label1 und Label2 auf tag (Variable) und value (Wert). Die Funktion TinyWebDB1.GotValue wird immer den letzten Wert, den sie aus der Datenbank erhalten hat, verwenden.

Tipps zum Einrichten von <b>TinyWebDB:</b>
<ul>
 	<li style="font-weight: 400;">Wenn du Probleme mit dem Download der Google App Engine für Python hast, <a href="https://cloud.google.com/appengine/docs/python/download#python" target="_blank" rel="noopener">versuche dies</a>.</li>
 	<li style="font-weight: 400;">Du brauchst zu keinem Zeitpunkt deine Kreditkarteninformationen bei Google eingeben, alle verwendeten Funktionen sind kostenlos.</li>
 	<li style="font-weight: 400;">Genauso wie bei TinyDB werden die Daten überschreiben, wenn du zwei Variablen gleich benennst.</li>
</ul>
<h3>Verbundene Tabellen (Fusion Tables)</h3>
<b>Verbundene Tabellen </b>oder<b> fusion tables</b> sind eine andere Art von online Datenbank, die du mit Hilfe von App Inventor einfach in deine App integrieren kannst. <strong>Verbundene Tabellen</strong> nutzen Tabellen anstatt Variablenwertepaare zum Speichern von Daten. Auf dieses Weise können sie komplexere Datensets abspeichern. Ähnlich wie bei <b>TinyWebDB</b> können unterschiedliche Nutzer der App Daten speichern und abrufen, durch den Webservice hast du die Möglichkeit die Daten zu verwalten.

Verbundene Tabellen erlauben es dir Daten in Form einer <strong>Tabelle</strong> zu speichern. Tabellen sind besonders hilfreich, wenn du viele Daten hast, du kannst die Daten anhand der Spalten und Zeilen organisieren. Lass uns ein Beispiel anschauen um<strong> verbundene Tabellen</strong> besser zu verstehen.

Stell dir vor du wärst dafür verantwortlich neue Trikots für dein Fußballteam zu bestellen. Jedes Teammitglied erhält ein Trikot mit seinem Namen und seiner Nummer drauf. Du musst aufpassen, dass du Namen, Nummern und Größen der einzelnen Spieler nicht durcheinanderbringst. Der einfachste Weg dies zu tun ist eine Tabelle:
<table>
<tbody>
<tr style="color: white;" bgcolor="#333333">
<td>Name</td>
<td>Nummer</td>
<td>Größe</td>
</tr>
<tr>
<td>Marissa</td>
<td>2</td>
<td>L</td>
</tr>
<tr>
<td>Ruchi</td>
<td>6</td>
<td>M</td>
</tr>
<tr>
<td>Hadar</td>
<td>3</td>
<td>S</td>
</tr>
<tr>
<td>Stephanie</td>
<td>7</td>
<td>M</td>
</tr>
<tr>
<td>Iyonce</td>
<td>4</td>
<td>S</td>
</tr>
</tbody>
</table>
Anstatt einfach Papier und einen Stift zu verwenden, entscheidest du dich eine <strong>verbundene Tabelle</strong> zu nutzen um die Übersicht über alle Informationen zu behalten. Du entwickelst eine App und bittest alle Teammitglieder diese runterzuladen. Von ihren eigenen Handys aus können sie nun ihren Namen, ihre Nummer und ihre Größe in die App eingeben. Diese Informationen werden von ihren Handys online in deiner verbundenen Tabelle gespeichert. Nun kannst du dich einloggen und dir die Daten aller deiner Teamkollegen anschauen!

Um eine bessere Idee davon zu bekommen, wofür du verbundene Tabellen alles nutzen kannst, hier ein paar Szenarios für die frühere Technovation Teams diese Art von Tabellen eingesetzt haben. Vergleiche diese Beispiele mit der App, die du entwickeln willst!
<ul>
 	<li style="font-weight: 400;">Das Erstellen einer Liste von gemeinnützigen Unternehmen die Spenden akzeptieren. Die Tabelleneinträge beinhalten den Längen- und Breitengrad, die Telefonnummer und welche Spenden angenommen werden.</li>
 	<li style="font-weight: 400;">Das Speichern von Informationen um ein Userprofil anzulegen. Daten wie der Standort oder der Username werden in der Tabelle gespeichert.</li>
 	<li style="font-weight: 400;">Das Erstellen von Karten und die Anzeige von einzelnen Punkten auf ihnen.</li>
 	<li style="font-weight: 400;">Die Visualisierung von Daten in Kuchendiagrammen und Grafen.</li>
 	<li style="font-weight: 400;">Das Speichern von Nutzerinformationen.</li>
 	<li style="font-weight: 400;">Das Abspeichern von Nachrichten und Kommentaren in einem Forum.</li>
</ul>
Schau dir auch diese zwei Apps an, die verbundene Tabellen verwenden.
<ul>
 	<li style="font-weight: 400;">Die "CramJam” und die “BCNeeds” App verwenden beide verbundene Tabellen.
<ul>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=UtbOWCgjbL8" target="_blank" rel="noopener">CramJam Demo Video</a></li>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=rC0-9UMDfBk" target="_blank" rel="noopener">CramJam Pitch Video</a></li>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=q0Y3GWxl1zg" target="_blank" rel="noopener">BCNeeds Demo Video</a></li>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=XZtDElDl9V8" target="_blank" rel="noopener">BCNeed Pitch Video</a></li>
</ul>
</li>
 	<li style="font-weight: 400;">“CramJam” nutzt sie um Google Dokumente und Bilder in der App zu laden und um eine Vorschau dieser online Dateien anzeigen zu können. “BCNeeds” nutzt sie um mögliche Spenden an gemeinnützige Gruppen zu verwalten. Beide Apps nutzen die Tabellen um Daten abzuspeichern und diese Daten mit einer Listenauswahl (list pickers) zu verknüpfen.</li>
</ul>
Hier findest du ein Tutorial vom MIT, das dir erklärt wie du verbundene Tabellen erstellst: <a href="http://explore.appinventor.mit.edu/ai2/pizzaparty" target="_blank" rel="noopener">Fusion table AI Pizza Party</a>. Als wir an einer Stelle nicht weiter gekommen sind hat uns <a href="https://www.youtube.com/watch?v=14jyD7_V1RA" target="_blank" rel="noopener">dieses Video</a> weitergeholfen.

Tipps zur Fehlerbehebung:
<ul>
 	<li style="font-weight: 400;">Du brauchst zu keiner Zeit deine Kreditkarteninfos bei Google angeben, alle verwendeten Funktionen sind kostenfrei.</li>
 	<li style="font-weight: 400;">Lade dir den Quellcode für Pizza Party runter und spiele etwas damit herum!</li>
</ul>
<h3>APIs</h3>
Stell dir vor du entwickelst eine App die den Nutzern auf Grundlage des Wetters vorschlagen soll, was sie anziehen können. Natürlich könntest du viel Zeit damit verbringen Wetterdaten in verbundene Tabellen hochzuladen, es ist dir jedoch auch klar, dass es bereits Webseiten gibt die die Wettervorhersage bereitstellen. Ein einfacherer Weg wäre es also einfach die Daten von diesen Webseiten abzugreifen und den Nutzern in deiner App zu zeigen!

Programmierer tuen dies sehr häufig. Man bezeichnet es auch als API oder application programming interface einer Website. Ein API beschreibt wie deine App in der Lage ist mit dem Internet zu kommunizieren und alle Daten, die sie benötigt, zu erhalten. Wahrscheinlich benutzt du sehr häufig Programme, die APIs verwenden

Es gibt riesige Mengen von Daten im Internet und es gibt unglaublich viele Wege auf diese Daten zuzugreifen. Hier sind ein paar übliche APIs die Programmierer verwenden, wenn sie neue Apps entwickeln:
<table>
<tbody>
<tr style="color: white;" bgcolor="#333333">
<td>Daten</td>
<td>Wo man es kriegt</td>
<td>Tutorials für App Entwickler</td>
</tr>
<tr>
<td>Karten</td>
<td>Google Maps</td>
<td><a href="http://appinventor.mit.edu/explore/displaying-maps.html" target="_blank" rel="noopener">http://appinventor.mit.edu/explore/displaying-maps.html</a></td>
</tr>
<tr>
<td>Börsenkurse</td>
<td>Yahoo! Finance</td>
<td><a href="http://explore.appinventor.mit.edu/ai2/stockquotes" target="_blank" rel="noopener">http://explore.appinventor.mit.edu/ai2/stockquotes</a></td>
</tr>
<tr>
<td>Wetter</td>
<td>National Weather Service</td>
<td><a href="https://appinventorapi.com/weather/" target="_blank" rel="noopener">https://appinventorapi.com/weather/</a></td>
</tr>
</tbody>
</table>
Du solltest APIs immer nutzen, wenn du Informationen benötigst die bereits an anderen Webseiten oder Datenbanken verfügbar sind.
<h3>Übung: Entdecke APIs</h3>
Denke darüber nach ob eine API hilfreich für deine App ist. Hier ein paar Fragen die dir dabei helfen können:
<ul>
 	<li style="font-weight: 400;">Welche Art von Daten benötigst du damit deine App funktioniert?</li>
 	<li style="font-weight: 400;">Wie kannst du diese Daten erhalten?</li>
</ul>
<h3>Programmier-Herausforderung 4:</h3>
Wähle eine mobile Komponente und eine online Datenbank oder eine API von denen du denkst, dass sie nützlich für deine App sein könnten. Richte beides ein und spiele etwas mit ihnen herum. Diese Übung wird dir helfen, wenn es an der Zeit ist deine richtige App zu programmieren!
<h3>Reflexion</h3>
Nachdem du dich mit dieser Einheit beschäftigt hast solltest du nun eine ziemlich gute Idee davon haben welche Komponenten du in deine App einbauen musst. Herzlichen Glückwunsch!

Du wirst wahrscheinlich einen Großteil der kommenden Wochen benötigen um diese Funktionen in deine App einzubauen. Wenn du für deine App noch weitere Komponenten benötigst, die wir bisher nicht angesprochen haben, schaue am besten <a href="http://ai2.appinventor.mit.edu/reference/components/" target="_blank" rel="noopener">hier</a> für mehr Informationen.
<h5>Weitere Quellen</h5>
<ul>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=dXi55Rai7pQ">Thunkable Google Maps Tutorial</a></li>
 	<li style="font-weight: 400;"><a href="https://www.youtube.com/watch?v=JLCLcU05FRc">Spinner Component Demonstration Video</a></li>
</ul>
Schau dir doch mal das Video von Technovation Alumni Ashni Sheth an um zu lernen wie du Bots in deiner App verwenden kannst.
