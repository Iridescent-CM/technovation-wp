<h1>Code 1</h1>
<h1>Einführung in Kodierung &amp; App Inventor</h1>
<ul>
 	<li><a href="#algo">Algorithmen</a></li>
 	<li><a href="#proglang">Programmiersprachen</a></li>
 	<li><a href="#getstarted">App Inventor</a></li>
 	<li><a href="#event">Event Handling</a></li>
 	<li><a href="#func">Funktionen</a></li>
 	<li>Programmiertest 1</li>
 	<li><a href="#reflect">Lernpunkte</a></li>
</ul>
<h2><b><strong>Lernziele:</strong></b></h2>
In diesem Modul lernt ihr...
<ul>
 	<li>Programmiersprachen und deren Verwendung</li>
 	<li>Einrichten von App Inventor</li>
 	<li>Starte mit dem Programmieren in App Inventor</li>
</ul>
&nbsp;
<h3>Algorithmen</h3>
Die meisten Kinder, die in Nordamerika aufwachsen, lieben Erdnussbutter und Geleesandwiches. Ein Sandwich sollte einfach sein: schmiere Erdnussbutter auf eine Scheibe Brot, und Gelee auf die andere! Schaut euch Lynese und Pablo an, die versuchen, ihrem Freund Jared Anweisungen zu geben, um ein Sandwich zu machen.

Video 1

Video 2

<em>Falls du Probleme hast, diese Videos abzuspielen, versuche es mal, diese Seite in Google Chrome zu laden.</em>

Jared agiert wie ein Computer - er wird nichts tun, wenn es ihm nicht in einfachen Schritt-für-Schritt-Befehlen gesagt wird. Eine Person würde wissen, dass die Anweisung "schmiere etwas Gelee auf das Brot" wirklich bedeutet, das Geleeglas zu öffnen, sein Messer zu nehmen, mit dem Messer Gelee aus dem Glas zu holen, um dann Gelee aufs Brot zu schmieren. Allerdings würde ein Computer tun, was Jared getan hat; Es würde das ganze Glas Gelee auf das Brot schmieren und verwirrt sein!

Im Gegensatz zu Menschen können Computer nicht ableiten oder Vermutungen anstellen! Sie können nur genau das tun, was ihnen gesagt wird. Lynese und Pablo gaben Jared einen <strong>Algorithmus</strong>, um ein Sandwich zu schmieren. Ein Algorithmus ist eine Sammlung von Schritt-für-Schritt-Anweisungen. Um einen Computer etwas machen zu lassen, müsst ihr einen Algorithmus für sie herstellen, damit sie euch verstehen.

In Technovation werdet ihr lernen, wie man Algorithmen schreibt und wie man eine Mobile App programmiert.
<h3>Aufgabe</h3>
<strong>Nimm dir ein Stück Papier und führe diese unterhaltsame Aufgabe durch, um zu imitieren, wie ein Computer denkt!</strong>

Schreibt einen Algorithmus, um eine alltägliche Aufgabe zu tun. Es könnte sein, Fahrrad zu fahren, ein Sandwich zu machen, ein Spiel zu spielen oder etwas anderes! Wenn ihr fertig seid, gebt euren Algorithmus an einen Teamkollegen oder Freund und er soll genau das tun, wie es beschrieben wurde, genauso wie Jared im Video. Sind die Aufgaben wie erwartet durchgeführt worden?

&nbsp;
<h3>Programmiersprachen</h3>
Computeralgorithmen werden in <strong>Programmiersprachen</strong> geschrieben. Programmiersprachen sind Werkzeuge, die euch helfen, mit eurem Computer zu sprechen. Kodierer verwenden verschiedene Programmiersprachen, um verschiedene Dinge zu tun. Einige Sprachen sind besser für die Herstellung von Apps, einige sind besser für die Herstellung von Websites und einige sind besser für die Ausführung komplizierter Berechnungen. Genau wie jede andere Sprache müsst ihr lernen, wie man sie verwendet, um kommunizieren zu können!

Für Technovation werdet ihr lernen, App Inventor zu verwenden. Das ist eine Programmiersprache, die ideal für <strong>Mobile Apps</strong> ist. Eine Mobile App ist eine Software, die für die Verwendung auf einem Gerät wie einem Mobiltelefon oder einem Tablet und nicht auf einem Computer verwendet wird. Hier sind einige Namen von Programmiersprachen und für was sie gewöhnlich verwendet werden.

&nbsp;
<table width="624">
<tbody>
<tr>
<td width="155"><strong>Sprache</strong></td>
<td width="469"><strong>Verwendung</strong></td>
</tr>
<tr>
<td width="155">JavaScript</td>
<td width="469">Erstellen von Webseiten</td>
</tr>
<tr>
<td width="155">Objective C</td>
<td width="469">Erstellen von Android Apps</td>
</tr>
<tr>
<td width="155">Swift</td>
<td width="469">Erstellen von iphone Apps (iOS app Entwicklung)</td>
</tr>
<tr>
<td width="155">App Inventor</td>
<td width="469">Erstellen von Android Apps (Ihr lernt das in dieser Stunde!)</td>
</tr>
</tbody>
</table>
<em>Tipp: Schlage alle Wörter nach, die du nicht kennst. Wenn Programmierer nicht wissen, was etwas bedeutet, schlagen sie es nach. Als neuer Programmierer ist es gut, Fragen zu stellen und sich mit den Wörtern vertraut zu machen, die von Programmierern verwendet werden.</em>

&nbsp;
<h3>Aufgabe</h3>
Hat dein Mentor, oder jemand den du kennst, Erfahrung in der Technik-Industrie? Frag diese Person über ihre Erfahrung und über Projekte, an denen sie arbeiten!
<ul>
 	<li>An welchen technologiebezogenen Projekten hast du mitgearbeitet, und was hast du gelernt? (Dein Mentor hat vielleicht eine neue Technologie gebaut, ein Geschäftsmodell entwickelt oder in anderer Weise dazu beigetragen).</li>
 	<li>Wenn du persönliche Erfahrungen mit einer Programmiersprache hast, wofür hast du sie genutzt?</li>
</ul>
Wenn du niemanden in der Technik-Industrie kennst, kannst du ja die folgenden Interviews mit weiblichen Ingenieuren bei Facebook und Google anschauen! (in Englisch)

&nbsp;
<h2>Erste Schritte mit dem App Inventor</h2>
<em>Du kannst diesen Teil überspringen, wenn du bereits weisst, wie du den App Inventor verwendest oder wenn du eine andere Programmiersprache verwendest, um deine App zu erstellen.</em>

<i> </i>

<b>App Inventor</b> is a free web application that allows users to create apps for Android phones and tablets. You can access App Inventor using a web browser by going to <a href="http://appinventor.mit.edu/" target="_blank">http://appinventor.mit.edu/</a>.

Der <strong>App Inventor</strong> ist eine kostenlose Web-Anwendung, mit der Benutzer Apps für Android-Handys und Tablets erstellen können. Du kannst auf den App Inventor mit einem Webbrowser zugreifen, indem du auf <a href="http://appinventor.mit.edu/">http://appinventor.mit.edu/</a> wechselst. Sieh dir dieses Video an, um mehr darüber zu erfahren, wie man den App Inventor programmiert.

Wie du im Video gesehen hast, ist der App Inventor wirklich einfach zu bedienen! Du kannst deine App am Computer designen und programmieren und sie dann mit einem Android Smartphone oder einem Emulator testen! Deine Arbeit wird auf den App Inventor-Servern gespeichert werden, so ist sie jedes Mal, wenn du dich anmeldest wieder dort. Weitere Informationen über den App Inventor findest du auf <a href="http://appinventor.mit.edu/explore/content/what-app-inventor.html">dieser Seite.</a>
<h3>App Inventor einrichten</h3>
In diesem Teil erfährst du, wie du mit dem App Inventor einen Algorithmus schreibst, den ein Android-Smartphone verstehen kann! Folgendes brauchst du um den App Inventor zu verwenden:
<ul>
 	<li><strong>Computer</strong></li>
 	<li><strong>Internetzugang</strong></li>
 	<li><strong>Gmail-Konto</strong>
<ul>
 	<li>Du benötigst ein Google Mail-Konto, um dich bei <a href="http://ai2.appinventor.mit.edu/">App Inventor</a> Zum Einrichten eines Google Mail-Kontos klicke <a href="https://accounts.google.com/signup">hier</a>.</li>
</ul>
</li>
 	<li><strong>Android Telefon oder Tablet (optional, aber sehr empfehlenswert)</strong> Wenn du kein Android-Smartphone hast, sind hier einige preiswerte Optionen von Amazon, die keine Mobilfunkverträge benötigen. Wir empfahlen Ice Cream Sandwich Version 4.0 oder neuer für das Betriebssystem.
<ul>
 	<li><a href="https://www.amazon.com/Motorola-Moto-LTE-Contract-Cellular/dp/B00XQVDW6Y/ref=sr_1_18?s=wireless&amp;ie=UTF8&amp;qid=1472241020&amp;sr=1-18&amp;keywords=android+phone">Motorola Android</a></li>
 	<li><a href="https://www.amazon.com/BLU-Advance-5-0-Unlocked-Smartphone/dp/B018IZ0SWI/ref=sr_1_3?s=wireless&amp;ie=UTF8&amp;qid=1471294013&amp;sr=1-3&amp;keywords=android+phones">BLU Android</a></li>
 	<li><a href="https://www.amazon.com/NPOLE-Tablet-Android-Camera-Supported/dp/B01K4HDXD4/ref=sr_1_1?s=pc&amp;ie=UTF8&amp;qid=1473366480&amp;sr=1-1-spons&amp;keywords=Android%2Btablet">Android Tablet</a></li>
</ul>
</li>
</ul>
Sobald du ein Google Mail-Konto hast, richte <a href="http://appinventor.mit.edu/explore/">hier</a> ein Konto mit App Inventor ein. Nachdem du dein App Inventor-Konto eingerichtet hast und eingeloggt bist, kehrst du zu dieser Seite zurück und gehst zum nächsten Teil.

&nbsp;
<h3>Verbinden vom App Inventor mit einem Android Phone</h3>
Du kannst ein Android-Smartphone oder einen Emulator anschliessen, um die App, die du im App Inventor erstellt hast, auf drei weisen zu testen. Wenn du ein Smartphone hast, kannst du es über WLAN oder über einen USB-Anschluss verbinden. Wenn du kein Android-Smartphone hast, kannst du einen Emulator verwenden, bei dem es sich um Software handelt, mit der du ein virtuelles Telefon auf deinem Computer installieren kannst. Wenn du eine dieser Methoden verwendest, ermöglicht dir der App Inventor, <strong>Live-Tests</strong> durchzuführen, d.h. du kannst deine App im App Inventor auf deinem Computer bearbeiten und siehst, dass diese Änderungen sofort auf deinem Telefon oder Emulator erscheinen. Nachdem du diese Teile überprüft und deine Geräte eingerichtet hast, solltest du warten, bis die unten aufgeführte Aktivität mit dem Erstellen der ersten App beginnt.
<h4>Wifi Methode</h4>
Dies ist der einfachste Weg, um den App Inventor zu verwenden und wird vom Technovations-Team <em>sehr empfohlen</em>. Wähle diese Methode, wenn du ein <strong>Android-Smartphone</strong> oder Tablet und <strong>Zugriff auf WLAN</strong> hast. Du musst in der Lage sein, deinen Computer und dein Telefon an das <strong>gleiche WLAN-Netz</strong> anzuschliessen, damit diese Methode funktioniert.

Mit der WLAN-Methode wirst du Apps auf deinem Computer erstellen und sie auf deinem Telefon mit der App Inventor Companion App, MIT AI2 Companion, testen. Sie dir <a href="http://appinventor.mit.edu/explore/ai2/setup-device-wifi.html">hier</a> die Anweisungen des MIT an, wie du die Verbindung herstellen kannst.

<a href="http://appinventor.mit.edu/explore/ai2/setup-device-wifi.html" target="_blank">Wifi Methode
</a>
<h5>Tipps zur Fehlerbehebung</h5>
<ol>
 	<li>Stelle sicher, dass du die richtige MIT AI2 Companion App auf dein Handy heruntergeladen hast, hier:   <a href="https://play.google.com/store/apps/details?id=edu.mit.appinventor.aicompanion3&amp;hl=en">AI Companion App</a>. Das Logo sieht so aus: <img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/unnamed.png" alt="AppInventorLogo" width="28" height="28" /></li>
 	<li>Stelle sicher, dass sich dein Computer und dein Telefon auf demselben WLAN-Netzwerk befinden</li>
 	<li>Setze deine Verbindung zurück, wenn ein Fehler aufgetreten ist<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/ResetConnection.png" alt="resetconnection" width="799" height="215" /></li>
 	<li> Wenn du nicht weiter weisst findest du hier ein Video, dass dir vielleicht hilft:   <a href="https://www.youtube.com/watch?v=cvoQg-Q_h7M&amp;list=PL5T8bmLxd_T3XKbSIvi1OfwBra5KFlKij&amp;index=5" target="_blank">PhilsComputerLab: Connecting with Wi-Fi</a></li>
</ol>
Wenn du alles eingerichtet hast und es funktioniert, gehe zur <a href="#talktome">Aufgabe.</a>
<h4>USB Methode</h4>
Dies ist die technisch schwierigste Methode und erfordert, dass du Software auf deinem Computer installierst. Wähle du diese Methode, wenn du ein <strong>Android-Smartphone </strong>oder Tablet und <strong>kein WLAN</strong> hast.

Mit dieser Methode wirst du Apps auf deinem Computer mit dem App Inventor erstellen und sie auf deinem Telefon testen, indem du es mit einem USB-Kabel verbindest. Du musst Software auf deinen Computer und die Companion App auf dein Telefon herunterladen, um dies zu tun. Wenn du einen Windows-Computer verwendest, musst du möglicherweise auch einen <strong>USB-Treiber</strong> für dein Telefon herunterladen. Für Macs brauchst du dir keine Sorgen um den USB-Treiber zu machen. <a href="http://appinventor.mit.edu/explore/ai2/setup-device-usb.html">Hier</a> siehst du die Anweisungen des MITs für die USB-Methode.

<a href="http://appinventor.mit.edu/explore/ai2/setup-device-usb.html" target="_blank">USB METHODE
</a>
<h5>Tipps zur Fehlerbehebung</h5>
<ol>
 	<li style="font-weight: 400">Stelle sicher, dass du die richtige MIT AI2 Companion App auf dein Handy heruntergeladen hast:  <a href="https://play.google.com/store/apps/details?id=edu.mit.appinventor.aicompanion3&amp;hl=en" target="_blank">AI Companion App</a>. Das Logo sieht so aus:  <img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/unnamed.png" alt="AppInventorLogo" width="29" height="29" /></li>
 	<li style="font-weight: 400">Setze deine Verbindung zurück, wenn ein Fehler aufgetreten ist<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/ResetConnection.png" alt="resetconnection" width="799" height="215" /></li>
 	<li style="font-weight: 400">Möglicherweise musst du die Entwickleroptionen aktivieren, bevor sie in deinen Einstellungen angezeigt werden. Hier ist ein guter Artikel, um dir zu zeigen, wie adu Entwickler-Optionen und USB-Debugging auf den meisten Android-Handys aktivierst: <a href="http://www.howtogeek.com/129728/how-to-access-the-developer-options-menu-and-enable-usb-debugging-on-android-4.2/" target="_blank">howtogeek</a></li>
 	<li style="font-weight: 400">Möglicherweise musst du den Dialog auf deinem Telefon annehmen, bevor er eine Verbindung zu deinem Computer herstellen kann</li>
</ol>
Mac
<ol>
 	<li style="font-weight: 400">Möglicherweise musst du die Standardsicherheitseinstellungen ändern, wenn du eine Warnmeldung erhalten hast, die besagt, dass "" MITAppInventorSetup.pkg " can’t be opened because it is from an unidentified developer." Öffne Sicherheit und Privatsphäre in deinen Einstellungen um diese zu ändern, klicke auf " open anyway " oder ändere deine Einstellungen, damit Apps von überall heruntergeladen werden können.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/MacError.png" alt="macerror" width="475" height="399" />

Windows
<ol>
 	<li>Achte darauf, dass aiStarter läuft. Möglicherweise musst du es suchen und starten.</li>
 	<li>Du brauchst höchstwahrscheinlich einen Treiber, damit sich dein Telefon mit deinem PC verbindet. Hier ist MITs Dokumentation zum Installieren eines Treibers <a href="http://appinventor.mit.edu/explore/ai2/connect-USB-win.html">MIT USB help</a>
<ul>
 	<li>Du solltest nachprüfen, was der richtige Treiber für dein Telefon ist. MITs Dokumentation hilft dir, wenn du ein Google-Handy hast.</li>
 	<li>Möglicherweise musst du den Treiber aktualisieren, den der Computer für dein Telefon verwendet, auch nachdem du einen neuen Treiber installiert hast. Hier findest du Anleitungen dazu: <a href="https://technet.microsoft.com/en-us/library/cc730965(v=ws.11).aspx">Update Driver Instructions</a></li>
</ul>
</li>
</ol>
Videos
<ol>
 	<li style="font-weight: 400">Hier ist ein Video, das dir hilft, einen PC einzurichten: <a href="https://www.youtube.com/v/bqdQC-0eH1w?start=80&amp;end=202" target="_blank">PhilsComputerLab: Setting up your PC</a></li>
 	<li style="font-weight: 400">Hier ist ein Video, das dir beim Einrichten deines Telefons hilft, beachte, dass du die zusätzliche QR-Reader App nicht brauchst: <a href="https://www.youtube.com/v/uUPY1_PJPnQ?start=0&amp;end=121" target="_blank">PhilsComputerLab: Setting up your Phone</a></li>
 	<li style="font-weight: 400">Nachdem du alles eingerichtet hast, ist hier erklärt, wie du mit einem USB-Kabel verbindest: <a href="https://www.youtube.com/watch?v=vNIOMJCkKWI" target="_blank">PhilsComputerLab: Connecting with USB cable</a></li>
</ol>
Wenn du alles eingerichtet hast und es funktioniert gehst du zur <a href="#talktome">Aufgabe.</a>
<h4>Emulatormethode</h4>
Diese Methode kann sehr schwierig zu verwenden sein, vor allem auf Windows, und wird vom Technovations-Team nicht empfohlen. Du solltest diese Methode verwenden, wenn du <strong>kein Android-Handy oder Tablet hast.</strong>

Ein Emulator ist eine Software, mit der du ein virtuelles Telefon auf deinem Computer ausführen kannst. Mit der Emulator-Methode wirst du Apps auf deinem Computer bauen und testest sie auf deinem Computer mit einem <strong>Emulator</strong>. <u>Hier </u>siehst du die Anweisungen des MITs für die Emulatormethode

.

<a href="http://appinventor.mit.edu/explore/ai2/setup-emulator.html" target="_blank">
Emulator Methode
</a>
<h5>Tipps zur Fehlerbehebung</h5>
<ol>
 	<li>Stelle in Windows sicher, dass aiStarter ausgeführt wird. Möglicherweise musst du es suchen und starten.</li>
 	<li>Der Emulator kann langsam starten.</li>
 	<li>Vergewissere dich, dass das Telefon nicht an den Computer angeschlossen ist.</li>
 	<li>Setze deine Verbindung zurück, wenn ein Fehler aufgetreten ist oder wenn der Emulator nicht antwortet. <img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/ResetConnection.png" alt="resetconnection" width="799" height="215" /></li>
 	<li>Hier ist die Hilfe-Seite für den Emulator: <a href="https://docs.google.com/document/d/1NbJRyCA9udxdU3oNyadR0fuvNglijYR7X3mVB_ZIeNU/edit" target="_blank">MIT Help page</a></li>
 	<li>Hier ist ein Video, das dir hilft, eine Verbindung zu einem Emulator herzustellen:  <a href="https://www.youtube.com/watch?v=8jjeMLwVAlE" target="_blank">PhilsComputerLab: Using the Emulator</a></li>
</ol>
Wenn du alles eingerichtet hast und es funktioniert, gehst du zur <a href="#talktome">Aufgabe.</a>
<h3>Aufgabe</h3>
Mache diese beiden Tutorials. Diese werden dir helfen, deine erste App im App Inventor zu erstellen und sie werden dir helfen, den nächsten Teil zu verstehen. Denke daran, dies ist deine erste App, es ist okay, wenn du nicht weiter kommst!

Tutorial 1: Sprich mit mir Teil I

<a href="http://appinventor.mit.edu/explore/sites/all/files/hourofcode/TalkToMePart1.pdf" target="_blank">Lade eine PDF-Kopie dieses Tutorials hier herunter</a>
<h4>Tutorial 2: Sprich mit mir Teil II</h4>
<a href="http://appinventor.mit.edu/explore/sites/all/files/hourofcode/TalkToMePart2.pdf" target="_blank">Lade eine PDF-Kopie dieses Tutorials hier herunter</a>
<h2>Event Handling</h2>
Wenn du die Talk to Me App erstellt hast, hast du sowohl den Designer als auch die Blockseite vom App Inventor verwendet. Jedes Mal, wenn du ein Design-Element in deinem App kreierst, musst du dem Computer sagen, was das Element tun soll! All diese Informationen werden in deinen Blöcken sein.

&nbsp;

Deshalb wird der App Inventor als 'Block-Programmiersprache' bezeichnet. Für jedes Element, das du in die Designer-Seite deiner App gesetzt hast, musst du deinem Computer sagen, was damit zu tun ist und wann es das tun sollte. Dies wird als <strong>Event-Handling</strong> bezeichnet.

Ein <strong>Ereignis</strong> ist etwas, was passiert. Du hast wahrscheinlich das Wort "Ereignis" in Bezug auf die Geburtstagsfeier eines Freundes oder ein Schulspiel gehört. Bei der Codierung ist ein <strong>Ereignis</strong> etwas, das den Code auslösen und zum Laufen bringen soll. Zum Beispiel könnte es sein, dass der Benutzer auf einen Button klickt, eine Änderung in der Ausrichtung des Telefonbildschirms vornimmt oder der Benutzer Text in ein Textfeld eingibt. Die Art und Weise, wie der Computer die Veranstaltung <strong>verarbeitet</strong>, ist alles, was du ihm sagst das er tun soll, wenn das Ereignis geschieht.

In deiner App Talk to Me hast du der App gesagt, was zu tun ist, wenn der Benutzer auf einen Button geklickt hat, damit hast du einen Event-Handler auf den Button gesetzt! Es sah so aus:

<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/Screen-Shot-2016-08-26-at-1.04.52-PM.png" alt="screen-shot-2016-08-26-at-1-04-52-pm" width="334" height="108" />

Das <em>Ereignis</em> war der Benutzer, der auf den Button klickt und die App handhabte, indem sie TextToSpeech anrief, um etwas zu sagen. Dies musst du unbedingt im Auge behalten. Wenn du codierst, musst du darüber nachdenken, was du willst, dass deine App tun und wann sie dies tut.

&nbsp;
<h3>Aufgabe</h3>
Fallen dir einige Beispiele für Event-Handling ein, die dein Telefon macht? Hier sind ein paar zum Einstieg:
<ul>
 	<li>Wenn du auf "Senden" für eine Textnachricht klickst, sendet es die Nachricht und macht ein Geräusch</li>
 	<li>Wenn du versuchst, eine App aus einem App Store zu erwerben, fragt das Telefon nach einem Passwort</li>
 	<li>Wenn du auf ein Symbol für eine App klickst, wird die App geöffnet.</li>
</ul>
.
<h2>Funktionen</h2>
Wenn du den <em>Block</em>-Bildschirm in App Inventor, hast du die verschiedenen Kategorien der eingebauten Funktionen bemerkt? Diese sehen so aus:

<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/technovation2.jpg" alt="technovation2" width="139" height="190" />

<strong>Funktionen</strong> sind Codeblöcke, die etwas tun. Sie akzeptieren eine <strong>Eingabe</strong> und erzeugen eine <strong>Ausgabe</strong>. Ein Eingang ist Information, die in eine Funktion übergeht, und ein Ausgang ist Information, die an dich zurückgegeben wird. In den Talk To Me-Tutorials hast du eine Sprache-zu-Text-Funktion verwendet, die Text aufnimmt und sie zu Sprache macht! Die Eingabe ist der Text und die Ausgabe ist die Sprache! Während du noch lernst und zu programmieren, werden Funktionen und ihre Inputs und Outputs mehr Sinn machen.

&nbsp;

Die eingebauten Funktionen im App Inventor sind die Grundlage dessen, was du verwendest, um deine App zu schreiben. Alle Programmiersprachen haben integrierte Funktionen, und gute Programmierer wissen, wie diese Funktionen zu kombinieren sind, damit der Computer macht, was sie wollen. Sobald du weisst, wie jede dieser Funktionen zu verwenden ist, kannst du sie auf verschiedene Weisen kombinieren, um deine App zu kreieren! Du lernst, wie du diese Funktionen benutzt in Einheit  <a href="http://www.technovationchallenge.org/curriculum/coding-unit-2/" target="_blank">Code 2: Daten und Variablen</a> und Einheit <a href="/?p=17114" target="_blank">Code 3: Logik, Schleifen und Bedingungen</a>.
<h3>Aufgabe</h3>
Bevor wir weitermachen lass uns etwas mehr programmieren! Kannst du deine Sprich zu mir App auf die nächste Ebene bringen? Hier sind einige Ideen für dich zum Ausprobieren!
<ol>
 	<li style="font-weight: 400">Ändere die Tonhöhe der Stimme in deiner Sprache mit der Textkomponente. Klicke auf die Sprache zu Text in der Block-Seite und suche nach der Pitch-Eigenschaft. Du kannst deine Stimme eine Tonhöhe von 0, 1 oder 2 geben.
<ul>
 	<li style="font-weight: 400">Schau dir das einmal an, um zu lernen wie es funktioniert: <a href="http://ai2.appinventor.mit.edu/reference/components/media.html#TextToSpeech" target="_blank">App Inventor TextToSpeech Information</a></li>
</ul>
</li>
 	<li style="font-weight: 400">Verwende den Spracherkennungssensor, um das Telefon etwas wiederholen zu lassen oder etwas auszudrucken, das du zu ihm gesagt hast!</li>
</ol>
Am Ende jeder Codierungseinheit wirst du einen Codierungs-Test abschliessen, den du deinem Mentor für ein Feedback sendest. Diese Tutorials helfen dir, Schlüssel-Coding-Konzepte zu lernen und werden dir helfen, deine finale App zu programmieren.
<h2>Programmiertest 1: Kreiere eine Slide Show</h2>
Test: Programmiere eine Slide Show, die es dem Benutzer erlaubt, durch seine Lieblingsbilder zu klicken!

Für diese App möchtet ihr eine Diashow erstellen, in der eure Benutzer durch Bilder navigieren können. Wenn ihr euren Bildschirm zu entwirft, müsst ihr ein Bild sowie "vorherige" und "nächste" Schaltflächen für euren Benutzer einfügen. Dieser Teil wird im Designer-Bildschirm durchgeführt.

Versucht, den Test auf eigene Faust abzuschliessen, bevor ihr die Anweisungen lest. Die Anleitung zeigt nur eine Möglichkeit, wie diese Herausforderung gelöst werden kann. Ihr könnt unsere Beispiel-App auch im Google Play Store herunterladen. Viel Spass beim Programmieren!

&nbsp;

<a href="/?p=20504" target="_self"> Siehe Anleitung
</a><a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.Slideshow" target="_blank">
Lade hier die Beispiel-App herunter
</a>
<h2>Lernpunkte</h2>
In dieser Lektion haben wir viele Inhalte angeschaut. Du hast eine Menge Stichwörter gelernt, welche dir beim Start helfen, und du hast dein erstes Programm geschrieben. Hier sind einige Fragen, welche du mit dem Mentor und dem Team diskutieren kannst:

<strong>Q1:</strong> Was war der schwierigste Teil beim Einstieg zu App Inventor? Hast du viel Zeit an einem bestimmten Punkt aufgewendet?

<strong>Q2:</strong> Welche Dinge dieser Lektion waren hilfreich bei der Erstellung deiner App?

Hier sind die Stichwörter, welche du gelernst hast:
<ul>
 	<li><strong>Algorithmus</strong> – Schritt-für-Schritt-Anweisungen für deinen Computer</li>
 	<li><strong>Programmiersprache</strong> – Eine Möglichkeit, mit deinem Computer zu sprechen und Anweisungen zu geben.</li>
 	<li><strong>Ereignis</strong> – Wenn der Benutzer etwas in der App macht, zum Beispiel auf einen Button klickt oder Text eingibt</li>
 	<li><strong>Event handler</strong> – Ein Block von Programmiercode, der deiner App sagt, was bei einem Ereignis zu tun ist.</li>
 	<li><strong>Funktionen</strong> – Blöcke von Programmiercode, die etwas tun. Sie nehmen eine Eingabe und verändern sie in etwas; dieses Etwas ist die Ausgabe.</li>
 	<li><strong>Eingabe</strong> – Informationen, die in eine Funktion eingegeben wird.</li>
 	<li><strong>Ausgabe</strong> – Informationen, die aus einer Funktion kommen.</li>
</ul>
