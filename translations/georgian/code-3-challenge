კოდი 3 გამოწვევა: მონაცემთა ბაზის კვლევა

<h1>კოდი 3 გამოწვევა<br />
მონაცემთა ბაზის კვლევა</h1>
<ul>
<li><a href="#design">Designing the Screen</a></li>
<li><a href="#data">Adding Data to the Database</a></li>
<li><a href="#list">Creating Lists of Names and Values</a></li>
<li><a href="#check1">Check Point 1</a></li>
<li><a href="#search">Programming the Search Button</a></li>
<li><a href="#check2">Check Point 2</a></li>
<li><a href="#newscreen">Displaying the Search Results</a></li>
<li><a href="#finalcheck">Final Check Point</a></li>
</ul>
<h3>აღწერილობა</h3>
<p>შექმენით აპლიკაცია, რომელიც მომხმარებელს საშუალებას აძლევს მოიძიოს მონაცემთა<br />
ბაზის ინფორმაცია და ნახოს შედეგები. ინფორმაცია უნდა მოიცავდეს ცნობილ ადამიანებს,<br />
ადგილებს, ფილმებს, მუსიკას, მოვლენებს ან სხვა რამეს, რაც თქვნ გსურთ. დარწმუნდით,<br />
რომ თქვენს მონაცემთა ბაზაში სულ მცირე სამი მასალაა.</p>
<p>იხილეთ ჩვენი მაგალითი აქ: <a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.DatabaseSearch" target="_blank" rel="noopener">Technovation Challenge #3</a></p>
<p>შეეცადეთ გაარკვიოთ თუ როგორ უნდა შეასრულოთ გამოწვევა დამოუკიდებლად, სანამ<br />
ინსტრუქციებს გადახედავდეთ. გახსოვდეთ, ინსტრუქციები გამოწვევის გადაჭრის მხოლოდ ერთ გზას აჩვენებს. ბედნიერ კოდირებას გისურვებთ!</p>
<h2>მიმოხილვა</h2>
<p>ჩვენ გადავწყვიტეთ, ამ კოდირების გამოწვევის მოგვარება ქალი მეცნიერების სახელების<br />
შენახვით და აღწერით TinyDB- ში. ჩვენ გამოვიყენეთ მეცნიერის სახელი, როგორც ტეგი მისი<br />
ნამუშევრის აღწერის შესანახად. შემდეგ, ჩვენ შევქმენით ორი სია, ერთი პირის სახელით და<br />
მეორე მისი ნამუშევრის აღწერით. მომხმარებელი შევა ტექსტში და აპლიკაცია მოძებნის<br />
თითოეულ პუნქტს ორივე სიაში დასაწყვილებლად. თუ ისინი დაწყვილდნენ, მაშინ ქალის<br />
სახელი გამოჩნდება listview -ში. ამის შემდეგ მომხარებელს შეუძლია აირჩიოს ის მეცნიერი,<br />
რომლის შესახებაც მეტის შესწავლა სურს. ახალი ეკრანი კი გახსნის მისი ნამუშევრის<br />
აღწერას. ამ აპლიკაციაში ჩვენ უნდა გამოვიყენოთ TinyDB მონაცემების შესანახად და თანაც<br />
ამის გაკეთება შესაძლებელია ცალ-ცალკე ეკრანებზე.</p>
<table>
<tbody>
<tr>
<td style="text-align: right">სახელი<br />
(Tag)</td>
<td>აღწერილობა</td>
</tr>
<tr>
<td style="text-align: right">Ada<br />
Lovelace</td>
<td>ადა იყო ინგლისელი მათემატიკოსი და მწერალი, რომელიც ცხოვრობდა 1800-იან წლებში და ცნობილია ნამუშევრით -ჩარლზ ბაბეჯის ადრეული მექანიკური, ზოგადი დანიშნულების კომპიუტერი, იგივე ანალიტიკური ძრავა. ადა ხშირად მიიჩნევა მსოფლიოს პირველ პროგრამისტად, რადგან მან დაწერა პირველი ალგორითმი, რომელის განხორციელებაც მანქანის საშუალებით მოხდა.</td>
</tr>
<tr>
<td style="text-align: right">Marie Curie</td>
<td>მარი იყო ფიზიკოსი და ქიმიკოსი, რომელიც 1867 წელს პოლონეთში, ვარშავაში დაიბადა. თავის მეუღლე პიერთან ერთად მან აღმოაჩინა 2 ახალი რადიოაქტიური ელემენტი. მარიმ 1903 წელს მიიღო ნობელის პრიზი ფიზიკის დარგში. მან ასევე აღმოაჩინა, რომ რადიომიური გაზი შეიძლება გამოყენებულ იქნას კიბოს წინააღმდეგ სამკურნალოდ.</td>
</tr>
<tr>
<td style="text-align: right">Alice Ball</td>
<td>ალისი ქიმიკოსი იყო, რომელიც 1892 წელს სიეტლში დაიბადა. იგი იყო პირველი აფრიკელი ამერიკელი და პირველი ქალი, რომელმაც ჰავაის უნივერსიტეტი დაამთავრა. ჯერ კიდევ 23 წლის ასაკში ალისმა განავითარა კეთრის საწინააღმდეგო მკურალობის კურსი. კეთრი მანამდე განუკურნებელი დაავადება იყო.</td>
</tr>
<tr>
<td style="text-align: right">Sau Lan Wu</td>
<td>საუ ლანი ფიზიკოსია, რომელიც 1940-იანი წლების დასაწყისში დაიბადა<br />
ჰონგ-კონგში იაპონიის ოკუპაციის დროს. მან ჰარვარდის უნივერსიტეტში<br />
დოქტორის წოდება მიიღო. მისი ხელმძღვანელობით ფიზიკოსთა გუნდმა<br />
აღმოაჩინა ახალი ნაწილაკი გლუონი. ის არის ერთ ერთი ყველაზე მნიშვნელოვანი ფიგურა ნაწილაკური ფიზიკის დარგში. ის ავტორია მრავალი ინოვაციური აღმოჩენის.</td>
</tr>
<tr>
<td style="text-align: right">Patricia Bath</td>
<td>პატრიცია ოფთალმოლოგი და გამომგონებელია. იგი დაიბადა 1942 წელს<br />
ჰარლემში, ნიუ იორკში. მან დაამთავრა საშუალო სკოლა მხოლოდ 2 ნახევარ<br />
წელიწადში. მას თავიდანვე სურდა ექიმი გამხდარიყო. 1985 წელს მან დაამთავრა მსოფლიო მნიშვნელობის გამოგონება, რომლის საშუალებითაც კატარაქტის მოშორება და მხდველობის აღდგენა შესაძლებელი გახდა.</td>
</tr>
</tbody>
</table>
<h3>ეკრანის დიზაინი</h3>
<p>ჩვენმა მომხმარებლებმა უნდა შეიყვანონ ტექსტი მოსაძებნად. ასე რომ ჩვენ დავამატებთ<br />
ტექსტბოქსს, რათა მომხმარებელმა შეძლოს შესვლა, ძიება და ღილაკის დაჭერით<br />
დასრულება. როგორც ვიცით, ჩვენ ვინახავთ მონაცემებს მონაცემთა ბაზაში. ამიტომ ჩვენ<br />
გადავიტანეთ იგი TinyDB ეკრანზე. რადგანაც გამოვიყენებთ სიებს, ჩვენ ასევე ეკრანზე<br />
დავამატეთ listview .</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image17-1024x553.png" alt="image17" width="1024" height="553" /></p>
<h3>მონაცემების დამატება მონაცემთა ბაზებზე</h3>
<p>გადავწყვიტეთ, რომ მონაცემთა ბაზაში დავამატოთ მეცნიერის სახელი, როგორც ტეგი და მისი ნამუშევრის აღწერა, როგორც მნიშვნელობა. ასე გამოიყურება ჩვენს მიერ დამატებული ინფორმაცია მონაცემთა ბაზაში:</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image37-1024x580.png" alt="image37" width="497" height="282" /></p>
<p>ჩვენ დავამატეთ ეს ინფორმაცია მონაცემთა ბაზაში, ასე რომ როდესაც ეკრანი ირთვება ჩვენი აპლიკაცია პირველ რიგში სწორედ ამას ეკეთებს. ჩვენ უნდა გამოვიყენოთ მონაცემთა ბაზა ეკრანებს შორის ინფორმაციის გასაზიარებლად. App Inventor-ში ეკრანებს შორის<br />
მონაცემების გადაცემის მხოლოდ ორი გზა არსებობს: მონაცემთა ბაზების გამოყენება და<br />
startValue ბლოკი. თქვენ ნახავთ, თუ როგორ მუშაობს ეს ორივე მეთოდი და რა<br />
ინსტრუქციები არსებობს. ამის შესახებ შეგიძლიათ წაიკითხოთ აქ: <a href="http://appinventor.mit.edu/explore/ai2/concepts.html#Screens">here</a>.</p>
<h3>სიების შექმნა ტეგის სახელით და მონაცემთა ბაზის მნიშვნელობა</h3>
<p>ჩვენ შევქმენით სია ტეგის სახელების შესანახად. თავდაპირველად ჩვენ შევქმენით ცარიელი სია სახელწოდებით “TagNames”. შემდეგ დავამეტეთ ბლოკები ყველა ტეგ სახელის დასამატებლად სიაში. ამის შემდეგ დავრწმუნდით, რომ სიას დამატებული ტეგ სახელები ნამდვილად დაემთხვა მონაცემთა ბაზაში არსებულ სახელებს დიდი ასოების ჩათვლით.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image58-1024x548.png" alt="image58" width="849" height="455" /></p>
<p>ახლა, როცა ჩვენ გვაქვს სრული სია ყველა ჩვენი tag სახელით, ჩვენ უნდა შევქმნათ სხვა სია,<br />
რომელიც შეიცავს ყველა მნიშვნელობას მონაცემთა ბაზაში. მნიშვნელოვანია, რომ ისინი<br />
იმავე თანმიმდევრობით იყვნენ, როგორც tag სახელები. პირველ რიგში, ჩვენ შევქმენით<br />
ცარიელი სია მონაცემთა ბაზის ყველა მნიშვნელობის განსათავსებლად, სახელწოდებით<br />
"databaseValues". შემდეგ, ჩვენ დავამატეთ თითოეული მნიშვნელობა სიაში იმავე<br />
თანმიმდევრობით, როგორც tag, რომელიც შეესაბამება მას loop-ის გამოყენებით. თითოეული ელემენტისთვის "tagNames" სიაში, ჩვენ დავამატეთ მნიშვნელობა მონაცემთა ბაზიდან "databaseValues". შემდეგ ჩვენ დავამატეთ ეს for loop Screen1.Initialize event handlers.</p>
<p><img src="http://technovationchallenge.org/wp-content/uploads/2016/11/DBvar.png" alt="" width="419" height="42" /></p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image42-1024x314.png" alt="image42" width="600" height="184" /></p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image50-1024x470.png" alt="image50" width="650" height="298" /></p>
<h3>შემოწმება</h3>
<p>ამ ეტაპზე თქვენ უნდა გქონდეთ ყველა თქვენი მონაცემები თქვენს მონაცემთა ბაზაში. ასევე, ერთი სია თქვენი tag სახელებით და ერთი სია თქვენი მონაცემთა ბაზის მნიშვნელობებით. დარწმუნდით, რომ თითოეული თქვენი სია შეიცავს იმ მნიშვნელობებს, რომლებიც გსურთ! რადგან თქვენი აპლიკაცია ჯერ არ ამუშავებულა, შეგიძლიათ შეამოწმოთ თქვენი ნამუშევარი თქვენსავე სიებში, ListView- ში და დარწმუნდით, რომ ყველაფერი ადგილზეა. დაამატეთ ეს ბლოკი თქვენს კოდში, თქვენი for loop- ის ქვეშ, when Screen1.Initialize event handler- -ში რათა შეამოწმოთ, რომ თქვენი "tagnames" სიაში ზუსტია.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image00-1024x90.png" alt="image00" width="418" height="37" /></p>
<p>დაამატეთ ეს ბლოკი თქვენს კოდში, რომელიც მოთავსებულია თქვენს ეკრანზე, თქვენი for<br />
loop- ის ქვეშ, when Screen1.Initialize event handler -ში, რათა შეამოწმოთ, რომ თქვენი “databaseVales” სია ზუსტია.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image48-1024x78.png" alt="image48" width="456" height="35" /></p>
<p>მას შემდეგ, რაც თქვენ დარწმუნდებით, რომ თქვენი სიები ზუსტია, აუცილებლად წაშალეთ ეს ბლოკები!</p>
<h3>პროგრამირების ძებნა</h3>
<p>გვინდა, რომ ჩვენს მომხმარებელს შეეძლოს ჩვენი მონაცემთა ბაზის მოძიება ტექსტის შეყვანით ტექსტბოქსში და "ძებნა" ღილაკზე დაჭერით. ამისათვის ჩვენ შევიყვანთ event handler-ს ძებნის ღილაკზე, რომელიც გადახედავს თითოეულ პუნქტს ორივე "tagName" და "databaseValues" სიაში. დარწმუნდით, რომ სიის მონაცემები, შეესაბამება მომხმარებლის მიერ შეყვანილ ინფორმაციას. თუ ინფორმაცია ემთხვევა, მაშინ დავამატებთ მეცნიერის სახელს სიას. აქ, აღწერილია თუ როგორ გავაკეთეთ ეს.</p>
<p>პირველ რიგში, ჩვენ შევქმენით ცარიელი სია სახელწოდებით "searchResults".</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image03-1-1024x88.png" alt="image03" width="439" height="38" /></p>
<p>შემდეგ დავამატეთ event handler ძებნის ღილაკს. Event hndler-ში ჩვენ დავამატეთ ბლოკი<br />
მითითებული პარამეტრების უკან დასაბრუნებლად და სიის დასაცარიელებლად. ეს იმიტომ, რომ მომხმარებლის მიერ "ძებნა" ღილაკის დაჭერისას ყოველ ჯერზე, ჩვენ გვინდა გამოვყოთ ნებისმიერი ელემენტი, რომელიც შეიძლება დაემატოს“searchResults” / "ძიების შედეგებს" ბოლო ძიებაში.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image02-1024x183.png" alt="image02" width="441" height="79" /></p>
<p>შემდეგ დავაყენეთ for loop , რომელიც ეძებს თითოეულ ელემენტს “tagName” და<br />
“databaseValue” სიაში. ჩვენ არ გვისარგებლია for each loop-ით, რადგან ძიებას ვახდენთ<br />
ორ სიაში და ამის განხორციელება გვინდოდა საკონტროლო ცვლადის გამოყენებით for<br />
loop-ში . დავიწყეთ for loop "1" -ით და დამთავრდა იმ რიცხვით, რამდენი პუნქტიც იყო<br />
tagNames სიაში. ჩვენ შევცვალეთ ცვლადის სახელი ინდექსით, რადგანაც იგი გამოყენებული იქნება თითოეული სიის მაჩვენებლად.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image54-1024x383.png" alt="image54" width="519" height="194" /></p>
<p>აქ ბლოკით ჩვენ შევადარეთ მომხმარებლის მიერ ტექსტბოქსში მოძიებული ტექსტი და სიები “tagNames”-ში. loop გამეორებისას ყოველ ჯერზე, ცვლადი “index” -ი ერთით გაიზრდება. ასე, რომ ის თანდათაობით შეადარებს ტექსტს და “tagNames” სიაში არსებული ყოველ ელემენტს ერთმანეთთან. ჩვენ ვარჩიეთ, რომ ყველგან გამოყენებული იყოს პატარა ასოები ასე, რომ ძიებისას მნიშვნელობა არ აქვს დიდ ასოს გამოვიყენებთ თუ პატარას. “contains text” -ის ბლოკი დაუბრუნდება ჭეშმარიტებას თუ რაღაც ნაწყვეტი აღმოჩნდა ტექსტში და თუ არა, მაშინ “contains text” გახდება მცდარი.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image28-1024x172.png" alt="image28" width="508" height="85" /></p>
<p>იმისათვის, რომ შეგვედარებინა მომხმარებელის ძებნა "databaseValues" -ს, ჩვენ იგივე<br />
ბლოკები გამოვიყენეთ, მხოლოდ სიის სახელი შევცვალეთ.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image51-1024x161.png" alt="image51" width="585" height="92" /></p>
<p><em>შენიშვნა : ინდექსი არის საკონტროლო ცვლადი , ანუ ის არის ის ადგილობრივი ცვლადი ,</em><br />
<em>რომელიც შეიძლება გამოყენებულ იქნეს for loop-ის შიგნით . იმისათვის , რომ გამოჩნდეს</em><br />
<em>არსებული ცვლადების ჩამოსაშლელი მენიუ , თქვენ უნდა შეიყვანოთ ბლოკი სადმეს , loop-ის შიგნით . არ ინერვიულოთ იმაზე , თუ სად უნდა დააყენოთ ბლოკები , რადგან ყოველთვის შეგიძლიათ მათი გადაადგილება შემდგომში .</em></p>
<p>ჩვენ გვინდა დავანახოთ მომხმარებლის ის ქალი მეცნიერი, რომლის სახელი ან აღწერა<br />
შეესაბამება მომხმარებლის ძებნას. ამისათვის გამოყენებულ იქნა პირობითი და ლოგიკური<br />
,,ან’’/ or ოპერაცია.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image05.png" alt="image05" width="215" height="93" /></p>
<p>აქ ნაჩვენებია თუ როგორ გამოიყურება ,,ან’’კოდი შევსებულ or ოპერაციაში:</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image10-1024x223.png" alt="image10" width="1024" height="223" /></p>
<p>გვინდა, რომ ჩვენმა კოდმა დაამატოს ქალი მეცნიერის სახელი სიას "searchResults" თუ მისი<br />
სახელი ან მისი აღწერილობა შეესაბამება მომხმარებლის ძებნის პირობებს. თუ შესაბამისობა არსებობს, მაშინ ვამატებთ სახელს tagNames-დან loop ცვლადის "ინდექსი"-ის მეშვეობით. ჩვენ არ ვამატებთ else ჩვენს პირობით ბრძანებას, რადგან თუ სახელი ან აღწერილობა არ ემთხვევა, ასეთ შემთხვევაში გვსურს, რომ ჩვენმა კოდმა არაფერი არ გააკეთოს. შემდეგ ჩვენ დავამატეთ ელემენტები სიას "searchResults" ,ListView-ში. იმის გამო, რომ ეს ბლოკი for loop-ის გარეთაა, ჩვენი კოდი განაახლებს ListView -ს, მას შემდეგ, რაც for loop დასრულდება.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image39-1024x302.png" alt="image39" width="1024" height="302" /></p>
<h3><b>Check Point #2</b></h3>
<p>You just wrote a lot of code! Check your code to make sure you can search for something. Try searching for a name, like “Alice” or an occupation like “chemist”. Make sure you get the results you expected to get before moving on!</p>
<h3>ძიების შედეგების ჩვენება ახალ ეკრანზე</h3>
<p>მიგვაჩნია, რომ ჩვენი აპლიკაცია უკეთესი იქნებოდა თუ მისი საშუალებით მომხმარბელი<br />
შეძლებდა იმ ქალი მეცნიერის ამორჩევას, რომელიც ძიების შედეგებში აღმოჩნდა ანუ რომლის შესახებაც მიტის შესწავლა უნდოდა მომხმარებელს. ამის გასაკეთებლად, როდესაც მომხმარებელმა სიიდან რაღაც ამოირჩია, ჩვენ გავხსენით ახალი ეკრანი startValue<br />
მომხმარებლის ამორჩეული სიიდან. გახსოვდეთ, ეკრანებს შორის მონაცემების გდაცემის<br />
მხოლოდ ორი გზაა მონაცემთა ბაზა ან startValue ბლოკი!</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image31.png" alt="image31" width="597" height="108" /></p>
<p>ჩვენ შევქმენით მეორე ეკრანი ორი ეტიკეტით. ერთი აჩვენებს მეცნიერის სახელს, მეორე კი<br />
მისი ნამუშევრის აღწერილობას. ჩვენ ასევე დავამატეთ უკანა ღილაკი, რომელიც<br />
დაგვაბრუნებს Screen1-ში . არ დაგავიწყდეთ, რომ თქვენ ასევე დაგჭირდებათ Don’t TinyDB<br />
-ის დამატება ეკრანზე!</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image56-1024x509.png" alt="image56" width="1024" height="509" /></p>
<p>რადგანაც საწყისი მნიშვნელობა მეცნიერის სახელია, ჩვენ გამოვსახეთ იგი Label1-ით. მისი<br />
საშუალებით, დავაბრუნეთ მეცნიერის ნამუშევრის აღწერილობა მონცემთა ბაზიდან და<br />
გამოვსახეთ იგი Label2-ით . საკონტროლო კატეგორიაში შეგიძლიათ მიიღოთ საწყისი<br />
მნიშვნელობის ბლოკი.</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image06.png" alt="image06" width="636" height="175" /></p>
<p>ნუ დაივიწყებთ უკანა ღილაკის დაპროგრამებას, რათა სწრაფად დაბრუნდეთ პირველ ეკრანზე!</p>
<p><img src="http://www.technovationchallenge.org/wp-content/uploads/2016/11/image11-1024x198.png" alt="image11" width="471" height="91" /></p>
<p>როდესაც მომხმარებელი უკან გადის, Screen1 ისევ დაიწყება, შემდეგ კი ყველაფერი<br />
ხელახლა თავიდან დაიწყება.</p>
<h3>საბოლოო შემოწმება</h3>
<p>დარწმუნდით, რომ ყველაფერი კარგად მუშაობს თქვენს აპლიკაციაში! ელემენტის არჩევა<br />
ListView-ში გადაგიყვანთ თუ არა Screen2-ში? ან აჩვენებს თუ არა იგი tag სახელს და<br />
მონაცემთა ბაზის მნიშვნელობას?</p>
<p>ისევ დაბნეული ხართ? მაშინ ჩამოტვირთეთ ჩვენი რესურსები აქედან. აქვე მოცემულია<br />
ინსტრუქციები თუ როგორ ჩამოტვირთოთ და გამოიყენოთ რესურს კოდები.</p>
<p><a role="button" href="https://drive.google.com/file/d/0B9HV58UviqU_YXU1eTBKMDN1ZVE/view" target="_blank" rel="noopener"><br />
Download the source code<br />
</a></p>
