<h1>Code Challenge 1 კოდირების  გამოწვევა</h1>
<h1>Make a Slideshow სლაიდ-შოის შექმნა</h1>
<ul>
 	<li><a href="#design">Designing Your Screen</a>-ეკრანის დიზაინი</li>
 	<li><a href="#blocks">Programming the Blocks</a>-ბლოკების პროგრამირება</li>
 	<li><a href="#check">Check Point!</a>-საკონტროლო ქულები</li>
 	<li><a href="#finish">Finishing Your App</a>-აპლიკაციის დასრულება</li>
 	<li><a href="#final">Final Check Point!</a> -საბოლოო ქულები</li>
</ul>
<h3 id="design">Designing your screen-ეკრანის დიზაინი</h3>
ამ აპლიკაციისთვის ქმნით სლაიდ შოუს, რომელიც მომხმარებელს საშუალებას აძლევს დაათვალიეროს  სხვადასხვა სურათები.როდესაც ეკრანის დიზაინს ახდენთ,დებთ სურათს და ამაგრებთ  ღილაკებს რათა მომხმარებელმა დააჭიროს  და გადავიდეს სხვა სურათზე.ეკრანის დიზაინის დროს პირველრიგში ამას აკეთებთ.
<ol>
 	<li>დაამაგრეთ სურათი ეკრანზე.
<ul>
 	<li>მოარგეთ ეკრანს (შეგიძლიათ შეცვალოთ სიგრძე და სიგანე)</li>
 	<li>ჩვენ სურათთვის  ვირჩევთ “fill parent”-ს. როდესაც ამას ირჩევთ ,ეს ნიშნავს, რომ თანახმა ხართ ის სივრცე რაშიც სურათი იმყოფება მთლიანად შეივსოს. სურათი ეკრანის შიგნითაა ,მაგრამ ღილაკები რომლებიც მასზე უნდა დაამაგროთ არიან ჰორიზონტალურ  მდგომარეობაში მყოფ კონტეინერში.მენიუში განლაგების მიხედვით შეგიძლიათ იხილოთ ,თუ რა სად არის.</li>
</ul>
</li>
 	<li>ეკრანზე ,სურათის ქვემოთ დაამატეთ ჰორიზონტალური სამაგრი.</li>
 	<li>გადააადგილეთ  ორი ღილაკი ჰორიზონტალურ მდგომარეობაში
<ul>
 	<li>კომპონენტთა მენიუში დააჭირეთ ღილაკებს.
<ul>
 	<li>ღილაკებს დააწერეთ ტექსტები ‘Previous’(წინა) and ‘Next’(შემდეგი).</li>
 	<li>ღილაკებისთვის სახელების შეცვლაც  შეგიძლიათ,რაც დაგეხმარებათ იმის გახსენებაში თუ რომელი ღილაკი რისთვისაა განუთვნილი(რისი გაკეთება ევალებათ).ამის გაკეთება “rename”-ზე  ხელის დაჭერით შეგიძლიათ ,რომელიც კომპონენტების ქვეშ არის მოთვსებული.</li>
</ul>
</li>
</ul>
</li>
 	<li>ატვირთეთ სურათი ,რომელიც სლაი-შოუში გინდათ რომ გამოიყენოთ.</li>
 	<li>აირჩიეთ სურათი რომელიც სლაი-შოუში პირველი გამოჩნდება.
<ul>
 	<li>დააწირეთ “Image1”-ს   “Components” menu -ში   და  შემდეგ “Picture” -ს   properties menu-ში.</li>
</ul>
</li>
 	<li>სლაიდ -შოუში დაამატეთ არანაკლებ ორი გვერდი(ეკრანი).ჩვენს სლაიდ-შოუში გამოვიყენეთ სამი გვერდი(ეკრანი) ,მაგრამ იმდენი გვედრის დამატება შეგიძლიათ რამდენიც თქვენ გსურთ.
<ul>
 	<li>ამ ეტაპზე ამ დამატებულ გვერდებთან დკავშირებით არაფრის გაკეთება არ არის საჭირო,მაგრამ როგორც კი ბლოკების კოდირებას მოახდენთ,მათ ღილაკებსა და სურათებს დაუმატებთ,როგორც ეს  ამ გვერდისთვის(ეკრანისთვის) გააკეთეთ.</li>
</ul>
</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/designer.png" alt="designer" width="1440" height="772" />
<h3 id="blocks">Programming the blocks- ბლოკების პროგრამირება</h3>
განმარტება:ახლა უკვე როცა ეკრანი მომართეთ ,საჭიროა მას რამე გააკეთებინოთ.როდესაც მომხმარებელი აჭერს ღილაკს,გსურთ რომ თქვენმა აპლიკაციამ შეასრულოს საქმე ,ამ შემთხვევაში გახსნას შემდეგი გვერდი (ეკრანი) ზედ განთავსებული  სურათით.ამისათვის კი უნდა გამოიყენოთ, ღილაკების ღონისძიებების დამმუშავებელი(button event handlers).
<ol start="7">
 	<li>დააჭირეთ ღილაკს რომელსაც  ‘Previous’ -ი დაარქვით  და იხილავთ ყველა ბლოკს რომლების გამოყენებაც შეგიძლიათ.კურსორით ხელი ჩასჭიდეთ <strong>when button.click</strong> -ის ბლოკს და გადაიტანეთ   თქვენს სამუშაო სივრცეში.</li>
 	<li>დააჭირეთ   ‘control’-ს და მოძებნეთ  <strong>open another screen screenName</strong> block-ი.</li>
 	<li>აიღეთ  ცარიელი   ტექსტის ასაკრეფი ველი,დააჭირეთ და შეყვანეთ ის  <strong>open another screen screenName</strong> block-ში. ჩაწერეთ  თქვენი სლაიდ შოუს ბოლო გვერდის(ეკრანის) სახელი. ჩვენს შემთხვევაში  ეს იყო მესამე გვერდი (ეკრანი).</li>
 	<li>დააჭირეთ "Next" ღილაკს და ხელი  კვლავ  ჩასჭიდეთ <strong>when button.click</strong> block -ს .</li>
 	<li> control-დან აიღეთ  <strong>open another screen screenName</strong> block-ი  .</li>
 	<li>აიღეთ ტექსტის ასაკრეფი ცარიელი ბლოკი და ჩაბეჭდეთ მომდევნი გვერდში, რომელიც სლაიდ შოუში გამოჩნდება.ჩვენს შემთხვევაში ეს იყო Screen2.</li>
</ol>
<img src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/blocks.png" alt="blocks" width="1440" height="766" />
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="check">Check Point!   გადამოწმება!</h3>
სანამ გააგრძელებდეთ დარწმუნდით ,რომ თქვენს მიერ შექმნილი კოდი მუშაობს.კოდის შემოწმება აპლიკაციისთვის საბოლოო სახის მიცემამდე ძალიან კარგი იქნება.წიააღმდეგ შემთხვევაში შესაძლოა აღმოაჩინოთ რომ,უკვე მრავალ ფუნქცია მინიჭებული აპლიკაცია   არ უშობს და  ამ შემთხვევაში,უკვე   ძალიან რთული იქნება მიზეზების პოვნა.

დააწყვილეთ  App Inventor-ი ტელეფონთან,ტაბლეტთან და ემულატორთან.  თქვენი ღილაკები  ისე მუშაობენ როგორც ეს თქვენ გინდოდათ და მოელოდით? ჩვენი ღილაკები მუშაობენ: ღილაკმა “Previous” გადაგვიყვანა Screen3-ზე,და ღილაკმა  “Next” გადაგვიყვანა Screen2-ზე.თუკი თქვენი ღილაკები ისე არ მუშაობენ როგორც თქვენ გინდოდათ და იმას არ აკეთებენ რაც თქვენ გინდოდათ,გირჩევთ უკან დაბრუნდეთ და დარწმუნდეთ კოდი მუშაობს თუ არა.

<em>მინიშნება: იმის გამო რომ Screen2 -ზე და Screen3 -ზე ჯერჯერობით არაფერი არ არის,ჩვენს კომპიუტერში App Inventorმეშვეობით დავბრუნდით  screen -1ზე. App Inventor- ი საშუალებას გაძლევთ კომპიუტერის მეშვეობით ნავიგაცია მოახდინოთ სხვადასხვა გვერდებზე(ეკრანებძე) რომლებიც დაკავშირებულნი არიან   ტელეფონებთან ან ემულატორებთან.ეს ხრიკი მოგვიანებით გამოგადგებათ.</em>

</div>
<h3 id="finish"> Finishing your app-აპლიკაციის დასრულება</h3>
განმარტება: ახლა როცა უკვე წარმატებით შექმენით და დააპროგრამეთ  გვერდი(ეკრანი) , უკვე შეგიძლიათ შემდეგი გვერდების კოდინგზე გადახვიდეთ. სალაიდ-შოუს შეგიძლიათ იმდენი გვერდი(ეკრანი)დამატოთ რამდენიც თქვენ გსურთ,მაგარამ დაიმახსოვრეთ რომ სალაიდ-შოუში უნდა იყოს სულ  ცოტა სამი გვერდი(ეკრანი).ქვემოთ მოცემული დიაგრამა გვიჩვენებს  გვერდებს(ეკრანებს) და  ღილაკებს რომლებიც მათ აკონტროლებენ
<ol start="13">
 	<li>გაიმეორეთ  1-12  ნაბიჯები  თქვენი სლაიდე -შოუს თითოეული   გვერდის ( ეკრანის) შესაქმნელად. დარწმუნდით რომ ღილაკ ‘Next’-ყოველთვის შემდეგ გვერდზე გადაჰყევხართ და ღილაკი    ‘Previous’  -ი ყოველთვის  წინა გვერდზე გაბრუნებთ.</li>
</ol>
<table>
<tbody>
<tr>
<td> <img class="" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/3Screen-Diagram.png" alt="3screen-diagram" width="403" height="299" /></td>
<td><img class="" src="http://www.technovationchallenge.org/wp-content/uploads/2016/09/4Screen-Diagram.png" alt="4screen-diagram" width="444" height="349" /></td>
</tr>
</tbody>
</table>
&nbsp;
<div style="background-color: #28a880; color: white; padding: 25px; margin-top: 25px; margin-bottom: 25px;">
<h3 id="final">Final Check Point! საბოლოო შემოწმება!</h3>
დარწმუნდით ,რომ აპლიკაცია მუშაობს! გამისცადეთ ყველა "Next" და  "Previous" ღილაკი.ხომ გადაჰყევხარ თითოეულ მათგანს ახალ გვერდზე(ეკრანზე)?თუ არა,კვლავ გადაამოწმე შენს მიერ შესრულებული სამუშაო და დარწმუნდი ,რომ გვერდების სახელები სწორად გაქვს ჩაბეჭდილი.

გილოცავთ!თქვენ  ეს-ესაა დაასრულეთ კოდინგის პირველი გამოწვევა,რაც იმის საბაბს გაძლევთ, რომ თავი სრულყოფილად იგრძნოთ.ირგვლივ არც ისე ბევრი ადამიანია ,ვისაც აპლიკაციის კოდინგი გაუკეთებია.

ისევ შეფერხდით? მაშ გადმოტვირთეთ ჩვენი საწყისი კოდი!  იხილეთ ინფორმაცია იმისა,თუი როგორ ჩამოტვითოთ და ისარგებლოთ საწყისი კოდებით,აქ: <a style="color: #eae46f;" href="http://appinventor.mit.edu/explore/ai2/share.html" target="_blank">source code instructions</a>
<h3><a style="color: #eae46f;" href="https://drive.google.com/file/d/0B9HV58UviqU_UUotS1BieWxGTWM/view?usp=sharing" target="_blank">
Download the source code
</a></h3>
</div>
