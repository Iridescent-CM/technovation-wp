Code 2 - კოდი 2 Data and Variables - მონაცემები და ცვლადები

<h1><b>Code 2 - კოდი 2</b></h1>
<h1><b>Data and Variables - მონაცემები და ცვლადები</b></h1>
<h2><b>სასწავლო ამოცანები:</b></h2>
<p><span style="font-weight: 400;">ამ თავში, თქვენ ...</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">შეისწავლით მონაცემების და მონაცემების სხვადსხვა ტიპების შესახებ</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">შეისწავლით ცვლადების და მონაცემთა ბაზების გამოყენებას</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">შეისწავლით მონცემების ორგანიზებას სიებში</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">შექმნით აპლიკაციის to-do list/დავალებების სიებს, რომელიც უკავშირდება მონაცემთა ბაზას</span></li>
</ul>
<p><span style="font-weight: 400;">ეს ნაწილი შეიცავს უამრავ ინფორმაციას და ბუნებრივია, თუ ყველაფერი ეს ცოტა ბუნდოვანია თქვენთვის ამ ეტაპზე. კოდირების კონცეფციების გასაგებად საუკეთესო გზაა კოდის ჩელენჯის/გამოწვევის სამუშაოების შესრულება. თქვენი საბოლოო აპლიკაციის შემუშავებისას, თუ რაიმე სირთულეს წააწყით, გასამეორებლად ყოველთვის შეგიძლიათ დაუბრუნდეთ ამ თავს.</span></p>
<h3><b>    მონაცემები</b></h3>
<p><span style="font-weight: 400;">თქვენი ცხოვრების რაღაც მომენტში, ალბათ გსმენიათ სიტყვა </span><b>მონაცემები</b><span style="font-weight: 400;">. მონაცემები შეიძლება ბევრ რამეს გულისხმობდეს, მაგრამ კომპიუტერულ მეცნიერებაში მონაცემები არის ინფორმაცია, რომლის გარეშეც თქვენი აპლიკაცია მუშაობას ვერ შესძლებს. ამის უკეთ გასაგებად, მოდით ვიფიქროთ ზოგიერთ აპლიკაციაზე და ზოგიერთ ინფორმაციაზე, რომელიც მათ სჭირდებათ მუშაობის შესასრულებლად.</span></p>
<p>&nbsp;</p>
<p><b>WhatsApp</b></p>
<p><span style="font-weight: 400;">ამ სოციალურ აპლიკაციას შეუძლია მოკლე ტექსტური შეტყობინებების/მესიჯების გაგზავნა და ზარის გაშვების განხორციელება საკონტაქტო პირებთან. მონაცემები, რომელიც ამ აპლიკციას სჭირდება არის:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი username-ი</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი მეგობრების username-ები</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">მესიჯი, რომლის გაგზავნაც გსურთ</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">დრო</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი ადგილმდებარეობა</span></li>
</ul>
<p><b>Angry Birds</b></p>
<p><span style="font-weight: 400;">აპლიკაციის ამ თამაშში თქვენ ჩიტებს ესვრით ღორებს დასამარცხებლად. მონაცემები, რომელიც ამ აპლიკაციას სჭირდება შემდეგია:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">თვენი ქულა</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">რამდენი ქულა ღირს თითოეული საგანი</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">რა დონეები დაასრულეთ</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">რამდენ ჩიტს/ქულას მიიღებთ თითოეულ დონეზე</span></li>
</ul>
<p>&nbsp;</p>
<p><b>Slideshow Challenge App</b></p>
<p><span style="font-weight: 400;">ეს ის აპლიკაციაა, რომელიც Code 1 Challenge-ში შექმენით. მონაცემები, რომელიც ამ აპლიკაიას სჭირდება შემდეგია:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი საყვარელი სურათები</span></li>
</ul>
<p><span style="font-weight: 400;">პროგრამისტმა ისე უნდა დააწყოს პროგრამულად, რომ აპებს შეეძლოთ ყველა საჭირო ინფორმაციის მიღება. გახსოვდეთ, კომპიუტერებს არაფერის გაკეთება არ შეუძლიათ ინსტრუქციების გარეშე. აქ არის რამდენიმე გზა, რომელის მეშვეობითაც აპლიკციებს App Inventor-ში შეუძლიათ მონაცემების მიღება და გამოყენება:</span></p>
<p>&nbsp;</p>
<ol>
<li style="font-weight: 400;"><b>პროგრამისტი</b><span style="font-weight: 400;"> დებს ინფორმციას:</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენს სლაიდშოუ აპლიკაციაში/slideshow app, თქვენ (პროგრამისტმა) შეიყვანეთ თქვენი საყვარელი სურათები.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Angry Birds-ში, პროგრამისტმა შეიყვანა ინფორმაცია იმის შესახებ თუ რამდენ ჩიტს იღებს მოთამაშე თითოეულ დონეზე.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><b>მომხარებელს</b><span style="font-weight: 400;"> შეყავს ინფორმაცია:</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">WhatsApp-ში, მომხმარებელმა უნდა გადასცეს აპლიკაციას ინფორმაცია იმის შესახებ, თუ რისი გაგზავნა სურს და ვისთან.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><b>აპლიკაცია</b><span style="font-weight: 400;"> უკავშირდება სხვა ადგილს ინფორმაციის მისაღებად:</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">WhatsApp- ი უკავშირდება თქვენს ტელეფონს, რათა მიაწოდოს ინფორმაცია, თქვენი მესიჯის გაგზავნის დროის შესახებ.</span></li>
</ul>
</li>
</ol>
<p><span style="font-weight: 400;">ზოგჯერ აპლიკაცია ინახავს მომხმარებლის მიერ შეყვანილ ინფორმაციას. მაგალითად, WhatsApp ინახავს მესიჯების ისტორიას, რომელიც საშუალებას გაძლევთ იხილოთ ბოლოს გაგზავნილი მესიჯი მეგობართან. ამისათვის პროგრამისტი იყენებს </span><b>მონაცემთა ბაზას, </b><span style="font-weight: 400;">რომელსაც გაეცნობით ამ გაკვეთილში. თქვენ გაიგებთ უფრო მეტს თუ როგორ დაუკავშირდეთ სხვა ადგილებს ინფორმაციის მისაღებად. </span></p>
<h3><b>Thought Exercise</b></h3>
<p><span style="font-weight: 400;">If you were using an app that helps you find the nearest grocery store, what data </span><b>მონაცემების ტიპები</b></p>
<p><span style="font-weight: 400;">როგორც ზედა სექციაში ნახეთ, მონაცემები შეიძლება ბევრნაირი იყოს! იმისათვის, რომ გაუადვილოთ კომპიუტერებს იმის გაგება, თუ რა უნდა გააკეთონ მოცემული მონაცემებიდან, საჭიროა ამ მოცემების კატეგორიებად დაყოფა. ამას უწოდებენ </span><b>მონაცემთა ტიპებს</b><span style="font-weight: 400;">. პროგრამირების ენები სამ ძირითად მონაცემთა ტიპების გარშემო ბრუნავენ. ესენია: რიცხვითი, ტექსტური და ლოგიკური მონაცემები. App Inventor ასევე საშუალებას გაძლევთ გამოიყენოთ უფრო რთული მონაცემთა ტიპები როგორიცაა ფერები და სურათები. თქვენ არ მოგიწევთ რაიმე გააკეთოთ მონაცემთა ტიპებით, რომლებსაც გაეცნობით ამ სექციაში, მაგრამ კარგი იქნება მათი მხვედელობაში ქონა, რათა უკეთესად შეძლოთ კოდირება.</span></p>
<p><b>Numbers-რიცხვები</b></p>
<p><span style="font-weight: 400;">რიცხვითი მონაცემების ტიპი სწორედ ისაა, რაც გგონიათ! App Inventor-ში, შეგიძლიათ გამოიყენოთ რიცხვები Math/მათემატიკაზე შესვლაში დაწკაპებით, რომლებიც ბლოკებშია მოცემული.</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">თქვენ გამოიყენებთ მათემატიკურ ბლოკებს, ნებისმიერ დროს როდესაც რიხვების გამოყენება დაგჭირდებათ. აქ მოცემულია რამდენიმე მაგალითი, როდესაც შეგიძლიათ გამოიყენოთ რიცხვითი მონაცემთა ტიპი თქვენს აპლიკაციაში. </span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">მოთამაშის ქულების დათვლა თამაშის დროს</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">დათვლა თუ რამდენჯერ სცადა მომხმარებელმა სისტემაში შესვლა</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">დათლა რამდენჯერ გსურთ, რომ თქვენმა აპლიკაციამ რაიმე ოპერაცია გააკეთოს </span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">გარკვევა იმისა, თუ რა ასაკშია თქვენი მომხმარებელი </span></li>
</ul>
<p><span style="font-weight: 400;">იმისათვის, რომ მეტი შეისწავლოთ თუ რისი გაკეთება შეგიძლიათ მათემატიკური ბლოკებით ნახეთ ამ ვებგვერდზე:  MIT’s website: </span><a href="http://appinventor.mit.edu/explore/ai2/support/blocks/math.html"><span style="font-weight: 400;">Math blocks</span></a></p>
<h5><b>Strings - ასოების/ტექსტური</b></h5>
<p><span style="font-weight: 400;">ასოების მონაცემთა ტიპი იგივეა, რაც  ტექსტი. App Inventor-ში, თქვენ შეგიძლიათ შექმნათ ტექსტი Text in </span><i><span style="font-weight: 400;">Blocks-</span></i><span style="font-weight: 400;">ში შესვლით. აქ მოცემულია რამოდენიმე Text in </span><i><span style="font-weight: 400;">Blocks, </span></i><span style="font-weight: 400;">რომელიც შეგიძლიათ გამოიყენოთ.</span></p>
<p><span style="font-weight: 400;">თქვენ უნდა გამოიყენოთ ტექსტური მონაცემები ნებისმიერ დროს, როდესაც გსურთ ტექსტის დამატება თქვენს კოდზე. აქ მოცემულია რამდენიმე მაგალითი, როდესაც შეგიძლიათ გამოიყენოთ ტექსტური მონაცემთა ტიპი თქვენს აპლიკაციაში. </span></p>
<p>&nbsp;</p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">მომხმარებელს საშუალებას აძლევს შეიყვანოს პაროლი ან მომხმარებლის სახელი/username</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">როდესაც აპლიკაცია სიტყვებს ეუბნება მომხმარებელს</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">როდესაც მომხმარებელს უჩვენებს შეტყობინებას ან საგანგაშო გაფრთხილებას</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">აპლიკაციის დაპროგრამება ახალი ეკრანის გასახსნელად სახელის დარქმევით</span></li>
</ul>
<p><span style="font-weight: 400;">ვიდრე სხვა ნაწილზე გადავიდოდეთ, MIT- ის ვებსაიტზე ნახეთ ყველაფერი ის, რისი გაკეთებაც შეგიძლიათ ტექსტებით:</span><a href="http://appinventor.mit.edu/explore/ai2/support/blocks/text.html#string"><span style="font-weight: 400;">Text blocks</span></a></p>
<p>&nbsp;</p>
<h5><b>Booleans - ლოგიკური მონაცემები</b></h5>
<p><span style="font-weight: 400;">ლოგიკური მონაცემები გულისხმობს ორიდან ერთი მნიშვნელობის არჩევას: ჭეშმარიტი ან ყალბი. True/ჭეშმარიტი ძირითადად ნიშნავს "დიახ" და false/ყალბი ძირითადად ნიშნავს "არა". boolean/ლოგიკის მისაღებად, შედით ლოგიკის ფუნქციებში და მოეჭიდეთ ერთს ამ უჯრებიდან:</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">ამ ეტაპზე ბევრი რამის გაკეთებას ვერ შევძლებთ booleans/ლოგიკური მონაცემებით, თუმცა აუცილებელია ვიცოდეთ მათ შესახებ. Booleans და სხვა ლოგიკურ მონაცემებს უფრო დაწვრილებით </span><a href="http://www.technovationchallenge.org/curriculum/code-3/"><span style="font-weight: 400;">Code 3: Logic, Loops and Conditionals</span></a><span style="font-weight: 400;"> თავებში შეისწავლით.</span></p>
<h3><b>Variables- ცვლადები</b></h3>
<p><span style="font-weight: 400;">კოდირების ერთ-ერთი ყველაზე მნიშვნელოვანი ცნებაა </span><b>ცვლადი</b><span style="font-weight: 400;">. ცვლადი ჰქვია მონაცემების მცირე ნაწილს, რომელსაც შეუძლია მნიშვნელობის შეცვლა. მარტივად, რომ დავიმახსოვროთ ჩავუფიქრდეთ ამ სიტყვას: ,,ცვლადი’’ ანუ ის,  რაც იცვლება. არსებობს უამრავი ინფორმაცია, რომელიც მნიშვნელოვანია თქვენთვის ყოველდღიურად და ხშირად იცვლება ის. ანუ დროთა განამავლობაში ღირებულებები იცვლება. აი ზოგიერთი მაგალითი: </span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი ასაკი</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი სიმაღლე</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">თქვენი ადგილმდებარეობა</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">დღევანდელი თარიღი</span></li>
</ul>
<p><span style="font-weight: 400;">უკეთესად რომ გავიგოთ ცვლადები და როგორ გამოვიყენოთ ისინი App Inventor-ში, მოდით განვიხილოთ მაგალითი. წარმოიდგინეთ, თქვენ ქმნით თამაშს, სადაც მომხმარებელს შეუძლია მიიღოს და დაკარგოს ქულები. თქვენ გსურთ, რომ მოთამაშემ ქულები text box-ში ნახოს. თამაშის დაწყებისას, მოთამაშეს ნული ქულა აქვს. ასე, რომ თქვენ თამაშს დაამატეთ მსგავსი უჯრა ქულებისთვის.</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">მოთამაშე ხედავს ნულს იმ text box-ში, რომელიც აჩვენებს მის ქულას. თუმცა, მოთამაშის ქულა შეიცვლება თამაშის მსვლელობისას. ყოველ ჯერზე როცა იგი იღებს ან კარგავს ქულას, თქვენ უნდა განაახლოთ ინფორმაცია text box-ში. როდესაც ის მიიღებს მეტ ქულას, თქვენ ასე ამატებთ ბლოკებს:</span></p>
<p><span style="font-weight: 400;">ეს გავარკვიეთ, მაგრამ რა მოხდება, როდესაც მოთამაშე მიიღებს მომდევნო 10 ქულას? თქვენ კვლავ უნდა განაახლოთ ტექსტი, რომელიც ამბობს - 20. შემდეგ რა მოხდება, თუ მოთამაშე კარგავს ქულას? თქვენ უნდა შეცვალოთ მისი ქულა 15-ით. თუ ის კვლავ მოიპოვებს ქულას? ეს შეიძლება დამაბნეველი იყოს, როდესაც ასე სწრაფად იცვლება ინფორმაცია.</span></p>
<p><span style="font-weight: 400;">ამ სცენარებში, თქვენ შეგიძლიათ შექმნათ</span><b> ცვლადი</b><span style="font-weight: 400;">, რომელიც შეინახავს მოთამაშის ქულებს. თქვენ შეგიძლიათ შექმნათ ცვლადი სახელწოდებით </span><i><span style="font-weight: 400;">ანგარიში</span></i><span style="font-weight: 400;">, რომლის მუდმივი დანიშნულებაა მოთამაშის მიმდინარე ქულა. თამაშის მსვლელობისას თქვენ შეგიძლიათ მიუმატოთ და გამოაკლოთ ქულები ანგარიშიდან და თქვენ აღარ გიწევთ ფიქრი იმაზე თუ რა არის მისი მიმდინარე ანგარიში რეალურად. აი, როგორ იმუშავებდა ეს App Inventor-ში. პირველ რიგში, თქვენ უნდა მოეჭიდოთ ამ ბლოკს და გადააადგოლოთ ცვლადების განყოფილებიდან.</span></p>
<p><span style="font-weight: 400;">ეს ბლოკი ეუბნება აპს, რომ იქნება ცვლადი და გთხოვთ, რომ დაარქვათ ამ ცვლადს სახელი და მიანიჭოთ მნიშვნელობა. აქ მოცემულია ის ბლოკი, რომელიც გამოდგება თამაშში, სადაც მოთამაშის ქულა ნულოვანი იყო.</span></p>
<p><span style="font-weight: 400;">ამ ბლოკის მეშვეობით, თქვენ ეუბნებით აპლიკაციას, რომ იქნება მონაცემების მცირე ნაწილი, სახელწოდებით </span><i><span style="font-weight: 400;">ანგარიში</span></i><span style="font-weight: 400;"> და ის შეცვლის დანიშნულებებს თამაშის მსვლეობისას. ყოველ ჯერზე app-ის დაწყებისას, იქმნება ცვლადი სახელწოდებით </span><i><span style="font-weight: 400;">ანგარიში </span></i><span style="font-weight: 400;">რომლის მაჩვენებელიც ნულია. ახლა თქვენ შეგიძლიათ შეხვიდეთ “set” და “get” ბლოკებში, რათა ანგარიში </span><i><span style="font-weight: 400;">ცვლადი</span></i><span style="font-weight: 400;"> გახდეს.  “get” საშუალებას მოგცემთ დაინახოთ, თუ რა დანიშნულება აქვს ქულას. აქ მოცემულია თუ როგორ გადასცემთ თქვენს აპლიკაციას ანგარიშის ჩვენების ბრძანებას textbox-ში.</span></p>
<p><span style="font-weight: 400;">"Set" საშუალებას გაძლევთ მიანიჭოთ ახალი დანიშნულება თქვენი მომხმარებლის ანგარიშს. ყოველ ჯერზე, როდესაც მოთამაშე მიიღებს ქულას, შეგიძლიათ გადასცეთ ინფორმაცია აპლიკაციას ამ ცვლილების გასაკეთებლად. </span></p>
<p><span style="font-weight: 400;">ეს ეუბნება თქვენს აპლიკაციას, რომ შეცვალოს მიმდინარე ანგარიში, 10 ქულის დამატებით. თუ მიმდინარე ანგარიში ნულია, ახალი ანგარიში იქნება 10. თუ მიმდინარე ანგარიშია 25, ახალი - იქნება 35. ახლა თქვენ არ უნდა იფიქროთ, ანგარიშის რეაგირების შესახებ ყოველ ჯერზე თქვენი მოთამაშე მიიიღებს თუ  დაკარგავს ქულას. აპლიკაცია მხოლოდ მიმდინარე ქულას მიიღებს და მასზე 10 ქულას დაამატებს.</span></p>
<p><span style="font-weight: 400;">თუ ჯერ კიდევ დამაბნეველია თქვენთვის ცვლადები, ეს ბუნებრივია! ისინი ძალიან რთული გასაგებია და საუკეთესო საშუალება მათ გასაგებად მათი პრაკტიკაში გამოყენებაა. თქვენ გამოიყენებთ მათ კოდირების challenge/გამოწვევაში ამ ნაწილის დასასრულს და კიდევ რამდენიმე მომდევნო კოდირების ნაწილში.</span></p>
<h3><b>Thought Exercise</b></h3>
<p><b>Local and Global Variables - </b><b>ლოკალური და გლობალური ცვლადები</b></p>
<p><span style="font-weight: 400;">თქვენ შეიძლება შენიშნეთ ზემოთ მოყვანილ სექციაში, რომ ცვლად ბლოკს ეწერა "გლობალური". არსებობს ორი ტიპის ცვლადები, </span><b>ლოკალური/ადგილობრივი ცვლადები </b><span style="font-weight: 400;">და </span><b>გლობალური ცვლადები</b><span style="font-weight: 400;">. როდესაც თქვენ შექმნით ცვლადებს, თქვენ უნდა იფიქროთ იმაზე, თუ გსურთ გამოიყენოთ ცვლადი თქვენს კოდში მრავალ ადგილას, როგორიცაა ზემოთ მოყვანილი ცვლადი, ან თუ გსურთ მისი გამოყენება მხოლოდ ერთ ადგილას.</span></p>
<p><b>გლობალური ცვლადები</b><span style="font-weight: 400;"> შეიძლება გამოყენებულ იქნას ყველგან. როგორც ზემოთ ნახეთ, ცვლადი</span><i><span style="font-weight: 400;"> ანგარიში </span></i><span style="font-weight: 400;">შეიძლება რამდენჯერმე იქნას გამოყენებული. თქვენ უნდა გამოგეყენებინათ გლობალური ცვლადი, როდესაც მოთამაშემ მიიიღო ან დაკარგა ქულა და როდესაც ეს ეკრანზე ტექსტბოქსში აჩვენა. ეს შეიძლება გამოყენებულ იქნას ასევე მაღალქულიან ცხრილებში. გლობალური ცვლადის გამოყენებისას თქვენ არასდროს შეგიძლიათ გამოიყენოთ სახელი განმეორებით. წინააღმდეგ შემთხვევაში თქვენი აპლიკაცია ვერ ამოიცნობს რომელი ცვლადი გამოიყენოს. საბედნიეროდ App Inventor არ მოგცემთ საშუალებას, რომ შექმნათ ორი ცვლადი ერთი და იგივე სახელით. თუ არ ხართ დარწმუნებული, რომელი ტიპის ცვლადი გამოიყენოთ, მაშინ გამოიყენეთ გლობალური!</span></p>
<p>&nbsp;</p>
<p><b>ლოკალური ცვლადები</b><span style="font-weight: 400;"> შეიძლება გამოყენებულ იქნას თქვენს კოდში ერთ ადგილზე. თუ თქვენ გჭირდებათ ცვლადი, რომელიც რაღაც ინფორმაციას  მხოლოდ ერთ ადგილზე შეინახავს გამოიყენეთ ლოკალური/ადგილობრივი ცვლადი. ლოკალური ცვლადი მხოლოდ "ლოკალური ცვლადი" ბლოკის შიგნით შეძლება იყოს გამოყენებული და App Inventor არ მოგცემთ მის გარეთ გამოყყენების საშუალებას.  გლობალური ცვლადებისგან განსხვავებით, ლოკალურ ცვლადებზე შეგიძლიათ განმეორებით გამოიყენოთ სახელები.</span></p>
<p><span style="font-weight: 400;">კოდირების გამოწვევაში თქვენ იხილავთ მაგალითებს, როდის უნდა გამოიყენოთ გლობალური და როდის ლოკალური ცვლადები. გლობალური და ადგილობრივი ცვლადების შესახებ უფრო მეტი ინფორმაციის მისაღებად ეწვიეთ MIT- ის ვებ-გვერდს: </span><a href="http://appinventor.mit.edu/explore/ai2/support/concepts/variables.html"><span style="font-weight: 400;">Global and Local Variables</span></a><span style="font-weight: 400;">.</span></p>
<h3><b>Lists - სიები</b></h3>
<p><span style="font-weight: 400;">მსოფლიოში უამრავი ინფორმაცია არსებობს, რაც ხშირად დაბნეულობას იწვევს ადამიანებში! საბედნიეროდ ჩვენ ორგანიზებულად გვაქვს დაწყობილი მონაცემები, რაც გვიადვილებს რაიმე ინფომრაციის პოვნას და გამოყენებას. შეგიძლიათ დაფიქრდეთ და გაიხსენოთ რაიმე მაგალითები, თუ როგორ ორგანიზებას უწევთ ინფორმაციას ან საგნებს თქვენს ცხოვრებაში? აქ მოცემულია რამოდენიმე მაგალითი თუ როგორ შეიძლება გაკეთდეს სხვდასხვა საგნების ორგანიზება:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">მეგობრის ტელეფონის ნომრების შეტანა საკონტაქტო სიაში</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ფანქრების პენალში მოთავსება</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ტანსაცმელის კარადაში შელაგება</span></li>
</ul>
<p><span style="font-weight: 400;">პროგრამისტები იყენებენ სიებს თავიანთ პროგრამებში მონაცემების ორგანიზების მიზნით. სიები შეიძლება ფლობდნენ მონაცემების მრავალრიცხოვან ნაწყვეტს და მათგან მონაცემების მიღება საკმაოდ ადვილია. თქვენ ალბათ გაგიკეთებიათ ,,დავალებათა სია’’, ,,საყიდლების სია’’ და ა.შ. პროგრამირების სიებიც ამ სიების მსგავსია. In App Inventor-ში, შეგიძლიათ შეხვიდეთ ბლოკებში და აირჩიოთ “lists”/"სიები". სიები ასე გამოიყურება:</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">სიები ძალიან სასარგებლოა უამრავი ინფორმაციის სამართავად. თითოეულ პუნქტს სიაში თავისი</span><i><span style="font-weight: 400;"> ინდექსი</span></i><span style="font-weight: 400;">, ანუ ნომერი აქვს, რომელიც გიჩვენებთ ადგილს სიაში. სიაში პირველ პუნქტს ექნება ინდექსი 1, მეორე პუნქტს ექნება 2 და ასე შემდეგ. აი მაგალითი: </span></p>
<p><span style="font-weight: 400;">აქ ნაჩვენებია თუ როგორ ხედავს თქვენი აპლიკაცია ინფორმაციას: </span></p>
<p><b>სიის სახელი: ხილი </b></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">ვაშლი (ინდექსი = 1)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ბანანი (ინდექსი = 2)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ფორთოხალი (ინდექსი = 3)</span></li>
</ul>
<p><span style="font-weight: 400;">თქვენ შეგიძლიათ მიიღოთ მხოლოდ ერთი ნივთი სიიდან, მთელი სიის გამოყენების ნაცვლად. თუ გინდათ, რომ ტექსტბოქსში შეიყვანოთ ტექსტი ბრძანებით "ბანანი" მთელი სიის ნაცვლად, თქვენ მოგიწევთ მიუთითოთ მხოლოდ ინდექსი 2 თქვენს აპლიკაციას. აქ ახსნილია, თუ როგორ გადავიდა ტექსტი "ბანანი" სიიდან ტექსტბოქსში, App Inventor-ის გამოყენებით:</span></p>
<p><span style="font-weight: 400;">თქვენ ასევე შეგიძლიათ დაამატოთ, წაშალოთ და შეცვალოთ ნივთები სიებში. ვთქვათ, დაგავიწყდათ "კივის" და "ყურძნის" დამატება თქვენს ხილის სიაში. თქვენ შეგიძლიათ დაამატოთ ისინი სიას ასე:</span></p>
<p><span style="font-weight: 400;">ახლა თქვენი აპლიცია ასე აღიქვამს თქვენს სიას: </span></p>
<p><b>სიის სახელი: ხილი</b></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">ვაშლი (ინდექსი = 1)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ბანანი (ინდექსი = 2)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ფორთოხალი (ინდექსი = 3)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">კივი (ინდექსი = 4)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ყურძენი (ინდექსი = 5)</span></li>
</ul>
<p><span style="font-weight: 400;">თუ გაქვთ მრავალრიცხოვანი ინფორმაცია და გსურთ, რომ ის ერთი და იგივე ცვლადი სახელით შეიტანოთ, ასეთ შემთხვევაში თქვენ სიები უნდა გამოიყენოთ. მაგალითად, თუ გინდათ, რომ ეკრანმა აჩვენოს თამაშის ათი უმაღლესი ქულა, შეგიძლიათ შექმნათ ათი ცვლადი სახელებით: HighScore1, HighScore2, HighScore3 და ა.შ. სანამ არ მიიღებთ HighScore10.</span></p>
<p><span style="font-weight: 400;">ამის გასაკეთებლად უფრო მარტივი გზაა, რომ შექმნათ სია სახელწოდებით HighScores/,,მაღალი ქულა’’, რომელიც შეიცავს ათ უმაღლეს ქულას და შემდეგ ეკრანზე აჩვენოთ ისინი ინდექსების გამოყენებით. სიის გამოყენება საშუალებას მოგცემთ ასევე შეცვალოთ და დაამატოთ კიდევ უფრო მაღალი ქულები უფრო ადვილად, რაც საკმაოდ დაზოგავს თქვენს დროს! </span></p>
<p><span style="font-weight: 400;">შეამოწმეთ MIT’s website მეტი ინფორმაციის გასაგებად სიების შესახებ  </span><a href="http://appinventor.mit.edu/explore/ai2/support/blocks/lists.html#string"><span style="font-weight: 400;">lists</span></a><span style="font-weight: 400;">.</span></p>
<p><i><span style="font-weight: 400;">შენიშვნა: ბევრ პროგრამულ ენაზე, სიებს ეწოდებათ arrays-ნუსხები. და ინდექსები იწყება 0-ზე და არა 1-ზე. შეამოწმეთ წესები ახალი პროგრამირების ენის შესწავლისას!</span></i></p>
<p><b>Databases - მონაცემთა ბაზები</b></p>
<p><span style="font-weight: 400;">ცვლადები კარგი საშუალებაა ინფორმაციის შესანახად, როდესაც თქვენი მომხმარებელი იყენებს თქვენს აპლიკაციას. მაგრამ რა ხდება მაშინ, თუ გსურთ შეინახოთ ინფორმაცია დროის შუალედებში, როდესაც თქვენი მომხმარებელი ხსნის და ხურავს თავის აპს? ამის გაკეთება შეგიძლიათ </span><b>მონაცემთა ბაზით</b><span style="font-weight: 400;">. მონაცემთა ბაზებს შეუძლია ინფორმაციის შენახვა მოგვიანებით გამოსაყენებლად მაშინაც კი, როდესაც აპლიკაცია დახურულია! წარმოსახვისთვის, შეგიძლიათ წარმოიდგინოთ მონაცემთა ბაზები, როგორც ინფორმაციის შენახვა, რომელიც მოგვიანებით შეგიძლიათ ხელახლა მიიღოთ. აქ არის მონაცემთა ბაზების რამოდენიმე მაგალითი, რომლებიც შეგიძლიათ გამოიყენოთ ყოველდღე:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">საკონტაქტო სია - თქვენ ინახავთ თქვენი მეგობრის ტელეფონის ნომრებს ისე, რომ მოგვიანებით ნებისმიერ დროს გამოიყენებთ</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">მესიჯების აპლიკაცია - Messaging app - მესიჯის აპლიკაციების უმეტესობა ავტომატურად ინახავს ძველ შეტყობინებებს, რომლებიც შეგიძლიათ ხელახლა წაიკითხოთ</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">ჩანაწერების რვეული - თქვენ აკეთებთ ჩანაწერებს და მოგვიანებით საშუალება გაქვთ წაიკითხოთ </span></li>
</ul>
<p><span style="font-weight: 400;">App Inventor-ში, კომპონენტი TinyDB საშუალებას გაძლევთ შეინახოთ მონაცემები თქვენი მომხმარებლის ტელეფონში, რომელიც მისთვის ხელმისაწვდომი იქნება ყოველ ჯერზე, როდესაც ის თქვენს აპლიკაციაში შევა. მნიშვნელოვანია იცოდეთ, რომ TinyDB მხოლოდ </span><i><span style="font-weight: 400;">ადგილობრივად</span></i><span style="font-weight: 400;"> ინახავს მონაცემებს. ეს ნიშნავს, რომ ორი მომხმარებელი ვერ გაიზიარებს მონაცემებს ერთი და იმავე TinyDB- ით. როდესაც მომხმარებელი ინახავს მონაცემებს TinyDB- ში, ის ხელმისაწვდომი იქნება მხოლოდ მის ტელეფონზე და სხვა არავისთვის. თქვენ შეისწავლით, როგორ გააზიაროთ ინფორმაცია ტელეფონებს შორის კოდირების მე-4 თავში: </span><a href="http://www.technovationchallenge.org/curriculum/code-4/"><span style="font-weight: 400;">Code 4: Using Mobile Features &amp; Connecting to the Web</span></a><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">TinyDB- ის გამოსაყენებლად, გაწიეთ და გადაიტანეთ იგი ეკრანზე App Inventor-ის  </span><i><span style="font-weight: 400;">designer</span></i><span style="font-weight: 400;">-ის მხარეს. თქვენ შეგიძლიათ იპოვოთ ის შენახვის მენიუში. ეს უხილავი კომპონენტია და ასე გამოიყურება:</span></p>
<p><span style="font-weight: 400;">თქვენ შეგიძლიათ ესაუბროთ თქვენს TinyDB-ს ბრძანების მიცემით. როდესაც ბრძანებას გასცემთ, შეგიძლიათ შეინახოთ და უკან მიიღოთ მონაცემები. ის თუ როგორ შევინახოთ მონცემები TinyDB- ში, საჭიროა მას იარლიყი/ tag მივანიჭოთ.  იარლიყი/ tag არის სახელი, რომელიც გამოიყენება მონაცემების მოძიებისას. ეს ძალიან წააგავს ცვლად სახელს. თუ იგივე ტეგს იყენებთ მონაცემების ორჯერ</span></p>
<p><span style="font-weight: 400;">შენახვისას, მოხდება მონაცემთა ბაზის გადაწერა ან წაშლა-ანუ ძველი მონაცემები ახალი მონაცემებით შეიცვლება. ეს ძალიან გამოგადგებათ თუ მონცემთა ბაზების განახლება გჭირდებათ. მაგრამ ფრთხილად უნდა იყოთ, რომ არასდროს გაიმეოროთ ტეგის სახელები! აქ არის რამოდენიმე მაგალითი იმისა, თუ როგორ უნდა გამოიძახოთ ინფორმაცია TinyDB- ზე:</span></p>
<p><span style="font-weight: 400;">პირველი ბლოკი გვიჩვენებს, თუ როგორ ინახება values/მნიშვნელობები TinyDB- ში. ამ შემთხვევაში ჩვენ ამოვიღეთ ჩვენი ,</span><i><span style="font-weight: 400;">,ხილის</span></i><span style="font-weight: 400;">’’ სია ადრეული  tag-იდან "საკვები". მეორე ბლოკი გვიჩვენებს, თუ როგორ უნდა მივიღოთ </span><i><span style="font-weight: 400;">ხილის </span></i><span style="font-weight: 400;">სია მონაცემთა ბაზიდან. ტეგი უნდა იყოს აკრეფილი ზუსტად ისე,/დიდი ასოების ჩათვლით/ როგორც მაშინ, როდესაც მონაცემები შეინახა.</span></p>
<p><span style="font-weight: 400;">უკეთ, რომ გავიგოთ ეს ყოველივე მოდით მივყვეთ მაგალითს. მოდით ვთქვათ ასე, ვითომ თქვენ დაგჭირდათ რაიმე სამი ინფორმიის შენახვა მონაცემთა ბაზაში შემდგომი გამოყენებისთვის. ერთი-ერთი მათგანია ჩვენი </span><i><span style="font-weight: 400;">ხილის</span></i><span style="font-weight: 400;"> სიები ბოლო სექციიდან, მეორე მათგანი არის თქვენი ასაკი და მესამე კი, თქვენი საყვარელი საქმინობა. თქვენ სამ ბრძანებას გასცემთ მონაცემთა ბაზაში აი ასე, როგორც მაგალითშია:</span></p>
<p><span style="font-weight: 400;">თქვენ ახლა გაქვთ სამი ჩანაწერი თქვენს მონაცემთა ბაზაში და აი როგორ გამოიყურებიან ისინი:</span></p>
<p><span style="font-weight: 400;">ტაგის სახელი/Tag Name: “საჭმელი”</span></p>
<p><span style="font-weight: 400;">მონაცემები:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">“ვაშლი” (ინდექსი = 1)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">“ბანანი” (ინდექსი =2)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">“ფორთოხალი” (ინდექსი = 3)</span></li>
</ul>
<p><span style="font-weight: 400;">ტაგის სახელი/Tag Name: “ჩემი ასაკი”</span></p>
<p><span style="font-weight: 400;">მონაცემები:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">16</span></li>
</ul>
<p><span style="font-weight: 400;">ტაგის სახელი/Tag Name: “საყვარელი საქმიანობა”</span></p>
<p><span style="font-weight: 400;">მონაცემები:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">,,კოდირების სწავლა” (ინექსი= 1)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">,,ოჯახთან სტუმრობა” (ინდექსი = 2)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">,,მუსიკის მოსმენა” (ინდექსი =3)</span></li>
</ul>
<p><span style="font-weight: 400;">ახლა, როდესაც გსურთ მოიძიოთ თქვენი საყვარელი საქმიანობა მონაცემებში, ამ გზით იძახებთ ინფორმაციას:</span></p>
<p><span style="font-weight: 400;">ამ ბლოკის გამოყენებისას თქვენ მიიღებთ ინფორმაციას: "ისწავლეთ კოდირება; ეწვიეთ ოჯახს; მოუსმინეთ მუსიკას". ახლა ვთქვათ, რომ გსურთ თქვენი ინფორმაციის მიღება ასაკის შესახებ. განახორციელეთ ბრძანება ასე:</span></p>
<p><span style="font-weight: 400;">ამ ბლოკის გამოყენებისას მხოლოდ ცარიელ სტრიქონს მიიღებთ: "   ". ეს იმიტომ, რომ ტაგი ,,ჩემი ასაკი’’/ "myage" არ არსებობს თქვენს მონაცემთა ბაზაში! არადა, ტაგი "MyAge" არსებობს. იმის გამო, რომ თქვენმა მონაცემთა ბაზამ ვერ იცნო ეს ტაგი მან მიგანიშნათ, რომ ნახოთ ბლოკი "valueIfTagNotThere"-ის გვერდით, რომლის სტრიქონიც ცარიელია. შეგიძლიათ ამ სტრიქონში ნებისმიერი რამ ჩაწეროთ. შეცდომითი მესიჯის ჩაწერაც კი შეგიძლიათ თქვენი მომხმარებლისთვის. </span></p>
<p><span style="font-weight: 400;">თუ გსურთ, რომ შექმნათ აპლიკაცია მრავალი ეკრანით (თქვენი სლაიდშოუ აპლიკაციის/slideshow app მსგავსად), კომპონენტები და ცვლადები ვერ შეძლებენ ერთმანეთთან საუბარს თითოეულ ეკრანზე. თქვენ უნდა გამოიყენოთ TinyDB იმისათვის, რომ გადააგზავნოთ ინფორმაცია თქვენი აპლიკაციის ერთი ეკრანიდან მეორეზე. დამატებითი ინფორმაციისთვის ეწვიეთ ამ გვერდს:</span><a href="http://appinventor.mit.edu/explore/ai2/concepts.html#Screens"><span style="font-weight: 400;">MIT Screens</span></a><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">გილოცავთ ამ თავის დასრულებას! ეს საკმაოდ ვრცელი ინფორმაცია იყო, ასე რომ ბუნებრივია, თუ ყველაფერი გასაგები არ არის ამ ატაპზე. თქვენ ყოველთვის შეგიძლიათ დაუბრუნდეთ ამ თავს, აპლიკაციის გაკეთების პროცესში. ამ კოდის გამოწვევა/Code Challenge შეიცავს ყველაფერს, რაც აქამდე გავიარეთ, ასე რომ მოსინჯეთ გამოწვევა!</span></p>
<h2><b>Code 2 Challenge: Make a To-Do List - კოდი 2-ის გამოწვევა: გასაკეთებელ დავალებათა სიის შექმნა</b></h2>
<p><span style="font-weight: 400;">აღწერა: </span><span style="font-weight: 400;">გასაკეთებელ დავალებათა სიის/</span><span style="font-weight: 400;">to-do list</span><span style="font-weight: 400;"> შექმნა</span><span style="font-weight: 400;"> საშუალებას აძლევს მომხმარებლებს შესვლის და პუნქტების გადაადგილების. ყოველ ჯერზე, როდესაც თქვენი მომხმარებელი აპს გასხნის, თქვენმა აპლიკაციამ უნდა დაიმახსოვროს ყველა პუნქტი. ალბათ გაინტერესებთ გაიგოთ, თუ როგორ გამოიყენოთ  </span><a href="http://ai2.appinventor.mit.edu/reference/components/userinterface.html#ListView"><span style="font-weight: 400;">ListView</span></a><span style="font-weight: 400;"> ჩელენჯის დაწყებამდე!</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">სცადეთ დამოუკიდებლად გააკეთოთ ეს ჩელენჯი, სანამ ინსტრუქციებს წაიკითხავდეთ. გახსოვდეთ, ეს ინსტრუქციები მხოლოდ ერთ გზას გიჩვენებენ გამოწვევის დასაძლევად! ასევე შეგიძლიათ ჩამოტვირთოთ ჩვენი აპლიკაციის მაგალითი Google Play Store- დან. ბედნიერ კოდირებას გისურვებთ!</span></p>
<p><span style="font-weight: 400;">                                               </span><a href="http://www.technovationchallenge.org/curriculum/code-2-challenge/"><span style="font-weight: 400;">SEE THE INSTRUCTIONS</span></a></p>
<p><a href="https://play.google.com/store/apps/details?id=appinventor.ai_alliec.ToDoList&amp;hl=en"><span style="font-weight: 400;">DOWNLOAD THE EXAMPLE APP</span></a></p>
<h3><b>Reflect</b></h3>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">ამ გაკვეთილში, ჩვენ ბევრი მასალა დავფარეთ! თქვენ შეისწავლეთ ყველა სხვადასხვა ტიპის მონაცემები და სხვადასხვა საშუალებები მონაცემების შესანახად და ორგანიზებიისთვის. აქ რამოდენიმე რეფლექსიური კითხვაა, რემლებიც თქვენს მენტორთან უნდა განიხილოთ:</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">Q1: როგორ შეცვალა ამ თავში ნასწავლმა ინფორმაციამ თქვენი ხედვა აპლიკაციის ყოველ დღიურად გამოყენებისადმი? </span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">Q2: თქვენი აზრით, ამ თავში ნასწავლი მასალებიდან რომელია ყველაზე გამოსადეგი თქვენი აპლიკაციის გაკეთებისას?</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">ამ სექციაში თქვენ ისწავლეთ შემდეგი საკვანძო სიტყვები:</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">მონაცემები - ინფორმაცია, რომელსაც თქვენი აპლიკაცია იყენებს</span></p>
<p><span style="font-weight: 400;">მონაცემთა ტიპი - გზა, რომლიც საშუალებითაც მონაცემებია დახარისხებელი</span></p>
<p><span style="font-weight: 400;">რიცხვითი ტიპის მონაცემთა ბაზა - მონაცემთა ტიპი, რომელიც რიცხვებს იყენებს</span></p>
<p><span style="font-weight: 400;">ტექსტების ტიპის მონაცემთა ბაზა- მონაცემთა ტიპი, რომელიც იყენებს ტექსტს</span></p>
<p><span style="font-weight: 400;">ლოგიკური ტიპის მონაცემთა ბაზა - მონაცემთა ტიპი, რომელიც ან ჭეშმარიტია ან ყალბი</span></p>
<p><span style="font-weight: 400;">ცვლადი - მონაცემების ნაწყვეტის სახელი, რომელიც შეიძლება შეიცვალოს</span></p>
<p><span style="font-weight: 400;">გლობალური ცვლადი - ცვლადი, რომელიც შეიძლება გამოყენებულ იქნას თქვენი კოდის ნებისმიერ წერტილში</span></p>
<p><span style="font-weight: 400;">ლოკალური ცვლადი - ცვლადი, რომელიც გამოიყენება მხოლოდ კონკრეტული სექციის კოდით</span></p>
<p><span style="font-weight: 400;">სია - მრავალნაირი მონაცემების ორგანიზების გზა</span></p>
<p><span style="font-weight: 400;">სიის ინდექსი - ნომერი, რომელიც წარმოადგენს მონაცემების ადგილს სიაში</span></p>
<p><span style="font-weight: 400;">მონაცემთა ბაზა - ინფორმაციის შენახვისა და ორგანიზების ადგილი</span></p>
<p><span style="font-weight: 400;">დამატებითი რესურსები</span></p>
<p><span style="font-weight: 400;">აქ არის დამატებითი რესურსები მონაცემთა ბაზებზე. თქვენ შეგიძლიათ გამოიყენოთ ეს ახლა ან თუ დახმარება დაგჭირდებათ თქვენი აპის შექმნისას!</span></p>
<p>&nbsp;</p>
<p><b>Additional Resources</b></p>
<p><span style="font-weight: 400;">Here are some additional resources on databases. You can use these now or if you need help when building your app!</span></p>
<ul>
<li style="font-weight: 400;"><a href="https://drive.google.com/a/iridescentlearning.org/file/d/0B3rEYL3DkWfAd003UmM2cl9ITDg/view"><span style="font-weight: 400;">TinyDB101</span></a></li>
<li style="font-weight: 400;"><a href="https://drive.google.com/a/iridescentlearning.org/file/d/0B3rEYL3DkWfAZUVQVGxPZzdXTXc/view"><span style="font-weight: 400;">TinyDB102</span></a></li>
</ul>
